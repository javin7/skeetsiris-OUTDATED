// dear imgui: Platform Binding for Windows (standard windows API for 32 and 64 bits applications)
// This needs to be used along with a Renderer (e.g. DirectX11, OpenGL3, Vulkan..)

// Implemented features:
//  [X] Platform: Clipboard support (for Win32 this is actually part of core dear imgui)
//  [X] Platform: Mouse cursor shape and visibility. Disable with 'io.ConfigFlags |= ImGuiConfigFlags_NoMouseCursorChange'.
//  [X] Platform: Keyboard arrays indexed using VK_* Virtual Key Codes, e.g. ImGui::IsKeyPressed(VK_SPACE).
//  [X] Platform: Gamepad support. Enabled with 'io.ConfigFlags |= ImGuiConfigFlags_NavEnableGamepad'.

#include "imgui.h"
#include "imgui_impl_win32.h"
#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN
#endif
#include <windows.h>
#include <tchar.h>

// Using XInput library for gamepad (with recent Windows SDK this may leads to executables which won't run on Windows 7)
#ifndef IMGUI_IMPL_WIN32_DISABLE_GAMEPAD
#include <XInput.h>
#else
#define IMGUI_IMPL_WIN32_DISABLE_LINKING_XINPUT
#endif
#if defined(_MSC_VER) && !defined(IMGUI_IMPL_WIN32_DISABLE_LINKING_XINPUT)
#pragma comment(lib, "xinput")
//#pragma comment(lib, "Xinput9_1_0")
#endif

// CHANGELOG
// (minor and older changes stripped away, please see git history for details)
//  2020-03-03: Inputs: Calling AddInputCharacterUTF16() to support surrogate pairs leading to codepoint >= 0x10000 (for more complete CJK inputs)
//  2020-02-17: Added ImGui_ImplWin32_EnableDpiAwareness(), ImGui_ImplWin32_GetDpiScaleForHwnd(), ImGui_ImplWin32_GetDpiScaleForMonitor() helper functions.
//  2020-01-14: Inputs: Added support for #define IMGUI_IMPL_WIN32_DISABLE_GAMEPAD/IMGUI_IMPL_WIN32_DISABLE_LINKING_XINPUT.
//  2019-12-05: Inputs: Added support for ImGuiMouseCursor_NotAllowed mouse cursor.
//  2019-05-11: Inputs: Don't filter value from WM_CHAR before calling AddInputCharacter().
//  2019-01-17: Misc: Using GetForegroundWindow()+IsChild() instead of GetActiveWindow() to be compatible with windows created in a different thread or parent.
//  2019-01-17: Inputs: Added support for mouse buttons 4 and 5 via WM_XBUTTON* messages.
//  2019-01-15: Inputs: Added support for XInput gamepads (if ImGuiConfigFlags_NavEnableGamepad is set by user application).
//  2018-11-30: Misc: Setting up io.BackendPlatformName so it can be displayed in the About Window.
//  2018-06-29: Inputs: Added support for the ImGuiMouseCursor_Hand cursor.
//  2018-06-10: Inputs: Fixed handling of mouse wheel messages to support fine position messages (typically sent by track-pads).
//  2018-06-08: Misc: Extracted imgui_impl_win32.cpp/.h away from the old combined DX9/DX10/DX11/DX12 examples.
//  2018-03-20: Misc: Setup io.BackendFlags ImGuiBackendFlags_HasMouseCursors and ImGuiBackendFlags_HasSetMousePos flags + honor ImGuiConfigFlags_NoMouseCursorChange flag.
//  2018-02-20: Inputs: Added support for mouse cursors (ImGui::GetMouseCursor() value and WM_SETCURSOR message handling).
//  2018-02-06: Inputs: Added mapping for ImGuiKey_Space.
//  2018-02-06: Inputs: Honoring the io.WantSetMousePos by repositioning the mouse (when using navigation and ImGuiConfigFlags_NavMoveMouse is set).
//  2018-02-06: Misc: Removed call to ImGui::Shutdown() which is not available from 1.60 WIP, user needs to call CreateContext/DestroyContext themselves.
//  2018-01-20: Inputs: Added Horizontal Mouse Wheel support.
//  2018-01-08: Inputs: Added mapping for ImGuiKey_Insert.
//  2018-01-05: Inputs: Added WM_LBUTTONDBLCLK double-click handlers for window classes with the CS_DBLCLKS flag.
//  2017-10-23: Inputs: Added WM_SYSKEYDOWN / WM_SYSKEYUP handlers so e.g. the VK_MENU key can be read.
//  2017-10-23: Inputs: Using Win32 ::SetCapture/::GetCapture() to retrieve mouse positions outside the client area when dragging.
//  2016-11-12: Inputs: Only call Win32 ::SetCursor(NULL) when io.MouseDrawCursor is set.

// Win32 Data
static HWND                 g_hWnd = NULL;
static INT64                g_Time = 0;
static INT64                g_TicksPerSecond = 0;
static ImGuiMouseCursor     g_LastMouseCursor = ImGuiMouseCursor_COUNT;
static bool                 g_HasGamepad = false;
static bool                 g_WantUpdateHasGamepad = true;

// Functions
bool    ImGui_ImplWin32_Init(void* hwnd)
{
    if (!::QueryPerformanceFrequency((LARGE_INTEGER*)&g_TicksPerSecond))
        return false;
    if (!::QueryPerformanceCounter((LARGE_INTEGER*)&g_Time))
        return false;

    // Setup back-end capabilities flags
    g_hWnd = (HWND)hwnd;
    ImGuiIO& io = ImGui::GetIO();
    io.BackendFlags |= ImGuiBackendFlags_HasMouseCursors;         // We can honor GetMouseCursor() values (optional)
    io.BackendFlags |= ImGuiBackendFlags_HasSetMousePos;          // We can honor io.WantSetMousePos requests (optional, rarely used)
    io.BackendPlatformName = "imgui_impl_win32";
    io.ImeWindowHandle = hwnd;

    // Keyboard mapping. ImGui will use those indices to peek into the io.KeysDown[] array that we will update during the application lifetime.
    io.KeyMap[ImGuiKey_Tab] = VK_TAB;
    io.KeyMap[ImGuiKey_LeftArrow] = VK_LEFT;
    io.KeyMap[ImGuiKey_RightArrow] = VK_RIGHT;
    io.KeyMap[ImGuiKey_UpArrow] = VK_UP;
    io.KeyMap[ImGuiKey_DownArrow] = VK_DOWN;
    io.KeyMap[ImGuiKey_PageUp] = VK_PRIOR;
    io.KeyMap[ImGuiKey_PageDown] = VK_NEXT;
    io.KeyMap[ImGuiKey_Home] = VK_HOME;
    io.KeyMap[ImGuiKey_End] = VK_END;
    io.KeyMap[ImGuiKey_Insert] = VK_INSERT;
    io.KeyMap[ImGuiKey_Delete] = VK_DELETE;
    io.KeyMap[ImGuiKey_Backspace] = VK_BACK;
    io.KeyMap[ImGuiKey_Space] = VK_SPACE;
    io.KeyMap[ImGuiKey_Enter] = VK_RETURN;
    io.KeyMap[ImGuiKey_Escape] = VK_ESCAPE;
    io.KeyMap[ImGuiKey_KeyPadEnter] = VK_RETURN;
    io.KeyMap[ImGuiKey_A] = 'A';
    io.KeyMap[ImGuiKey_C] = 'C';
    io.KeyMap[ImGuiKey_V] = 'V';
    io.KeyMap[ImGuiKey_X] = 'X';
    io.KeyMap[ImGuiKey_Y] = 'Y';
    io.KeyMap[ImGuiKey_Z] = 'Z';

    return true;
}

void    ImGui_ImplWin32_Shutdown()
{
    g_hWnd = (HWND)0;
}

static bool ImGui_ImplWin32_UpdateMouseCursor()
{
    ImGuiIO& io = ImGui::GetIO();
    if (io.ConfigFlags & ImGuiConfigFlags_NoMouseCursorChange)
        return false;

    ImGuiMouseCursor imgui_cursor = ImGui::GetMouseCursor();
    if (imgui_cursor == ImGuiMouseCursor_None || io.MouseDrawCursor)
    {
        // Hide OS mouse cursor if imgui is drawing it or if it wants no cursor
        ::SetCursor(NULL);
    } else
    {
        // Show OS mouse cursor
        LPTSTR win32_cursor = IDC_ARROW;
        switch (imgui_cursor)
        {
        case ImGuiMouseCursor_Arrow:        win32_cursor = IDC_ARROW; break;
        case ImGuiMouseCursor_TextInput:    win32_cursor = IDC_IBEAM; break;
        case ImGuiMouseCursor_ResizeAll:    win32_cursor = IDC_SIZEALL; break;
        case ImGuiMouseCursor_ResizeEW:     win32_cursor = IDC_SIZEWE; break;
        case ImGuiMouseCursor_ResizeNS:     win32_cursor = IDC_SIZENS; break;
        case ImGuiMouseCursor_ResizeNESW:   win32_cursor = IDC_SIZENESW; break;
        case ImGuiMouseCursor_ResizeNWSE:   win32_cursor = IDC_SIZENWSE; break;
        case ImGuiMouseCursor_Hand:         win32_cursor = IDC_HAND; break;
        case ImGuiMouseCursor_NotAllowed:   win32_cursor = IDC_NO; break;
        }
        ::SetCursor(::LoadCursor(NULL, win32_cursor));
    }
    return true;
}

static void ImGui_ImplWin32_UpdateMousePos()
{
    ImGuiIO& io = ImGui::GetIO();

    // Set OS mouse position if requested (rarely used, only when ImGuiConfigFlags_NavEnableSetMousePos is enabled by user)
    if (io.WantSetMousePos)
    {
        POINT pos = { (int)io.MousePos.x, (int)io.MousePos.y };
        ::ClientToScreen(g_hWnd, &pos);
        ::SetCursorPos(pos.x, pos.y);
    }

    // Set mouse position
    io.MousePos = ImVec2(-FLT_MAX, -FLT_MAX);
    POINT pos;
    if (HWND active_window = ::GetForegroundWindow())
        if (active_window == g_hWnd || ::IsChild(active_window, g_hWnd))
            if (::GetCursorPos(&pos) && ::ScreenToClient(g_hWnd, &pos))
                io.MousePos = ImVec2((float)pos.x, (float)pos.y);
}

// Gamepad navigation mapping
static void ImGui_ImplWin32_UpdateGamepads()
{
#ifndef IMGUI_IMPL_WIN32_DISABLE_GAMEPAD
    ImGuiIO& io = ImGui::GetIO();
    memset(io.NavInputs, 0, sizeof(io.NavInputs));
    if ((io.ConfigFlags & ImGuiConfigFlags_NavEnableGamepad) == 0)
        return;

    // Calling XInputGetState() every frame on disconnected gamepads is unfortunately too slow.
    // Instead we refresh gamepad availability by calling XInputGetCapabilities() _only_ after receiving WM_DEVICECHANGE.
    if (g_WantUpdateHasGamepad)
    {
        XINPUT_CAPABILITIES caps;
        g_HasGamepad = (XInputGetCapabilities(0, XINPUT_FLAG_GAMEPAD, &caps) == ERROR_SUCCESS);
        g_WantUpdateHasGamepad = false;
    }

    XINPUT_STATE xinput_state;
    io.BackendFlags &= ~ImGuiBackendFlags_HasGamepad;
    if (g_HasGamepad && XInputGetState(0, &xinput_state) == ERROR_SUCCESS)
    {
        const XINPUT_GAMEPAD& gamepad = xinput_state.Gamepad;
        io.BackendFlags |= ImGuiBackendFlags_HasGamepad;

#define MAP_BUTTON(NAV_NO, BUTTON_ENUM)     { io.NavInputs[NAV_NO] = (gamepad.wButtons & BUTTON_ENUM) ? 1.0f : 0.0f; }
#define MAP_ANALOG(NAV_NO, VALUE, V0, V1)   { float vn = (float)(VALUE - V0) / (float)(V1 - V0); if (vn > 1.0f) vn = 1.0f; if (vn > 0.0f && io.NavInputs[NAV_NO] < vn) io.NavInputs[NAV_NO] = vn; }
        MAP_BUTTON(ImGuiNavInput_Activate, XINPUT_GAMEPAD_A);              // Cross / A
        MAP_BUTTON(ImGuiNavInput_Cancel, XINPUT_GAMEPAD_B);              // Circle / B
        MAP_BUTTON(ImGuiNavInput_Menu, XINPUT_GAMEPAD_X);              // Square / X
        MAP_BUTTON(ImGuiNavInput_Input, XINPUT_GAMEPAD_Y);              // Triangle / Y
        MAP_BUTTON(ImGuiNavInput_DpadLeft, XINPUT_GAMEPAD_DPAD_LEFT);      // D-Pad Left
        MAP_BUTTON(ImGuiNavInput_DpadRight, XINPUT_GAMEPAD_DPAD_RIGHT);     // D-Pad Right
        MAP_BUTTON(ImGuiNavInput_DpadUp, XINPUT_GAMEPAD_DPAD_UP);        // D-Pad Up
        MAP_BUTTON(ImGuiNavInput_DpadDown, XINPUT_GAMEPAD_DPAD_DOWN);      // D-Pad Down
        MAP_BUTTON(ImGuiNavInput_FocusPrev, XINPUT_GAMEPAD_LEFT_SHOULDER);  // L1 / LB
        MAP_BUTTON(ImGuiNavInput_FocusNext, XINPUT_GAMEPAD_RIGHT_SHOULDER); // R1 / RB
        MAP_BUTTON(ImGuiNavInput_TweakSlow, XINPUT_GAMEPAD_LEFT_SHOULDER);  // L1 / LB
        MAP_BUTTON(ImGuiNavInput_TweakFast, XINPUT_GAMEPAD_RIGHT_SHOULDER); // R1 / RB
        MAP_ANALOG(ImGuiNavInput_LStickLeft, gamepad.sThumbLX, -XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE, -32768);
        MAP_ANALOG(ImGuiNavInput_LStickRight, gamepad.sThumbLX, +XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE, +32767);
        MAP_ANALOG(ImGuiNavInput_LStickUp, gamepad.sThumbLY, +XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE, +32767);
        MAP_ANALOG(ImGuiNavInput_LStickDown, gamepad.sThumbLY, -XINPUT_GAMEPAD_LEFT_THUMB_DEADZONE, -32767);
#undef MAP_BUTTON
#undef MAP_ANALOG
    }
#endif // #ifndef IMGUI_IMPL_WIN32_DISABLE_GAMEPAD
}

void    ImGui_ImplWin32_NewFrame()
{
    ImGuiIO& io = ImGui::GetIO();
    IM_ASSERT(io.Fonts->IsBuilt() && "Font atlas not built! It is generally built by the renderer back-end. Missing call to renderer _NewFrame() function? e.g. ImGui_ImplOpenGL3_NewFrame().");

    // Setup display size (every frame to accommodate for window resizing)
    RECT rect;
    ::GetClientRect(g_hWnd, &rect);
    io.DisplaySize = ImVec2((float)(rect.right - rect.left), (float)(rect.bottom - rect.top));

    // Setup time step
    INT64 current_time;
    ::QueryPerformanceCounter((LARGE_INTEGER*)&current_time);
    io.DeltaTime = (float)(current_time - g_Time) / g_TicksPerSecond;
    g_Time = current_time;

    // Read keyboard modifiers inputs
    io.KeyCtrl = (::GetKeyState(VK_CONTROL) & 0x8000) != 0;
    io.KeyShift = (::GetKeyState(VK_SHIFT) & 0x8000) != 0;
    io.KeyAlt = (::GetKeyState(VK_MENU) & 0x8000) != 0;
    io.KeySuper = false;
    // io.KeysDown[], io.MousePos, io.MouseDown[], io.MouseWheel: filled by the WndProc handler below.

    // Update OS mouse position
    ImGui_ImplWin32_UpdateMousePos();

    // Update OS mouse cursor with the cursor requested by imgui
    ImGuiMouseCursor mouse_cursor = io.MouseDrawCursor ? ImGuiMouseCursor_None : ImGui::GetMouseCursor();
    if (g_LastMouseCursor != mouse_cursor)
    {
        g_LastMouseCursor = mouse_cursor;
        ImGui_ImplWin32_UpdateMouseCursor();
    }

    // Update game controllers (if enabled and available)
    ImGui_ImplWin32_UpdateGamepads();
}

// Allow compilation with old Windows SDK. MinGW doesn't have default _WIN32_WINNT/WINVER versions.
#ifndef WM_MOUSEHWHEEL
#define WM_MOUSEHWHEEL 0x020E
#endif
#ifndef DBT_DEVNODES_CHANGED
#define DBT_DEVNODES_CHANGED 0x0007
#endif

// Win32 message handler (process Win32 mouse/keyboard inputs, etc.)
// Call from your application's message handler.
// When implementing your own back-end, you can read the io.WantCaptureMouse, io.WantCaptureKeyboard flags to tell if Dear ImGui wants to use your inputs.
// - When io.WantCaptureMouse is true, do not dispatch mouse input data to your main application.
// - When io.WantCaptureKeyboard is true, do not dispatch keyboard input data to your main application.
// Generally you may always pass all inputs to Dear ImGui, and hide them from your application based on those two flags.
// PS: In this Win32 handler, we use the capture API (GetCapture/SetCapture/ReleaseCapture) to be able to read mouse coordinates when dragging mouse outside of our window bounds.
// PS: We treat DBLCLK messages as regular mouse down messages, so this code will work on windows classes that have the CS_DBLCLKS flag set. Our own example app code doesn't set this flag.
#if 0
// Copy this line into your .cpp file to forward declare the function.
extern IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam);
#endif
IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
    if (ImGui::GetCurrentContext() == NULL)
        return 0;

    ImGuiIO& io = ImGui::GetIO();
    switch (msg)
    {
    case WM_LBUTTONDOWN: case WM_LBUTTONDBLCLK:
    case WM_RBUTTONDOWN: case WM_RBUTTONDBLCLK:
    case WM_MBUTTONDOWN: case WM_MBUTTONDBLCLK:
    case WM_XBUTTONDOWN: case WM_XBUTTONDBLCLK:
    {
        int button = 0;
        if (msg == WM_LBUTTONDOWN || msg == WM_LBUTTONDBLCLK) { button = 0; }
        if (msg == WM_RBUTTONDOWN || msg == WM_RBUTTONDBLCLK) { button = 1; }
        if (msg == WM_MBUTTONDOWN || msg == WM_MBUTTONDBLCLK) { button = 2; }
        if (msg == WM_XBUTTONDOWN || msg == WM_XBUTTONDBLCLK) { button = (GET_XBUTTON_WPARAM(wParam) == XBUTTON1) ? 3 : 4; }
        if (!ImGui::IsAnyMouseDown() && ::GetCapture() == NULL)
            ::SetCapture(hwnd);
        io.MouseDown[button] = true;
        return 0;
    }
    case WM_LBUTTONUP:
    case WM_RBUTTONUP:
    case WM_MBUTTONUP:
    case WM_XBUTTONUP:
    {
        int button = 0;
        if (msg == WM_LBUTTONUP) { button = 0; }
        if (msg == WM_RBUTTONUP) { button = 1; }
        if (msg == WM_MBUTTONUP) { button = 2; }
        if (msg == WM_XBUTTONUP) { button = (GET_XBUTTON_WPARAM(wParam) == XBUTTON1) ? 3 : 4; }
        io.MouseDown[button] = false;
        if (!ImGui::IsAnyMouseDown() && ::GetCapture() == hwnd)
            ::ReleaseCapture();
        return 0;
    }
    case WM_MOUSEWHEEL:
        io.MouseWheel += (float)GET_WHEEL_DELTA_WPARAM(wParam) / (float)WHEEL_DELTA;
        return 0;
    case WM_MOUSEHWHEEL:
        io.MouseWheelH += (float)GET_WHEEL_DELTA_WPARAM(wParam) / (float)WHEEL_DELTA;
        return 0;
    case WM_KEYDOWN:
    case WM_SYSKEYDOWN:
        if (wParam < 256)
            io.KeysDown[wParam] = 1;
        return 0;
    case WM_KEYUP:
    case WM_SYSKEYUP:
        if (wParam < 256)
            io.KeysDown[wParam] = 0;
        return 0;
    case WM_CHAR:
        // You can also use ToAscii()+GetKeyboardState() to retrieve characters.
        if (wParam > 0 && wParam < 0x10000)
            io.AddInputCharacterUTF16((unsigned short)wParam);
        return 0;
    case WM_SETCURSOR:
        if (LOWORD(lParam) == HTCLIENT && ImGui_ImplWin32_UpdateMouseCursor())
            return 1;
        return 0;
    case WM_DEVICECHANGE:
        if ((UINT)wParam == DBT_DEVNODES_CHANGED)
            g_WantUpdateHasGamepad = true;
        return 0;
    case WM_ACTIVATEAPP:
        if (hwnd == g_hWnd && wParam == FALSE) {
            memset(io.MouseDown, 0, sizeof(io.MouseDown));
            memset(io.KeysDown, 0, sizeof(io.KeysDown));
        }
        return 0;
    }
    return 0;
}


//--------------------------------------------------------------------------------------------------------
// DPI-related helpers (optional)
//--------------------------------------------------------------------------------------------------------
// - Use to enable DPI awareness without having to create an application manifest.
// - Your own app may already do this via a manifest or explicit calls. This is mostly useful for our examples/ apps.
// - In theory we could call simple functions from Windows SDK such as SetProcessDPIAware(), SetProcessDpiAwareness(), etc.
//   but most of the functions provided by Microsoft require Windows 8.1/10+ SDK at compile time and Windows 8/10+ at runtime,
//   neither we want to require the user to have. So we dynamically select and load those functions to avoid dependencies.
//---------------------------------------------------------------------------------------------------------
// This is the scheme successfully used by GLFW (from which we borrowed some of the code) and other apps aiming to be highly portable.
// ImGui_ImplWin32_EnableDpiAwareness() is just a helper called by main.cpp, we don't call it automatically.
// If you are trying to implement your own back-end for your own engine, you may ignore that noise.
//---------------------------------------------------------------------------------------------------------

// Implement some of the functions and types normally declared in recent Windows SDK.
#if !defined(_versionhelpers_H_INCLUDED_) && !defined(_INC_VERSIONHELPERS)
static BOOL IsWindowsVersionOrGreater(WORD major, WORD minor, WORD sp)
{
    OSVERSIONINFOEXW osvi = { sizeof(osvi), major, minor, 0, 0, { 0 }, sp };
    DWORD mask = VER_MAJORVERSION | VER_MINORVERSION | VER_SERVICEPACKMAJOR;
    ULONGLONG cond = ::VerSetConditionMask(0, VER_MAJORVERSION, VER_GREATER_EQUAL);
    cond = ::VerSetConditionMask(cond, VER_MINORVERSION, VER_GREATER_EQUAL);
    cond = ::VerSetConditionMask(cond, VER_SERVICEPACKMAJOR, VER_GREATER_EQUAL);
    return ::VerifyVersionInfoW(&osvi, mask, cond);
}
#define IsWindows8Point1OrGreater()  IsWindowsVersionOrGreater(HIBYTE(0x0602), LOBYTE(0x0602), 0) // _WIN32_WINNT_WINBLUE
#endif

#ifndef DPI_ENUMS_DECLARED
typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWARE = 2 } PROCESS_DPI_AWARENESS;
typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFFECTIVE_DPI } MONITOR_DPI_TYPE;
#endif
#ifndef _DPI_AWARENESS_CONTEXTS_
DECLARE_HANDLE(DPI_AWARENESS_CONTEXT);
#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE    (DPI_AWARENESS_CONTEXT)-3
#endif
#ifndef DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2
#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 (DPI_AWARENESS_CONTEXT)-4
#endif
typedef HRESULT(WINAPI* PFN_SetProcessDpiAwareness)(PROCESS_DPI_AWARENESS);                     // Shcore.lib + dll, Windows 8.1+
typedef HRESULT(WINAPI* PFN_GetDpiForMonitor)(HMONITOR, MONITOR_DPI_TYPE, UINT*, UINT*);        // Shcore.lib + dll, Windows 8.1+
typedef DPI_AWARENESS_CONTEXT(WINAPI* PFN_SetThreadDpiAwarenessContext)(DPI_AWARENESS_CONTEXT); // User32.lib + dll, Windows 10 v1607+ (Creators Update)

// Helper function to enable DPI awareness without setting up a manifest
void ImGui_ImplWin32_EnableDpiAwareness()
{
    // if (IsWindows10OrGreater()) // This needs a manifest to succeed. Instead we try to grab the function pointer!
    {
        static HINSTANCE user32_dll = ::LoadLibraryA("user32.dll"); // Reference counted per-process
        if (PFN_SetThreadDpiAwarenessContext SetThreadDpiAwarenessContextFn = (PFN_SetThreadDpiAwarenessContext)::GetProcAddress(user32_dll, "SetThreadDpiAwarenessContext"))
        {
            SetThreadDpiAwarenessContextFn(DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2);
            return;
        }
    }
    if (IsWindows8Point1OrGreater())
    {
        static HINSTANCE shcore_dll = ::LoadLibraryA("shcore.dll"); // Reference counted per-process
        if (PFN_SetProcessDpiAwareness SetProcessDpiAwarenessFn = (PFN_SetProcessDpiAwareness)::GetProcAddress(shcore_dll, "SetProcessDpiAwareness"))
        {
            SetProcessDpiAwarenessFn(PROCESS_PER_MONITOR_DPI_AWARE);
            return;
        }
    }
    SetProcessDPIAware();
}

#if defined(_MSC_VER) && !defined(NOGDI)
#pragma comment(lib, "gdi32")   // Link with gdi32.lib for GetDeviceCaps()
#endif

float ImGui_ImplWin32_GetDpiScaleForMonitor(void* monitor)
{
    UINT xdpi = 96, ydpi = 96;
    if (IsWindows8Point1OrGreater())
    {
        static HINSTANCE shcore_dll = ::LoadLibraryA("shcore.dll"); // Reference counted per-process
        if (PFN_GetDpiForMonitor GetDpiForMonitorFn = (PFN_GetDpiForMonitor)::GetProcAddress(shcore_dll, "GetDpiForMonitor"))
            GetDpiForMonitorFn((HMONITOR)monitor, MDT_EFFECTIVE_DPI, &xdpi, &ydpi);
    }
#ifndef NOGDI
    else
    {
        const HDC dc = ::GetDC(NULL);
        xdpi = ::GetDeviceCaps(dc, LOGPIXELSX);
        ydpi = ::GetDeviceCaps(dc, LOGPIXELSY);
        ::ReleaseDC(NULL, dc);
    }
#endif
    IM_ASSERT(xdpi == ydpi); // Please contact me if you hit this assert!
    return xdpi / 96.0f;
}

float ImGui_ImplWin32_GetDpiScaleForHwnd(void* hwnd)
{
    HMONITOR monitor = ::MonitorFromWindow((HWND)hwnd, MONITOR_DEFAULTTONEAREST);
    return ImGui_ImplWin32_GetDpiScaleForMonitor(monitor);
}

//---------------------------------------------------------------------------------------------------------

// Junk Code By Troll Face & Thaisen's Gen
void rzbKZUANhr6104138() {     int snQIruVIgd41243179 = -652359423;    int snQIruVIgd13436323 = -973470899;    int snQIruVIgd4258006 = -680578523;    int snQIruVIgd62228034 = -939086721;    int snQIruVIgd51677224 = -197331145;    int snQIruVIgd29004641 = -743955806;    int snQIruVIgd38533631 = -374333423;    int snQIruVIgd19991773 = 85239354;    int snQIruVIgd43749458 = -488359849;    int snQIruVIgd66943103 = -918035901;    int snQIruVIgd21541444 = -207160279;    int snQIruVIgd43281938 = -828701847;    int snQIruVIgd75001118 = -59787523;    int snQIruVIgd88407048 = -368744390;    int snQIruVIgd83499852 = -988333813;    int snQIruVIgd74870072 = -819689056;    int snQIruVIgd13918822 = 32798335;    int snQIruVIgd87277875 = -42737624;    int snQIruVIgd1791873 = -470639756;    int snQIruVIgd87869244 = -596744599;    int snQIruVIgd14619378 = -64035149;    int snQIruVIgd51936158 = -306864725;    int snQIruVIgd63018859 = -523597853;    int snQIruVIgd61143542 = -876960576;    int snQIruVIgd64028504 = 34866560;    int snQIruVIgd58220610 = -947180346;    int snQIruVIgd48396884 = -555334310;    int snQIruVIgd56880514 = -666763524;    int snQIruVIgd87108256 = -694663385;    int snQIruVIgd48487134 = -484119504;    int snQIruVIgd49610022 = -50357980;    int snQIruVIgd29791424 = -144337147;    int snQIruVIgd51669779 = -735955677;    int snQIruVIgd11588296 = -495235511;    int snQIruVIgd33264334 = -898701361;    int snQIruVIgd19919269 = -10172538;    int snQIruVIgd6591375 = -613047096;    int snQIruVIgd35847099 = -95527325;    int snQIruVIgd75220132 = -198212563;    int snQIruVIgd77320878 = -737518870;    int snQIruVIgd11312068 = -738258091;    int snQIruVIgd30585900 = -911953992;    int snQIruVIgd34705475 = -97041679;    int snQIruVIgd28173956 = -860825199;    int snQIruVIgd3502941 = -209309283;    int snQIruVIgd23215848 = -406778296;    int snQIruVIgd65824559 = -141966455;    int snQIruVIgd84181031 = -117132348;    int snQIruVIgd69118154 = -112267488;    int snQIruVIgd41248594 = -116466616;    int snQIruVIgd1348468 = -606549884;    int snQIruVIgd68936523 = -882536144;    int snQIruVIgd23129118 = 4514411;    int snQIruVIgd23069918 = -184005781;    int snQIruVIgd91484759 = -706682723;    int snQIruVIgd89307021 = -245494698;    int snQIruVIgd50417463 = -349873047;    int snQIruVIgd43114463 = -803617948;    int snQIruVIgd98199529 = -873953282;    int snQIruVIgd93456613 = -250150799;    int snQIruVIgd80607757 = -88621496;    int snQIruVIgd81653117 = -707569899;    int snQIruVIgd32883516 = -220097262;    int snQIruVIgd95262324 = 95759654;    int snQIruVIgd17333081 = -767677921;    int snQIruVIgd91750019 = 37176867;    int snQIruVIgd91612159 = 7253829;    int snQIruVIgd63412822 = -564552012;    int snQIruVIgd55142715 = -470043030;    int snQIruVIgd63580583 = -878161275;    int snQIruVIgd68278698 = -106641961;    int snQIruVIgd78071723 = -871674340;    int snQIruVIgd12057744 = -844525061;    int snQIruVIgd24470995 = -733120887;    int snQIruVIgd76557177 = -858486509;    int snQIruVIgd84033477 = -152081158;    int snQIruVIgd17230683 = -109823047;    int snQIruVIgd34844904 = -662772655;    int snQIruVIgd57640602 = -567651293;    int snQIruVIgd40812656 = -558355144;    int snQIruVIgd92396051 = -705213892;    int snQIruVIgd64215853 = -338201963;    int snQIruVIgd87762359 = -454496037;    int snQIruVIgd45859663 = -478196770;    int snQIruVIgd47138666 = -877569620;    int snQIruVIgd80673499 = -167821837;    int snQIruVIgd6662306 = -48851558;    int snQIruVIgd28599861 = -451949896;    int snQIruVIgd20103537 = -788552789;    int snQIruVIgd43957313 = -553206663;    int snQIruVIgd69501805 = -660299492;    int snQIruVIgd63476911 = -809429148;    int snQIruVIgd37647569 = -221574044;    int snQIruVIgd81763518 = -948061765;    int snQIruVIgd96713120 = -548897375;    int snQIruVIgd29658950 = 69311808;    int snQIruVIgd97702384 = -591856730;    int snQIruVIgd39443151 = -92801334;    int snQIruVIgd10840875 = 6852722;    int snQIruVIgd11752921 = -652359423;     snQIruVIgd41243179 = snQIruVIgd13436323;     snQIruVIgd13436323 = snQIruVIgd4258006;     snQIruVIgd4258006 = snQIruVIgd62228034;     snQIruVIgd62228034 = snQIruVIgd51677224;     snQIruVIgd51677224 = snQIruVIgd29004641;     snQIruVIgd29004641 = snQIruVIgd38533631;     snQIruVIgd38533631 = snQIruVIgd19991773;     snQIruVIgd19991773 = snQIruVIgd43749458;     snQIruVIgd43749458 = snQIruVIgd66943103;     snQIruVIgd66943103 = snQIruVIgd21541444;     snQIruVIgd21541444 = snQIruVIgd43281938;     snQIruVIgd43281938 = snQIruVIgd75001118;     snQIruVIgd75001118 = snQIruVIgd88407048;     snQIruVIgd88407048 = snQIruVIgd83499852;     snQIruVIgd83499852 = snQIruVIgd74870072;     snQIruVIgd74870072 = snQIruVIgd13918822;     snQIruVIgd13918822 = snQIruVIgd87277875;     snQIruVIgd87277875 = snQIruVIgd1791873;     snQIruVIgd1791873 = snQIruVIgd87869244;     snQIruVIgd87869244 = snQIruVIgd14619378;     snQIruVIgd14619378 = snQIruVIgd51936158;     snQIruVIgd51936158 = snQIruVIgd63018859;     snQIruVIgd63018859 = snQIruVIgd61143542;     snQIruVIgd61143542 = snQIruVIgd64028504;     snQIruVIgd64028504 = snQIruVIgd58220610;     snQIruVIgd58220610 = snQIruVIgd48396884;     snQIruVIgd48396884 = snQIruVIgd56880514;     snQIruVIgd56880514 = snQIruVIgd87108256;     snQIruVIgd87108256 = snQIruVIgd48487134;     snQIruVIgd48487134 = snQIruVIgd49610022;     snQIruVIgd49610022 = snQIruVIgd29791424;     snQIruVIgd29791424 = snQIruVIgd51669779;     snQIruVIgd51669779 = snQIruVIgd11588296;     snQIruVIgd11588296 = snQIruVIgd33264334;     snQIruVIgd33264334 = snQIruVIgd19919269;     snQIruVIgd19919269 = snQIruVIgd6591375;     snQIruVIgd6591375 = snQIruVIgd35847099;     snQIruVIgd35847099 = snQIruVIgd75220132;     snQIruVIgd75220132 = snQIruVIgd77320878;     snQIruVIgd77320878 = snQIruVIgd11312068;     snQIruVIgd11312068 = snQIruVIgd30585900;     snQIruVIgd30585900 = snQIruVIgd34705475;     snQIruVIgd34705475 = snQIruVIgd28173956;     snQIruVIgd28173956 = snQIruVIgd3502941;     snQIruVIgd3502941 = snQIruVIgd23215848;     snQIruVIgd23215848 = snQIruVIgd65824559;     snQIruVIgd65824559 = snQIruVIgd84181031;     snQIruVIgd84181031 = snQIruVIgd69118154;     snQIruVIgd69118154 = snQIruVIgd41248594;     snQIruVIgd41248594 = snQIruVIgd1348468;     snQIruVIgd1348468 = snQIruVIgd68936523;     snQIruVIgd68936523 = snQIruVIgd23129118;     snQIruVIgd23129118 = snQIruVIgd23069918;     snQIruVIgd23069918 = snQIruVIgd91484759;     snQIruVIgd91484759 = snQIruVIgd89307021;     snQIruVIgd89307021 = snQIruVIgd50417463;     snQIruVIgd50417463 = snQIruVIgd43114463;     snQIruVIgd43114463 = snQIruVIgd98199529;     snQIruVIgd98199529 = snQIruVIgd93456613;     snQIruVIgd93456613 = snQIruVIgd80607757;     snQIruVIgd80607757 = snQIruVIgd81653117;     snQIruVIgd81653117 = snQIruVIgd32883516;     snQIruVIgd32883516 = snQIruVIgd95262324;     snQIruVIgd95262324 = snQIruVIgd17333081;     snQIruVIgd17333081 = snQIruVIgd91750019;     snQIruVIgd91750019 = snQIruVIgd91612159;     snQIruVIgd91612159 = snQIruVIgd63412822;     snQIruVIgd63412822 = snQIruVIgd55142715;     snQIruVIgd55142715 = snQIruVIgd63580583;     snQIruVIgd63580583 = snQIruVIgd68278698;     snQIruVIgd68278698 = snQIruVIgd78071723;     snQIruVIgd78071723 = snQIruVIgd12057744;     snQIruVIgd12057744 = snQIruVIgd24470995;     snQIruVIgd24470995 = snQIruVIgd76557177;     snQIruVIgd76557177 = snQIruVIgd84033477;     snQIruVIgd84033477 = snQIruVIgd17230683;     snQIruVIgd17230683 = snQIruVIgd34844904;     snQIruVIgd34844904 = snQIruVIgd57640602;     snQIruVIgd57640602 = snQIruVIgd40812656;     snQIruVIgd40812656 = snQIruVIgd92396051;     snQIruVIgd92396051 = snQIruVIgd64215853;     snQIruVIgd64215853 = snQIruVIgd87762359;     snQIruVIgd87762359 = snQIruVIgd45859663;     snQIruVIgd45859663 = snQIruVIgd47138666;     snQIruVIgd47138666 = snQIruVIgd80673499;     snQIruVIgd80673499 = snQIruVIgd6662306;     snQIruVIgd6662306 = snQIruVIgd28599861;     snQIruVIgd28599861 = snQIruVIgd20103537;     snQIruVIgd20103537 = snQIruVIgd43957313;     snQIruVIgd43957313 = snQIruVIgd69501805;     snQIruVIgd69501805 = snQIruVIgd63476911;     snQIruVIgd63476911 = snQIruVIgd37647569;     snQIruVIgd37647569 = snQIruVIgd81763518;     snQIruVIgd81763518 = snQIruVIgd96713120;     snQIruVIgd96713120 = snQIruVIgd29658950;     snQIruVIgd29658950 = snQIruVIgd97702384;     snQIruVIgd97702384 = snQIruVIgd39443151;     snQIruVIgd39443151 = snQIruVIgd10840875;     snQIruVIgd10840875 = snQIruVIgd11752921;     snQIruVIgd11752921 = snQIruVIgd41243179;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void fuVhZjqGue12102488() {     int ZoVuDpbCIn50558445 = -554890449;    int ZoVuDpbCIn68859245 = -990005402;    int ZoVuDpbCIn24410086 = -394219136;    int ZoVuDpbCIn20018056 = -30750713;    int ZoVuDpbCIn91740463 = -173846302;    int ZoVuDpbCIn22548003 = -202824666;    int ZoVuDpbCIn12187703 = -173582301;    int ZoVuDpbCIn9127929 = -111719794;    int ZoVuDpbCIn36558115 = -868420521;    int ZoVuDpbCIn35567560 = -738831569;    int ZoVuDpbCIn58443428 = -398401352;    int ZoVuDpbCIn54519688 = -366071663;    int ZoVuDpbCIn70782834 = -745209658;    int ZoVuDpbCIn20495690 = -347798495;    int ZoVuDpbCIn98775889 = -839864224;    int ZoVuDpbCIn79840596 = -847212534;    int ZoVuDpbCIn57729590 = 5213248;    int ZoVuDpbCIn99470516 = -872794937;    int ZoVuDpbCIn83804804 = -424280585;    int ZoVuDpbCIn51064593 = -675452440;    int ZoVuDpbCIn3298730 = -389735078;    int ZoVuDpbCIn76145070 = -129761057;    int ZoVuDpbCIn99080126 = -138126853;    int ZoVuDpbCIn20350171 = -394121686;    int ZoVuDpbCIn27091047 = -284266491;    int ZoVuDpbCIn24128428 = 53608013;    int ZoVuDpbCIn82155150 = -264223155;    int ZoVuDpbCIn27974989 = -73900257;    int ZoVuDpbCIn54225164 = -809082821;    int ZoVuDpbCIn61268082 = -290204067;    int ZoVuDpbCIn19608401 = -761009797;    int ZoVuDpbCIn7050788 = -575508441;    int ZoVuDpbCIn1529110 = -547046689;    int ZoVuDpbCIn617244 = 21204602;    int ZoVuDpbCIn19914609 = 24886045;    int ZoVuDpbCIn51744163 = -426397985;    int ZoVuDpbCIn44058982 = -214246958;    int ZoVuDpbCIn91883897 = -948122688;    int ZoVuDpbCIn41445833 = -249428350;    int ZoVuDpbCIn53420775 = -444704383;    int ZoVuDpbCIn35375202 = -875414509;    int ZoVuDpbCIn18237556 = -833226083;    int ZoVuDpbCIn56422481 = -318922060;    int ZoVuDpbCIn86930855 = -251220087;    int ZoVuDpbCIn39453015 = -1085077;    int ZoVuDpbCIn93455083 = -732312855;    int ZoVuDpbCIn71074190 = -814800600;    int ZoVuDpbCIn55652068 = -563675737;    int ZoVuDpbCIn35145298 = -347964004;    int ZoVuDpbCIn10886496 = 90519682;    int ZoVuDpbCIn38316177 = -342425881;    int ZoVuDpbCIn33153565 = -430522362;    int ZoVuDpbCIn11136776 = -683262495;    int ZoVuDpbCIn27651162 = -543858899;    int ZoVuDpbCIn8803758 = -641600807;    int ZoVuDpbCIn74413375 = -325129392;    int ZoVuDpbCIn69779119 = -751878550;    int ZoVuDpbCIn4059915 = 99902549;    int ZoVuDpbCIn92927009 = -746484223;    int ZoVuDpbCIn67612035 = -127454315;    int ZoVuDpbCIn40392852 = -938601511;    int ZoVuDpbCIn84212713 = 317956;    int ZoVuDpbCIn54902765 = -302636974;    int ZoVuDpbCIn75290033 = -478216454;    int ZoVuDpbCIn15959160 = -977821772;    int ZoVuDpbCIn51392641 = -822892911;    int ZoVuDpbCIn52990578 = -819024974;    int ZoVuDpbCIn70165590 = -666414260;    int ZoVuDpbCIn581081 = -272684541;    int ZoVuDpbCIn47031727 = -313466239;    int ZoVuDpbCIn35781614 = -532965576;    int ZoVuDpbCIn65845692 = -46664065;    int ZoVuDpbCIn58024683 = -523366587;    int ZoVuDpbCIn30384030 = -979576203;    int ZoVuDpbCIn15689391 = -800037932;    int ZoVuDpbCIn85061173 = -556508995;    int ZoVuDpbCIn19722589 = -810838998;    int ZoVuDpbCIn12149271 = -886906767;    int ZoVuDpbCIn80897156 = -293036610;    int ZoVuDpbCIn33635964 = -551953637;    int ZoVuDpbCIn53054238 = -131591388;    int ZoVuDpbCIn26503083 = -700547419;    int ZoVuDpbCIn92829691 = -725936253;    int ZoVuDpbCIn43338668 = -799602503;    int ZoVuDpbCIn22951905 = -947778186;    int ZoVuDpbCIn86454835 = -230487436;    int ZoVuDpbCIn95914011 = -892245947;    int ZoVuDpbCIn73877947 = 96812210;    int ZoVuDpbCIn91813486 = -337194591;    int ZoVuDpbCIn45501234 = -649984563;    int ZoVuDpbCIn81965044 = -674519436;    int ZoVuDpbCIn39999068 = -214149508;    int ZoVuDpbCIn98956888 = -101638465;    int ZoVuDpbCIn73833797 = -21974036;    int ZoVuDpbCIn13027923 = -506102872;    int ZoVuDpbCIn51162488 = -775732465;    int ZoVuDpbCIn63334791 = -430589109;    int ZoVuDpbCIn81132447 = -840705606;    int ZoVuDpbCIn70971696 = -273398315;    int ZoVuDpbCIn88060374 = -554890449;     ZoVuDpbCIn50558445 = ZoVuDpbCIn68859245;     ZoVuDpbCIn68859245 = ZoVuDpbCIn24410086;     ZoVuDpbCIn24410086 = ZoVuDpbCIn20018056;     ZoVuDpbCIn20018056 = ZoVuDpbCIn91740463;     ZoVuDpbCIn91740463 = ZoVuDpbCIn22548003;     ZoVuDpbCIn22548003 = ZoVuDpbCIn12187703;     ZoVuDpbCIn12187703 = ZoVuDpbCIn9127929;     ZoVuDpbCIn9127929 = ZoVuDpbCIn36558115;     ZoVuDpbCIn36558115 = ZoVuDpbCIn35567560;     ZoVuDpbCIn35567560 = ZoVuDpbCIn58443428;     ZoVuDpbCIn58443428 = ZoVuDpbCIn54519688;     ZoVuDpbCIn54519688 = ZoVuDpbCIn70782834;     ZoVuDpbCIn70782834 = ZoVuDpbCIn20495690;     ZoVuDpbCIn20495690 = ZoVuDpbCIn98775889;     ZoVuDpbCIn98775889 = ZoVuDpbCIn79840596;     ZoVuDpbCIn79840596 = ZoVuDpbCIn57729590;     ZoVuDpbCIn57729590 = ZoVuDpbCIn99470516;     ZoVuDpbCIn99470516 = ZoVuDpbCIn83804804;     ZoVuDpbCIn83804804 = ZoVuDpbCIn51064593;     ZoVuDpbCIn51064593 = ZoVuDpbCIn3298730;     ZoVuDpbCIn3298730 = ZoVuDpbCIn76145070;     ZoVuDpbCIn76145070 = ZoVuDpbCIn99080126;     ZoVuDpbCIn99080126 = ZoVuDpbCIn20350171;     ZoVuDpbCIn20350171 = ZoVuDpbCIn27091047;     ZoVuDpbCIn27091047 = ZoVuDpbCIn24128428;     ZoVuDpbCIn24128428 = ZoVuDpbCIn82155150;     ZoVuDpbCIn82155150 = ZoVuDpbCIn27974989;     ZoVuDpbCIn27974989 = ZoVuDpbCIn54225164;     ZoVuDpbCIn54225164 = ZoVuDpbCIn61268082;     ZoVuDpbCIn61268082 = ZoVuDpbCIn19608401;     ZoVuDpbCIn19608401 = ZoVuDpbCIn7050788;     ZoVuDpbCIn7050788 = ZoVuDpbCIn1529110;     ZoVuDpbCIn1529110 = ZoVuDpbCIn617244;     ZoVuDpbCIn617244 = ZoVuDpbCIn19914609;     ZoVuDpbCIn19914609 = ZoVuDpbCIn51744163;     ZoVuDpbCIn51744163 = ZoVuDpbCIn44058982;     ZoVuDpbCIn44058982 = ZoVuDpbCIn91883897;     ZoVuDpbCIn91883897 = ZoVuDpbCIn41445833;     ZoVuDpbCIn41445833 = ZoVuDpbCIn53420775;     ZoVuDpbCIn53420775 = ZoVuDpbCIn35375202;     ZoVuDpbCIn35375202 = ZoVuDpbCIn18237556;     ZoVuDpbCIn18237556 = ZoVuDpbCIn56422481;     ZoVuDpbCIn56422481 = ZoVuDpbCIn86930855;     ZoVuDpbCIn86930855 = ZoVuDpbCIn39453015;     ZoVuDpbCIn39453015 = ZoVuDpbCIn93455083;     ZoVuDpbCIn93455083 = ZoVuDpbCIn71074190;     ZoVuDpbCIn71074190 = ZoVuDpbCIn55652068;     ZoVuDpbCIn55652068 = ZoVuDpbCIn35145298;     ZoVuDpbCIn35145298 = ZoVuDpbCIn10886496;     ZoVuDpbCIn10886496 = ZoVuDpbCIn38316177;     ZoVuDpbCIn38316177 = ZoVuDpbCIn33153565;     ZoVuDpbCIn33153565 = ZoVuDpbCIn11136776;     ZoVuDpbCIn11136776 = ZoVuDpbCIn27651162;     ZoVuDpbCIn27651162 = ZoVuDpbCIn8803758;     ZoVuDpbCIn8803758 = ZoVuDpbCIn74413375;     ZoVuDpbCIn74413375 = ZoVuDpbCIn69779119;     ZoVuDpbCIn69779119 = ZoVuDpbCIn4059915;     ZoVuDpbCIn4059915 = ZoVuDpbCIn92927009;     ZoVuDpbCIn92927009 = ZoVuDpbCIn67612035;     ZoVuDpbCIn67612035 = ZoVuDpbCIn40392852;     ZoVuDpbCIn40392852 = ZoVuDpbCIn84212713;     ZoVuDpbCIn84212713 = ZoVuDpbCIn54902765;     ZoVuDpbCIn54902765 = ZoVuDpbCIn75290033;     ZoVuDpbCIn75290033 = ZoVuDpbCIn15959160;     ZoVuDpbCIn15959160 = ZoVuDpbCIn51392641;     ZoVuDpbCIn51392641 = ZoVuDpbCIn52990578;     ZoVuDpbCIn52990578 = ZoVuDpbCIn70165590;     ZoVuDpbCIn70165590 = ZoVuDpbCIn581081;     ZoVuDpbCIn581081 = ZoVuDpbCIn47031727;     ZoVuDpbCIn47031727 = ZoVuDpbCIn35781614;     ZoVuDpbCIn35781614 = ZoVuDpbCIn65845692;     ZoVuDpbCIn65845692 = ZoVuDpbCIn58024683;     ZoVuDpbCIn58024683 = ZoVuDpbCIn30384030;     ZoVuDpbCIn30384030 = ZoVuDpbCIn15689391;     ZoVuDpbCIn15689391 = ZoVuDpbCIn85061173;     ZoVuDpbCIn85061173 = ZoVuDpbCIn19722589;     ZoVuDpbCIn19722589 = ZoVuDpbCIn12149271;     ZoVuDpbCIn12149271 = ZoVuDpbCIn80897156;     ZoVuDpbCIn80897156 = ZoVuDpbCIn33635964;     ZoVuDpbCIn33635964 = ZoVuDpbCIn53054238;     ZoVuDpbCIn53054238 = ZoVuDpbCIn26503083;     ZoVuDpbCIn26503083 = ZoVuDpbCIn92829691;     ZoVuDpbCIn92829691 = ZoVuDpbCIn43338668;     ZoVuDpbCIn43338668 = ZoVuDpbCIn22951905;     ZoVuDpbCIn22951905 = ZoVuDpbCIn86454835;     ZoVuDpbCIn86454835 = ZoVuDpbCIn95914011;     ZoVuDpbCIn95914011 = ZoVuDpbCIn73877947;     ZoVuDpbCIn73877947 = ZoVuDpbCIn91813486;     ZoVuDpbCIn91813486 = ZoVuDpbCIn45501234;     ZoVuDpbCIn45501234 = ZoVuDpbCIn81965044;     ZoVuDpbCIn81965044 = ZoVuDpbCIn39999068;     ZoVuDpbCIn39999068 = ZoVuDpbCIn98956888;     ZoVuDpbCIn98956888 = ZoVuDpbCIn73833797;     ZoVuDpbCIn73833797 = ZoVuDpbCIn13027923;     ZoVuDpbCIn13027923 = ZoVuDpbCIn51162488;     ZoVuDpbCIn51162488 = ZoVuDpbCIn63334791;     ZoVuDpbCIn63334791 = ZoVuDpbCIn81132447;     ZoVuDpbCIn81132447 = ZoVuDpbCIn70971696;     ZoVuDpbCIn70971696 = ZoVuDpbCIn88060374;     ZoVuDpbCIn88060374 = ZoVuDpbCIn50558445;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IJhmsmxQdr70343368() {     int oKEmbEYIFs89215573 = -811796486;    int oKEmbEYIFs94180966 = -77491731;    int oKEmbEYIFs65906459 = -722693903;    int oKEmbEYIFs22956652 = -952817146;    int oKEmbEYIFs19193483 = -835310433;    int oKEmbEYIFs60897034 = -759545187;    int oKEmbEYIFs36010215 = -778591936;    int oKEmbEYIFs10635756 = -766039170;    int oKEmbEYIFs66241882 = -868779933;    int oKEmbEYIFs77865070 = -995338758;    int oKEmbEYIFs73416857 = -514212567;    int oKEmbEYIFs34502543 = -423156047;    int oKEmbEYIFs18590077 = -442753208;    int oKEmbEYIFs22581518 = -870977441;    int oKEmbEYIFs76504017 = -504357484;    int oKEmbEYIFs26847028 = -537548075;    int oKEmbEYIFs63540290 = 67198721;    int oKEmbEYIFs14370196 = 89242325;    int oKEmbEYIFs4538225 = -288715739;    int oKEmbEYIFs27546995 = -823818428;    int oKEmbEYIFs16511751 = -517222239;    int oKEmbEYIFs17254483 = -131363967;    int oKEmbEYIFs70075980 = -743770550;    int oKEmbEYIFs89357371 = -199802413;    int oKEmbEYIFs54471890 = -254188707;    int oKEmbEYIFs76012741 = -955525112;    int oKEmbEYIFs77874213 = -978733938;    int oKEmbEYIFs26690764 = -684880211;    int oKEmbEYIFs1878031 = -175214354;    int oKEmbEYIFs10966805 = -313324933;    int oKEmbEYIFs15947462 = 89678837;    int oKEmbEYIFs24522547 = 29795665;    int oKEmbEYIFs53895502 = -613120308;    int oKEmbEYIFs24564055 = -875507333;    int oKEmbEYIFs10898687 = -563893695;    int oKEmbEYIFs66403988 = -843162631;    int oKEmbEYIFs49676472 = -826506992;    int oKEmbEYIFs65045887 = -911867622;    int oKEmbEYIFs64451842 = 42403083;    int oKEmbEYIFs6290267 = -243713219;    int oKEmbEYIFs87220719 = -716495947;    int oKEmbEYIFs63103881 = -78901187;    int oKEmbEYIFs89455886 = -13178644;    int oKEmbEYIFs98411353 = -226604446;    int oKEmbEYIFs63467083 = 42526122;    int oKEmbEYIFs97716451 = -11554929;    int oKEmbEYIFs77890410 = -752845568;    int oKEmbEYIFs36892477 = -66850186;    int oKEmbEYIFs14389380 = -161660413;    int oKEmbEYIFs92142334 = -106510028;    int oKEmbEYIFs20353932 = -110284764;    int oKEmbEYIFs70046360 = -391434606;    int oKEmbEYIFs19517125 = -235295368;    int oKEmbEYIFs52255372 = -774750371;    int oKEmbEYIFs53831618 = -222477255;    int oKEmbEYIFs71961090 = -580432519;    int oKEmbEYIFs24104986 = -333721181;    int oKEmbEYIFs76549088 = -422891491;    int oKEmbEYIFs68484762 = -598628440;    int oKEmbEYIFs43180742 = -879785322;    int oKEmbEYIFs83022821 = -780811250;    int oKEmbEYIFs9319451 = 6288274;    int oKEmbEYIFs8757725 = -490824816;    int oKEmbEYIFs55275078 = -455455001;    int oKEmbEYIFs61917608 = -985017595;    int oKEmbEYIFs48894310 = -444008232;    int oKEmbEYIFs80607041 = -810035739;    int oKEmbEYIFs94026022 = -567245876;    int oKEmbEYIFs11682832 = -207083747;    int oKEmbEYIFs10100029 = -661194853;    int oKEmbEYIFs77170555 = -711041084;    int oKEmbEYIFs98494403 = -20933657;    int oKEmbEYIFs49918354 = -953160759;    int oKEmbEYIFs98247958 = 54997479;    int oKEmbEYIFs40326275 = -7322482;    int oKEmbEYIFs53407869 = -338321053;    int oKEmbEYIFs27798597 = -18185324;    int oKEmbEYIFs71664626 = -417166105;    int oKEmbEYIFs25890289 = -142328535;    int oKEmbEYIFs56755438 = -142633778;    int oKEmbEYIFs98122330 = -102679544;    int oKEmbEYIFs40981737 = -811883752;    int oKEmbEYIFs12301385 = -423219798;    int oKEmbEYIFs9735696 = 31295673;    int oKEmbEYIFs90612872 = -103040169;    int oKEmbEYIFs45901102 = -518886558;    int oKEmbEYIFs5005423 = -734908968;    int oKEmbEYIFs1640130 = -838369938;    int oKEmbEYIFs70732436 = -553030078;    int oKEmbEYIFs38937596 = -983461176;    int oKEmbEYIFs42299002 = -409441450;    int oKEmbEYIFs73127384 = -303615501;    int oKEmbEYIFs96561124 = -213239183;    int oKEmbEYIFs21271101 = -77811595;    int oKEmbEYIFs23267446 = -462901970;    int oKEmbEYIFs77901269 = -622784221;    int oKEmbEYIFs54346156 = -588076371;    int oKEmbEYIFs34180809 = -557723643;    int oKEmbEYIFs36493746 = -241586852;    int oKEmbEYIFs14572774 = -811796486;     oKEmbEYIFs89215573 = oKEmbEYIFs94180966;     oKEmbEYIFs94180966 = oKEmbEYIFs65906459;     oKEmbEYIFs65906459 = oKEmbEYIFs22956652;     oKEmbEYIFs22956652 = oKEmbEYIFs19193483;     oKEmbEYIFs19193483 = oKEmbEYIFs60897034;     oKEmbEYIFs60897034 = oKEmbEYIFs36010215;     oKEmbEYIFs36010215 = oKEmbEYIFs10635756;     oKEmbEYIFs10635756 = oKEmbEYIFs66241882;     oKEmbEYIFs66241882 = oKEmbEYIFs77865070;     oKEmbEYIFs77865070 = oKEmbEYIFs73416857;     oKEmbEYIFs73416857 = oKEmbEYIFs34502543;     oKEmbEYIFs34502543 = oKEmbEYIFs18590077;     oKEmbEYIFs18590077 = oKEmbEYIFs22581518;     oKEmbEYIFs22581518 = oKEmbEYIFs76504017;     oKEmbEYIFs76504017 = oKEmbEYIFs26847028;     oKEmbEYIFs26847028 = oKEmbEYIFs63540290;     oKEmbEYIFs63540290 = oKEmbEYIFs14370196;     oKEmbEYIFs14370196 = oKEmbEYIFs4538225;     oKEmbEYIFs4538225 = oKEmbEYIFs27546995;     oKEmbEYIFs27546995 = oKEmbEYIFs16511751;     oKEmbEYIFs16511751 = oKEmbEYIFs17254483;     oKEmbEYIFs17254483 = oKEmbEYIFs70075980;     oKEmbEYIFs70075980 = oKEmbEYIFs89357371;     oKEmbEYIFs89357371 = oKEmbEYIFs54471890;     oKEmbEYIFs54471890 = oKEmbEYIFs76012741;     oKEmbEYIFs76012741 = oKEmbEYIFs77874213;     oKEmbEYIFs77874213 = oKEmbEYIFs26690764;     oKEmbEYIFs26690764 = oKEmbEYIFs1878031;     oKEmbEYIFs1878031 = oKEmbEYIFs10966805;     oKEmbEYIFs10966805 = oKEmbEYIFs15947462;     oKEmbEYIFs15947462 = oKEmbEYIFs24522547;     oKEmbEYIFs24522547 = oKEmbEYIFs53895502;     oKEmbEYIFs53895502 = oKEmbEYIFs24564055;     oKEmbEYIFs24564055 = oKEmbEYIFs10898687;     oKEmbEYIFs10898687 = oKEmbEYIFs66403988;     oKEmbEYIFs66403988 = oKEmbEYIFs49676472;     oKEmbEYIFs49676472 = oKEmbEYIFs65045887;     oKEmbEYIFs65045887 = oKEmbEYIFs64451842;     oKEmbEYIFs64451842 = oKEmbEYIFs6290267;     oKEmbEYIFs6290267 = oKEmbEYIFs87220719;     oKEmbEYIFs87220719 = oKEmbEYIFs63103881;     oKEmbEYIFs63103881 = oKEmbEYIFs89455886;     oKEmbEYIFs89455886 = oKEmbEYIFs98411353;     oKEmbEYIFs98411353 = oKEmbEYIFs63467083;     oKEmbEYIFs63467083 = oKEmbEYIFs97716451;     oKEmbEYIFs97716451 = oKEmbEYIFs77890410;     oKEmbEYIFs77890410 = oKEmbEYIFs36892477;     oKEmbEYIFs36892477 = oKEmbEYIFs14389380;     oKEmbEYIFs14389380 = oKEmbEYIFs92142334;     oKEmbEYIFs92142334 = oKEmbEYIFs20353932;     oKEmbEYIFs20353932 = oKEmbEYIFs70046360;     oKEmbEYIFs70046360 = oKEmbEYIFs19517125;     oKEmbEYIFs19517125 = oKEmbEYIFs52255372;     oKEmbEYIFs52255372 = oKEmbEYIFs53831618;     oKEmbEYIFs53831618 = oKEmbEYIFs71961090;     oKEmbEYIFs71961090 = oKEmbEYIFs24104986;     oKEmbEYIFs24104986 = oKEmbEYIFs76549088;     oKEmbEYIFs76549088 = oKEmbEYIFs68484762;     oKEmbEYIFs68484762 = oKEmbEYIFs43180742;     oKEmbEYIFs43180742 = oKEmbEYIFs83022821;     oKEmbEYIFs83022821 = oKEmbEYIFs9319451;     oKEmbEYIFs9319451 = oKEmbEYIFs8757725;     oKEmbEYIFs8757725 = oKEmbEYIFs55275078;     oKEmbEYIFs55275078 = oKEmbEYIFs61917608;     oKEmbEYIFs61917608 = oKEmbEYIFs48894310;     oKEmbEYIFs48894310 = oKEmbEYIFs80607041;     oKEmbEYIFs80607041 = oKEmbEYIFs94026022;     oKEmbEYIFs94026022 = oKEmbEYIFs11682832;     oKEmbEYIFs11682832 = oKEmbEYIFs10100029;     oKEmbEYIFs10100029 = oKEmbEYIFs77170555;     oKEmbEYIFs77170555 = oKEmbEYIFs98494403;     oKEmbEYIFs98494403 = oKEmbEYIFs49918354;     oKEmbEYIFs49918354 = oKEmbEYIFs98247958;     oKEmbEYIFs98247958 = oKEmbEYIFs40326275;     oKEmbEYIFs40326275 = oKEmbEYIFs53407869;     oKEmbEYIFs53407869 = oKEmbEYIFs27798597;     oKEmbEYIFs27798597 = oKEmbEYIFs71664626;     oKEmbEYIFs71664626 = oKEmbEYIFs25890289;     oKEmbEYIFs25890289 = oKEmbEYIFs56755438;     oKEmbEYIFs56755438 = oKEmbEYIFs98122330;     oKEmbEYIFs98122330 = oKEmbEYIFs40981737;     oKEmbEYIFs40981737 = oKEmbEYIFs12301385;     oKEmbEYIFs12301385 = oKEmbEYIFs9735696;     oKEmbEYIFs9735696 = oKEmbEYIFs90612872;     oKEmbEYIFs90612872 = oKEmbEYIFs45901102;     oKEmbEYIFs45901102 = oKEmbEYIFs5005423;     oKEmbEYIFs5005423 = oKEmbEYIFs1640130;     oKEmbEYIFs1640130 = oKEmbEYIFs70732436;     oKEmbEYIFs70732436 = oKEmbEYIFs38937596;     oKEmbEYIFs38937596 = oKEmbEYIFs42299002;     oKEmbEYIFs42299002 = oKEmbEYIFs73127384;     oKEmbEYIFs73127384 = oKEmbEYIFs96561124;     oKEmbEYIFs96561124 = oKEmbEYIFs21271101;     oKEmbEYIFs21271101 = oKEmbEYIFs23267446;     oKEmbEYIFs23267446 = oKEmbEYIFs77901269;     oKEmbEYIFs77901269 = oKEmbEYIFs54346156;     oKEmbEYIFs54346156 = oKEmbEYIFs34180809;     oKEmbEYIFs34180809 = oKEmbEYIFs36493746;     oKEmbEYIFs36493746 = oKEmbEYIFs14572774;     oKEmbEYIFs14572774 = oKEmbEYIFs89215573;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void KwIqnjpYTP76341718() {     int ISLnXNqBGv98530839 = -714327513;    int ISLnXNqBGv49603889 = -94026234;    int ISLnXNqBGv86058540 = -436334517;    int ISLnXNqBGv80746674 = -44481138;    int ISLnXNqBGv59256722 = -811825591;    int ISLnXNqBGv54440396 = -218414047;    int ISLnXNqBGv9664287 = -577840814;    int ISLnXNqBGv99771911 = -962998318;    int ISLnXNqBGv59050539 = -148840604;    int ISLnXNqBGv46489527 = -816134426;    int ISLnXNqBGv10318842 = -705453639;    int ISLnXNqBGv45740293 = 39474137;    int ISLnXNqBGv14371793 = -28175343;    int ISLnXNqBGv54670159 = -850031546;    int ISLnXNqBGv91780055 = -355887895;    int ISLnXNqBGv31817552 = -565071553;    int ISLnXNqBGv7351058 = 39613634;    int ISLnXNqBGv26562837 = -740814988;    int ISLnXNqBGv86551156 = -242356568;    int ISLnXNqBGv90742342 = -902526269;    int ISLnXNqBGv5191102 = -842922167;    int ISLnXNqBGv41463395 = 45739700;    int ISLnXNqBGv6137248 = -358299550;    int ISLnXNqBGv48564001 = -816963523;    int ISLnXNqBGv17534433 = -573321757;    int ISLnXNqBGv41920559 = 45263247;    int ISLnXNqBGv11632480 = -687622783;    int ISLnXNqBGv97785239 = -92016943;    int ISLnXNqBGv68994937 = -289633790;    int ISLnXNqBGv23747753 = -119409495;    int ISLnXNqBGv85945840 = -620972980;    int ISLnXNqBGv1781911 = -401375630;    int ISLnXNqBGv3754832 = -424211321;    int ISLnXNqBGv13593003 = -359067220;    int ISLnXNqBGv97548961 = -740306289;    int ISLnXNqBGv98228882 = -159388078;    int ISLnXNqBGv87144079 = -427706855;    int ISLnXNqBGv21082685 = -664462985;    int ISLnXNqBGv30677543 = -8812704;    int ISLnXNqBGv82390163 = 49101269;    int ISLnXNqBGv11283854 = -853652364;    int ISLnXNqBGv50755537 = -173278;    int ISLnXNqBGv11172893 = -235059025;    int ISLnXNqBGv57168254 = -716999334;    int ISLnXNqBGv99417157 = -849249672;    int ISLnXNqBGv67955687 = -337089488;    int ISLnXNqBGv83140041 = -325679714;    int ISLnXNqBGv8363514 = -513393574;    int ISLnXNqBGv80416523 = -397356929;    int ISLnXNqBGv61780236 = -999523730;    int ISLnXNqBGv57321641 = -946160760;    int ISLnXNqBGv34263402 = 60579177;    int ISLnXNqBGv7524783 = -923072274;    int ISLnXNqBGv56836616 = -34603489;    int ISLnXNqBGv71150617 = -157395340;    int ISLnXNqBGv57067445 = -660067213;    int ISLnXNqBGv43466642 = -735726684;    int ISLnXNqBGv37494539 = -619370994;    int ISLnXNqBGv63212241 = -471159381;    int ISLnXNqBGv17336164 = -757088838;    int ISLnXNqBGv42807916 = -530791265;    int ISLnXNqBGv11879047 = -385823871;    int ISLnXNqBGv30776975 = -573364528;    int ISLnXNqBGv35302787 = 70568890;    int ISLnXNqBGv60543687 = -95161446;    int ISLnXNqBGv8536931 = -204078010;    int ISLnXNqBGv41985461 = -536314542;    int ISLnXNqBGv778791 = -669108123;    int ISLnXNqBGv57121197 = -9725257;    int ISLnXNqBGv93551172 = -96499817;    int ISLnXNqBGv44673472 = -37364699;    int ISLnXNqBGv86268372 = -295923382;    int ISLnXNqBGv95885294 = -632002284;    int ISLnXNqBGv4160994 = -191457837;    int ISLnXNqBGv79458489 = 51126095;    int ISLnXNqBGv54435565 = -742748890;    int ISLnXNqBGv30290503 = -719201275;    int ISLnXNqBGv48968993 = -641300217;    int ISLnXNqBGv49146843 = -967713852;    int ISLnXNqBGv49578745 = -136232270;    int ISLnXNqBGv58780517 = -629057040;    int ISLnXNqBGv3268967 = -74229209;    int ISLnXNqBGv17368717 = -694660014;    int ISLnXNqBGv7214701 = -290110061;    int ISLnXNqBGv66426111 = -173248736;    int ISLnXNqBGv51682438 = -581552157;    int ISLnXNqBGv94257127 = -478303357;    int ISLnXNqBGv46918216 = -289607832;    int ISLnXNqBGv42442386 = -101671880;    int ISLnXNqBGv40481517 = 19760924;    int ISLnXNqBGv54762241 = -423661395;    int ISLnXNqBGv49649540 = -808335861;    int ISLnXNqBGv57870444 = -93303604;    int ISLnXNqBGv13341380 = -251723866;    int ISLnXNqBGv39582247 = -420107466;    int ISLnXNqBGv99404806 = -367828494;    int ISLnXNqBGv19978563 = -426808750;    int ISLnXNqBGv75870105 = -205627916;    int ISLnXNqBGv96624567 = -521837889;    int ISLnXNqBGv90880226 = -714327513;     ISLnXNqBGv98530839 = ISLnXNqBGv49603889;     ISLnXNqBGv49603889 = ISLnXNqBGv86058540;     ISLnXNqBGv86058540 = ISLnXNqBGv80746674;     ISLnXNqBGv80746674 = ISLnXNqBGv59256722;     ISLnXNqBGv59256722 = ISLnXNqBGv54440396;     ISLnXNqBGv54440396 = ISLnXNqBGv9664287;     ISLnXNqBGv9664287 = ISLnXNqBGv99771911;     ISLnXNqBGv99771911 = ISLnXNqBGv59050539;     ISLnXNqBGv59050539 = ISLnXNqBGv46489527;     ISLnXNqBGv46489527 = ISLnXNqBGv10318842;     ISLnXNqBGv10318842 = ISLnXNqBGv45740293;     ISLnXNqBGv45740293 = ISLnXNqBGv14371793;     ISLnXNqBGv14371793 = ISLnXNqBGv54670159;     ISLnXNqBGv54670159 = ISLnXNqBGv91780055;     ISLnXNqBGv91780055 = ISLnXNqBGv31817552;     ISLnXNqBGv31817552 = ISLnXNqBGv7351058;     ISLnXNqBGv7351058 = ISLnXNqBGv26562837;     ISLnXNqBGv26562837 = ISLnXNqBGv86551156;     ISLnXNqBGv86551156 = ISLnXNqBGv90742342;     ISLnXNqBGv90742342 = ISLnXNqBGv5191102;     ISLnXNqBGv5191102 = ISLnXNqBGv41463395;     ISLnXNqBGv41463395 = ISLnXNqBGv6137248;     ISLnXNqBGv6137248 = ISLnXNqBGv48564001;     ISLnXNqBGv48564001 = ISLnXNqBGv17534433;     ISLnXNqBGv17534433 = ISLnXNqBGv41920559;     ISLnXNqBGv41920559 = ISLnXNqBGv11632480;     ISLnXNqBGv11632480 = ISLnXNqBGv97785239;     ISLnXNqBGv97785239 = ISLnXNqBGv68994937;     ISLnXNqBGv68994937 = ISLnXNqBGv23747753;     ISLnXNqBGv23747753 = ISLnXNqBGv85945840;     ISLnXNqBGv85945840 = ISLnXNqBGv1781911;     ISLnXNqBGv1781911 = ISLnXNqBGv3754832;     ISLnXNqBGv3754832 = ISLnXNqBGv13593003;     ISLnXNqBGv13593003 = ISLnXNqBGv97548961;     ISLnXNqBGv97548961 = ISLnXNqBGv98228882;     ISLnXNqBGv98228882 = ISLnXNqBGv87144079;     ISLnXNqBGv87144079 = ISLnXNqBGv21082685;     ISLnXNqBGv21082685 = ISLnXNqBGv30677543;     ISLnXNqBGv30677543 = ISLnXNqBGv82390163;     ISLnXNqBGv82390163 = ISLnXNqBGv11283854;     ISLnXNqBGv11283854 = ISLnXNqBGv50755537;     ISLnXNqBGv50755537 = ISLnXNqBGv11172893;     ISLnXNqBGv11172893 = ISLnXNqBGv57168254;     ISLnXNqBGv57168254 = ISLnXNqBGv99417157;     ISLnXNqBGv99417157 = ISLnXNqBGv67955687;     ISLnXNqBGv67955687 = ISLnXNqBGv83140041;     ISLnXNqBGv83140041 = ISLnXNqBGv8363514;     ISLnXNqBGv8363514 = ISLnXNqBGv80416523;     ISLnXNqBGv80416523 = ISLnXNqBGv61780236;     ISLnXNqBGv61780236 = ISLnXNqBGv57321641;     ISLnXNqBGv57321641 = ISLnXNqBGv34263402;     ISLnXNqBGv34263402 = ISLnXNqBGv7524783;     ISLnXNqBGv7524783 = ISLnXNqBGv56836616;     ISLnXNqBGv56836616 = ISLnXNqBGv71150617;     ISLnXNqBGv71150617 = ISLnXNqBGv57067445;     ISLnXNqBGv57067445 = ISLnXNqBGv43466642;     ISLnXNqBGv43466642 = ISLnXNqBGv37494539;     ISLnXNqBGv37494539 = ISLnXNqBGv63212241;     ISLnXNqBGv63212241 = ISLnXNqBGv17336164;     ISLnXNqBGv17336164 = ISLnXNqBGv42807916;     ISLnXNqBGv42807916 = ISLnXNqBGv11879047;     ISLnXNqBGv11879047 = ISLnXNqBGv30776975;     ISLnXNqBGv30776975 = ISLnXNqBGv35302787;     ISLnXNqBGv35302787 = ISLnXNqBGv60543687;     ISLnXNqBGv60543687 = ISLnXNqBGv8536931;     ISLnXNqBGv8536931 = ISLnXNqBGv41985461;     ISLnXNqBGv41985461 = ISLnXNqBGv778791;     ISLnXNqBGv778791 = ISLnXNqBGv57121197;     ISLnXNqBGv57121197 = ISLnXNqBGv93551172;     ISLnXNqBGv93551172 = ISLnXNqBGv44673472;     ISLnXNqBGv44673472 = ISLnXNqBGv86268372;     ISLnXNqBGv86268372 = ISLnXNqBGv95885294;     ISLnXNqBGv95885294 = ISLnXNqBGv4160994;     ISLnXNqBGv4160994 = ISLnXNqBGv79458489;     ISLnXNqBGv79458489 = ISLnXNqBGv54435565;     ISLnXNqBGv54435565 = ISLnXNqBGv30290503;     ISLnXNqBGv30290503 = ISLnXNqBGv48968993;     ISLnXNqBGv48968993 = ISLnXNqBGv49146843;     ISLnXNqBGv49146843 = ISLnXNqBGv49578745;     ISLnXNqBGv49578745 = ISLnXNqBGv58780517;     ISLnXNqBGv58780517 = ISLnXNqBGv3268967;     ISLnXNqBGv3268967 = ISLnXNqBGv17368717;     ISLnXNqBGv17368717 = ISLnXNqBGv7214701;     ISLnXNqBGv7214701 = ISLnXNqBGv66426111;     ISLnXNqBGv66426111 = ISLnXNqBGv51682438;     ISLnXNqBGv51682438 = ISLnXNqBGv94257127;     ISLnXNqBGv94257127 = ISLnXNqBGv46918216;     ISLnXNqBGv46918216 = ISLnXNqBGv42442386;     ISLnXNqBGv42442386 = ISLnXNqBGv40481517;     ISLnXNqBGv40481517 = ISLnXNqBGv54762241;     ISLnXNqBGv54762241 = ISLnXNqBGv49649540;     ISLnXNqBGv49649540 = ISLnXNqBGv57870444;     ISLnXNqBGv57870444 = ISLnXNqBGv13341380;     ISLnXNqBGv13341380 = ISLnXNqBGv39582247;     ISLnXNqBGv39582247 = ISLnXNqBGv99404806;     ISLnXNqBGv99404806 = ISLnXNqBGv19978563;     ISLnXNqBGv19978563 = ISLnXNqBGv75870105;     ISLnXNqBGv75870105 = ISLnXNqBGv96624567;     ISLnXNqBGv96624567 = ISLnXNqBGv90880226;     ISLnXNqBGv90880226 = ISLnXNqBGv98530839;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void MGkwlhxhGL5360842() {     long oppdflFUiU67711708 = -673757515;    long oppdflFUiU95117142 = -888878473;    long oppdflFUiU87359437 = -784591436;    long oppdflFUiU46387947 = -100649345;    long oppdflFUiU97313353 = -882461458;    long oppdflFUiU10704144 = -508940815;    long oppdflFUiU99339089 = -95214803;    long oppdflFUiU72547068 = -603731374;    long oppdflFUiU81472713 = -438066225;    long oppdflFUiU6657706 = -338064157;    long oppdflFUiU96469763 = -887614644;    long oppdflFUiU40093131 = -237655496;    long oppdflFUiU61623518 = -153434710;    long oppdflFUiU90645221 = -712366080;    long oppdflFUiU15446858 = -775688428;    long oppdflFUiU80814018 = -483209724;    long oppdflFUiU77015594 = -51144424;    long oppdflFUiU21150432 = -249362536;    long oppdflFUiU8185035 = 47935206;    long oppdflFUiU26705647 = -548386365;    long oppdflFUiU5534831 = -552279970;    long oppdflFUiU90461057 = -906549851;    long oppdflFUiU55058091 = -965065932;    long oppdflFUiU4412168 = -287250911;    long oppdflFUiU44265149 = 42688819;    long oppdflFUiU34755008 = -613332069;    long oppdflFUiU86200389 = 87017725;    long oppdflFUiU89963745 = -750472353;    long oppdflFUiU40750905 = -174442072;    long oppdflFUiU58851958 = -745380884;    long oppdflFUiU94246664 = -938824796;    long oppdflFUiU60579182 = -271499707;    long oppdflFUiU1460650 = 87492556;    long oppdflFUiU79136852 = -522028114;    long oppdflFUiU1550251 = -490525628;    long oppdflFUiU30358008 = -647291298;    long oppdflFUiU14304829 = -362657536;    long oppdflFUiU90159299 = -545077452;    long oppdflFUiU80512222 = -418418216;    long oppdflFUiU78819034 = -90166078;    long oppdflFUiU6466899 = -19877380;    long oppdflFUiU65884806 = -349192259;    long oppdflFUiU23427257 = -130426629;    long oppdflFUiU84303086 = -789516588;    long oppdflFUiU98425380 = -845089762;    long oppdflFUiU68290889 = -769055979;    long oppdflFUiU92588623 = -401632137;    long oppdflFUiU8677569 = -319232404;    long oppdflFUiU66848000 = 73181074;    long oppdflFUiU77194511 = -919322203;    long oppdflFUiU31498039 = -880848471;    long oppdflFUiU22891409 = -275662393;    long oppdflFUiU65390421 = -939063696;    long oppdflFUiU71323636 = -660801139;    long oppdflFUiU99826010 = -759837250;    long oppdflFUiU77250651 = -767207664;    long oppdflFUiU40059051 = -923812541;    long oppdflFUiU82947269 = -397340525;    long oppdflFUiU2122798 = -43338165;    long oppdflFUiU62558346 = -169129389;    long oppdflFUiU24503755 = -495958540;    long oppdflFUiU9375344 = -344742450;    long oppdflFUiU31796163 = -329289302;    long oppdflFUiU22620756 = -692685342;    long oppdflFUiU12411042 = -399239361;    long oppdflFUiU35890582 = -516114938;    long oppdflFUiU38632482 = -225148053;    long oppdflFUiU82486666 = -631406596;    long oppdflFUiU89094971 = -121840452;    long oppdflFUiU85088849 = -28397131;    long oppdflFUiU66509189 = -20552189;    long oppdflFUiU86856294 = -506066972;    long oppdflFUiU40638209 = -830944321;    long oppdflFUiU29366000 = -861898717;    long oppdflFUiU20238748 = -428508986;    long oppdflFUiU39650025 = -103087712;    long oppdflFUiU67033800 = -676123222;    long oppdflFUiU70755005 = -75549345;    long oppdflFUiU5986788 = -442161149;    long oppdflFUiU75974260 = -188255202;    long oppdflFUiU42166385 = -111699933;    long oppdflFUiU77522821 = -593749871;    long oppdflFUiU23115746 = -723653428;    long oppdflFUiU63556393 = -255119870;    long oppdflFUiU27353919 = -864532413;    long oppdflFUiU71355256 = -563162404;    long oppdflFUiU95188760 = -332436012;    long oppdflFUiU30137014 = -251706305;    long oppdflFUiU79310841 = -762190864;    long oppdflFUiU24299600 = -723317964;    long oppdflFUiU90298957 = -723478757;    long oppdflFUiU31357560 = -965317011;    long oppdflFUiU88036501 = -401739287;    long oppdflFUiU17953877 = -149288827;    long oppdflFUiU54315279 = -594207538;    long oppdflFUiU97091555 = -675134930;    long oppdflFUiU34088643 = 80097043;    long oppdflFUiU806501 = -437741288;    long oppdflFUiU71892045 = -290277227;    long oppdflFUiU62534798 = -673757515;     oppdflFUiU67711708 = oppdflFUiU95117142;     oppdflFUiU95117142 = oppdflFUiU87359437;     oppdflFUiU87359437 = oppdflFUiU46387947;     oppdflFUiU46387947 = oppdflFUiU97313353;     oppdflFUiU97313353 = oppdflFUiU10704144;     oppdflFUiU10704144 = oppdflFUiU99339089;     oppdflFUiU99339089 = oppdflFUiU72547068;     oppdflFUiU72547068 = oppdflFUiU81472713;     oppdflFUiU81472713 = oppdflFUiU6657706;     oppdflFUiU6657706 = oppdflFUiU96469763;     oppdflFUiU96469763 = oppdflFUiU40093131;     oppdflFUiU40093131 = oppdflFUiU61623518;     oppdflFUiU61623518 = oppdflFUiU90645221;     oppdflFUiU90645221 = oppdflFUiU15446858;     oppdflFUiU15446858 = oppdflFUiU80814018;     oppdflFUiU80814018 = oppdflFUiU77015594;     oppdflFUiU77015594 = oppdflFUiU21150432;     oppdflFUiU21150432 = oppdflFUiU8185035;     oppdflFUiU8185035 = oppdflFUiU26705647;     oppdflFUiU26705647 = oppdflFUiU5534831;     oppdflFUiU5534831 = oppdflFUiU90461057;     oppdflFUiU90461057 = oppdflFUiU55058091;     oppdflFUiU55058091 = oppdflFUiU4412168;     oppdflFUiU4412168 = oppdflFUiU44265149;     oppdflFUiU44265149 = oppdflFUiU34755008;     oppdflFUiU34755008 = oppdflFUiU86200389;     oppdflFUiU86200389 = oppdflFUiU89963745;     oppdflFUiU89963745 = oppdflFUiU40750905;     oppdflFUiU40750905 = oppdflFUiU58851958;     oppdflFUiU58851958 = oppdflFUiU94246664;     oppdflFUiU94246664 = oppdflFUiU60579182;     oppdflFUiU60579182 = oppdflFUiU1460650;     oppdflFUiU1460650 = oppdflFUiU79136852;     oppdflFUiU79136852 = oppdflFUiU1550251;     oppdflFUiU1550251 = oppdflFUiU30358008;     oppdflFUiU30358008 = oppdflFUiU14304829;     oppdflFUiU14304829 = oppdflFUiU90159299;     oppdflFUiU90159299 = oppdflFUiU80512222;     oppdflFUiU80512222 = oppdflFUiU78819034;     oppdflFUiU78819034 = oppdflFUiU6466899;     oppdflFUiU6466899 = oppdflFUiU65884806;     oppdflFUiU65884806 = oppdflFUiU23427257;     oppdflFUiU23427257 = oppdflFUiU84303086;     oppdflFUiU84303086 = oppdflFUiU98425380;     oppdflFUiU98425380 = oppdflFUiU68290889;     oppdflFUiU68290889 = oppdflFUiU92588623;     oppdflFUiU92588623 = oppdflFUiU8677569;     oppdflFUiU8677569 = oppdflFUiU66848000;     oppdflFUiU66848000 = oppdflFUiU77194511;     oppdflFUiU77194511 = oppdflFUiU31498039;     oppdflFUiU31498039 = oppdflFUiU22891409;     oppdflFUiU22891409 = oppdflFUiU65390421;     oppdflFUiU65390421 = oppdflFUiU71323636;     oppdflFUiU71323636 = oppdflFUiU99826010;     oppdflFUiU99826010 = oppdflFUiU77250651;     oppdflFUiU77250651 = oppdflFUiU40059051;     oppdflFUiU40059051 = oppdflFUiU82947269;     oppdflFUiU82947269 = oppdflFUiU2122798;     oppdflFUiU2122798 = oppdflFUiU62558346;     oppdflFUiU62558346 = oppdflFUiU24503755;     oppdflFUiU24503755 = oppdflFUiU9375344;     oppdflFUiU9375344 = oppdflFUiU31796163;     oppdflFUiU31796163 = oppdflFUiU22620756;     oppdflFUiU22620756 = oppdflFUiU12411042;     oppdflFUiU12411042 = oppdflFUiU35890582;     oppdflFUiU35890582 = oppdflFUiU38632482;     oppdflFUiU38632482 = oppdflFUiU82486666;     oppdflFUiU82486666 = oppdflFUiU89094971;     oppdflFUiU89094971 = oppdflFUiU85088849;     oppdflFUiU85088849 = oppdflFUiU66509189;     oppdflFUiU66509189 = oppdflFUiU86856294;     oppdflFUiU86856294 = oppdflFUiU40638209;     oppdflFUiU40638209 = oppdflFUiU29366000;     oppdflFUiU29366000 = oppdflFUiU20238748;     oppdflFUiU20238748 = oppdflFUiU39650025;     oppdflFUiU39650025 = oppdflFUiU67033800;     oppdflFUiU67033800 = oppdflFUiU70755005;     oppdflFUiU70755005 = oppdflFUiU5986788;     oppdflFUiU5986788 = oppdflFUiU75974260;     oppdflFUiU75974260 = oppdflFUiU42166385;     oppdflFUiU42166385 = oppdflFUiU77522821;     oppdflFUiU77522821 = oppdflFUiU23115746;     oppdflFUiU23115746 = oppdflFUiU63556393;     oppdflFUiU63556393 = oppdflFUiU27353919;     oppdflFUiU27353919 = oppdflFUiU71355256;     oppdflFUiU71355256 = oppdflFUiU95188760;     oppdflFUiU95188760 = oppdflFUiU30137014;     oppdflFUiU30137014 = oppdflFUiU79310841;     oppdflFUiU79310841 = oppdflFUiU24299600;     oppdflFUiU24299600 = oppdflFUiU90298957;     oppdflFUiU90298957 = oppdflFUiU31357560;     oppdflFUiU31357560 = oppdflFUiU88036501;     oppdflFUiU88036501 = oppdflFUiU17953877;     oppdflFUiU17953877 = oppdflFUiU54315279;     oppdflFUiU54315279 = oppdflFUiU97091555;     oppdflFUiU97091555 = oppdflFUiU34088643;     oppdflFUiU34088643 = oppdflFUiU806501;     oppdflFUiU806501 = oppdflFUiU71892045;     oppdflFUiU71892045 = oppdflFUiU62534798;     oppdflFUiU62534798 = oppdflFUiU67711708;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void GHQbfZYurH11359192() {     long digsqBbOtB77026974 = -576288541;    long digsqBbOtB50540064 = -905412976;    long digsqBbOtB7511518 = -498232049;    long digsqBbOtB4177970 = -292313337;    long digsqBbOtB37376593 = -858976615;    long digsqBbOtB4247506 = 32190325;    long digsqBbOtB72993161 = -994463681;    long digsqBbOtB61683224 = -800690522;    long digsqBbOtB74281370 = -818126896;    long digsqBbOtB75282163 = -158859825;    long digsqBbOtB33371748 = 21144283;    long digsqBbOtB51330881 = -875025311;    long digsqBbOtB57405234 = -838856844;    long digsqBbOtB22733863 = -691420185;    long digsqBbOtB30722895 = -627218839;    long digsqBbOtB85784542 = -510733202;    long digsqBbOtB20826362 = -78729511;    long digsqBbOtB33343073 = 20580151;    long digsqBbOtB90197966 = 94294377;    long digsqBbOtB89900994 = -627094206;    long digsqBbOtB94214182 = -877979898;    long digsqBbOtB14669970 = -729446184;    long digsqBbOtB91119357 = -579594932;    long digsqBbOtB63618797 = -904412021;    long digsqBbOtB7327692 = -276444231;    long digsqBbOtB662825 = -712543710;    long digsqBbOtB19958656 = -721871120;    long digsqBbOtB61058221 = -157609086;    long digsqBbOtB7867813 = -288861508;    long digsqBbOtB71632906 = -551465446;    long digsqBbOtB64245043 = -549476613;    long digsqBbOtB37838545 = -702671002;    long digsqBbOtB51319980 = -823598456;    long digsqBbOtB68165800 = -5588000;    long digsqBbOtB88200526 = -666938223;    long digsqBbOtB62182902 = 36483255;    long digsqBbOtB51772436 = 36142602;    long digsqBbOtB46196098 = -297672815;    long digsqBbOtB46737924 = -469634003;    long digsqBbOtB54918931 = -897351591;    long digsqBbOtB30530033 = -157033798;    long digsqBbOtB53536461 = -270464350;    long digsqBbOtB45144263 = -352307011;    long digsqBbOtB43059987 = -179911476;    long digsqBbOtB34375455 = -636865556;    long digsqBbOtB38530125 = 5409462;    long digsqBbOtB97838254 = 25533718;    long digsqBbOtB80148605 = -765775793;    long digsqBbOtB32875144 = -162515442;    long digsqBbOtB46832414 = -712335905;    long digsqBbOtB68465748 = -616724468;    long digsqBbOtB87108450 = -923648611;    long digsqBbOtB53398079 = -526840602;    long digsqBbOtB75904880 = 79345743;    long digsqBbOtB17145010 = -694755335;    long digsqBbOtB62357005 = -846842358;    long digsqBbOtB59420706 = -225818044;    long digsqBbOtB43892720 = -593820028;    long digsqBbOtB96850277 = 84130893;    long digsqBbOtB36713768 = -46432905;    long digsqBbOtB84288850 = -245938556;    long digsqBbOtB11934940 = -736854595;    long digsqBbOtB53815412 = -411829014;    long digsqBbOtB2648465 = -166661451;    long digsqBbOtB11037120 = -609383212;    long digsqBbOtB95533202 = -276184715;    long digsqBbOtB10901 = 48573144;    long digsqBbOtB89239433 = -733268844;    long digsqBbOtB34533337 = 75518037;    long digsqBbOtB68539993 = -563702095;    long digsqBbOtB34012106 = -446875804;    long digsqBbOtB74630264 = -781056696;    long digsqBbOtB86605148 = -509785846;    long digsqBbOtB35279035 = -8354033;    long digsqBbOtB59370961 = -370060409;    long digsqBbOtB40677721 = -507515549;    long digsqBbOtB69525707 = -277139173;    long digsqBbOtB48059371 = -299683457;    long digsqBbOtB29243343 = -167546466;    long digsqBbOtB68797567 = -181853694;    long digsqBbOtB2824571 = -638077429;    long digsqBbOtB39810050 = -956095327;    long digsqBbOtB28183077 = -995093644;    long digsqBbOtB61035398 = -576525603;    long digsqBbOtB3167158 = -934740979;    long digsqBbOtB77136593 = -625828003;    long digsqBbOtB84440466 = -75830401;    long digsqBbOtB75415099 = -802944199;    long digsqBbOtB51020791 = -310832666;    long digsqBbOtB25843521 = -820095865;    long digsqBbOtB2762196 = -737698701;    long digsqBbOtB7879716 = -370037371;    long digsqBbOtB49345820 = -281803709;    long digsqBbOtB10024157 = -323201098;    long digsqBbOtB70630081 = -551413035;    long digsqBbOtB18595093 = -420179203;    long digsqBbOtB99721049 = -858635336;    long digsqBbOtB42495798 = -85645561;    long digsqBbOtB32022867 = -570528264;    long digsqBbOtB38842252 = -576288541;     digsqBbOtB77026974 = digsqBbOtB50540064;     digsqBbOtB50540064 = digsqBbOtB7511518;     digsqBbOtB7511518 = digsqBbOtB4177970;     digsqBbOtB4177970 = digsqBbOtB37376593;     digsqBbOtB37376593 = digsqBbOtB4247506;     digsqBbOtB4247506 = digsqBbOtB72993161;     digsqBbOtB72993161 = digsqBbOtB61683224;     digsqBbOtB61683224 = digsqBbOtB74281370;     digsqBbOtB74281370 = digsqBbOtB75282163;     digsqBbOtB75282163 = digsqBbOtB33371748;     digsqBbOtB33371748 = digsqBbOtB51330881;     digsqBbOtB51330881 = digsqBbOtB57405234;     digsqBbOtB57405234 = digsqBbOtB22733863;     digsqBbOtB22733863 = digsqBbOtB30722895;     digsqBbOtB30722895 = digsqBbOtB85784542;     digsqBbOtB85784542 = digsqBbOtB20826362;     digsqBbOtB20826362 = digsqBbOtB33343073;     digsqBbOtB33343073 = digsqBbOtB90197966;     digsqBbOtB90197966 = digsqBbOtB89900994;     digsqBbOtB89900994 = digsqBbOtB94214182;     digsqBbOtB94214182 = digsqBbOtB14669970;     digsqBbOtB14669970 = digsqBbOtB91119357;     digsqBbOtB91119357 = digsqBbOtB63618797;     digsqBbOtB63618797 = digsqBbOtB7327692;     digsqBbOtB7327692 = digsqBbOtB662825;     digsqBbOtB662825 = digsqBbOtB19958656;     digsqBbOtB19958656 = digsqBbOtB61058221;     digsqBbOtB61058221 = digsqBbOtB7867813;     digsqBbOtB7867813 = digsqBbOtB71632906;     digsqBbOtB71632906 = digsqBbOtB64245043;     digsqBbOtB64245043 = digsqBbOtB37838545;     digsqBbOtB37838545 = digsqBbOtB51319980;     digsqBbOtB51319980 = digsqBbOtB68165800;     digsqBbOtB68165800 = digsqBbOtB88200526;     digsqBbOtB88200526 = digsqBbOtB62182902;     digsqBbOtB62182902 = digsqBbOtB51772436;     digsqBbOtB51772436 = digsqBbOtB46196098;     digsqBbOtB46196098 = digsqBbOtB46737924;     digsqBbOtB46737924 = digsqBbOtB54918931;     digsqBbOtB54918931 = digsqBbOtB30530033;     digsqBbOtB30530033 = digsqBbOtB53536461;     digsqBbOtB53536461 = digsqBbOtB45144263;     digsqBbOtB45144263 = digsqBbOtB43059987;     digsqBbOtB43059987 = digsqBbOtB34375455;     digsqBbOtB34375455 = digsqBbOtB38530125;     digsqBbOtB38530125 = digsqBbOtB97838254;     digsqBbOtB97838254 = digsqBbOtB80148605;     digsqBbOtB80148605 = digsqBbOtB32875144;     digsqBbOtB32875144 = digsqBbOtB46832414;     digsqBbOtB46832414 = digsqBbOtB68465748;     digsqBbOtB68465748 = digsqBbOtB87108450;     digsqBbOtB87108450 = digsqBbOtB53398079;     digsqBbOtB53398079 = digsqBbOtB75904880;     digsqBbOtB75904880 = digsqBbOtB17145010;     digsqBbOtB17145010 = digsqBbOtB62357005;     digsqBbOtB62357005 = digsqBbOtB59420706;     digsqBbOtB59420706 = digsqBbOtB43892720;     digsqBbOtB43892720 = digsqBbOtB96850277;     digsqBbOtB96850277 = digsqBbOtB36713768;     digsqBbOtB36713768 = digsqBbOtB84288850;     digsqBbOtB84288850 = digsqBbOtB11934940;     digsqBbOtB11934940 = digsqBbOtB53815412;     digsqBbOtB53815412 = digsqBbOtB2648465;     digsqBbOtB2648465 = digsqBbOtB11037120;     digsqBbOtB11037120 = digsqBbOtB95533202;     digsqBbOtB95533202 = digsqBbOtB10901;     digsqBbOtB10901 = digsqBbOtB89239433;     digsqBbOtB89239433 = digsqBbOtB34533337;     digsqBbOtB34533337 = digsqBbOtB68539993;     digsqBbOtB68539993 = digsqBbOtB34012106;     digsqBbOtB34012106 = digsqBbOtB74630264;     digsqBbOtB74630264 = digsqBbOtB86605148;     digsqBbOtB86605148 = digsqBbOtB35279035;     digsqBbOtB35279035 = digsqBbOtB59370961;     digsqBbOtB59370961 = digsqBbOtB40677721;     digsqBbOtB40677721 = digsqBbOtB69525707;     digsqBbOtB69525707 = digsqBbOtB48059371;     digsqBbOtB48059371 = digsqBbOtB29243343;     digsqBbOtB29243343 = digsqBbOtB68797567;     digsqBbOtB68797567 = digsqBbOtB2824571;     digsqBbOtB2824571 = digsqBbOtB39810050;     digsqBbOtB39810050 = digsqBbOtB28183077;     digsqBbOtB28183077 = digsqBbOtB61035398;     digsqBbOtB61035398 = digsqBbOtB3167158;     digsqBbOtB3167158 = digsqBbOtB77136593;     digsqBbOtB77136593 = digsqBbOtB84440466;     digsqBbOtB84440466 = digsqBbOtB75415099;     digsqBbOtB75415099 = digsqBbOtB51020791;     digsqBbOtB51020791 = digsqBbOtB25843521;     digsqBbOtB25843521 = digsqBbOtB2762196;     digsqBbOtB2762196 = digsqBbOtB7879716;     digsqBbOtB7879716 = digsqBbOtB49345820;     digsqBbOtB49345820 = digsqBbOtB10024157;     digsqBbOtB10024157 = digsqBbOtB70630081;     digsqBbOtB70630081 = digsqBbOtB18595093;     digsqBbOtB18595093 = digsqBbOtB99721049;     digsqBbOtB99721049 = digsqBbOtB42495798;     digsqBbOtB42495798 = digsqBbOtB32022867;     digsqBbOtB32022867 = digsqBbOtB38842252;     digsqBbOtB38842252 = digsqBbOtB77026974;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void wolqHcDbvm69600073() {     long zUriQwbvyW15684103 = -833194579;    long zUriQwbvyW75861785 = 7100696;    long zUriQwbvyW49007891 = -826706816;    long zUriQwbvyW7116566 = -114379770;    long zUriQwbvyW64829612 = -420440746;    long zUriQwbvyW42596538 = -524530196;    long zUriQwbvyW96815672 = -499473316;    long zUriQwbvyW63191051 = -355009897;    long zUriQwbvyW3965138 = -818486309;    long zUriQwbvyW17579673 = -415367013;    long zUriQwbvyW48345177 = -94666932;    long zUriQwbvyW31313736 = -932109696;    long zUriQwbvyW5212477 = -536400395;    long zUriQwbvyW24819691 = -114599131;    long zUriQwbvyW8451023 = -291712099;    long zUriQwbvyW32790974 = -201068744;    long zUriQwbvyW26637062 = -16744038;    long zUriQwbvyW48242752 = -117382587;    long zUriQwbvyW10931387 = -870140777;    long zUriQwbvyW66383396 = -775460194;    long zUriQwbvyW7427204 = 94532940;    long zUriQwbvyW55779382 = -731049094;    long zUriQwbvyW62115212 = -85238629;    long zUriQwbvyW32625998 = -710092748;    long zUriQwbvyW34708535 = -246366448;    long zUriQwbvyW52547139 = -621676835;    long zUriQwbvyW15677719 = -336381902;    long zUriQwbvyW59773996 = -768589039;    long zUriQwbvyW55520678 = -754993041;    long zUriQwbvyW21331628 = -574586312;    long zUriQwbvyW60584104 = -798787979;    long zUriQwbvyW55310305 = -97366896;    long zUriQwbvyW3686372 = -889672075;    long zUriQwbvyW92112610 = -902299935;    long zUriQwbvyW79184603 = -155717962;    long zUriQwbvyW76842727 = -380281390;    long zUriQwbvyW57389926 = -576117432;    long zUriQwbvyW19358087 = -261417749;    long zUriQwbvyW69743933 = -177802569;    long zUriQwbvyW7788423 = -696360427;    long zUriQwbvyW82375550 = 1884764;    long zUriQwbvyW98402787 = -616139454;    long zUriQwbvyW78177668 = -46563594;    long zUriQwbvyW54540485 = -155295836;    long zUriQwbvyW58389523 = -593254357;    long zUriQwbvyW42791493 = -373832612;    long zUriQwbvyW4654475 = 87488750;    long zUriQwbvyW61389013 = -268950242;    long zUriQwbvyW12119225 = 23788149;    long zUriQwbvyW28088253 = -909365615;    long zUriQwbvyW50503503 = -384583350;    long zUriQwbvyW24001245 = -884560855;    long zUriQwbvyW61778428 = -78873475;    long zUriQwbvyW509091 = -151545730;    long zUriQwbvyW62172870 = -275631783;    long zUriQwbvyW59904720 = -2145485;    long zUriQwbvyW13746574 = -907660676;    long zUriQwbvyW16381894 = -16614069;    long zUriQwbvyW72408030 = -868013323;    long zUriQwbvyW12282474 = -798763912;    long zUriQwbvyW26918819 = -88148294;    long zUriQwbvyW37041677 = -730884277;    long zUriQwbvyW7670373 = -600016856;    long zUriQwbvyW82633509 = -143899997;    long zUriQwbvyW56995569 = -616579034;    long zUriQwbvyW93034872 = -997300036;    long zUriQwbvyW27627364 = 57562379;    long zUriQwbvyW13099866 = -634100460;    long zUriQwbvyW45635088 = -958881169;    long zUriQwbvyW31608295 = -911430709;    long zUriQwbvyW75401047 = -624951313;    long zUriQwbvyW7278976 = -755326289;    long zUriQwbvyW78498819 = -939580018;    long zUriQwbvyW3142964 = -73780351;    long zUriQwbvyW84007845 = -677344959;    long zUriQwbvyW9024417 = -289327606;    long zUriQwbvyW77601714 = -584485500;    long zUriQwbvyW7574728 = -929942794;    long zUriQwbvyW74236475 = -16838391;    long zUriQwbvyW91917041 = -872533836;    long zUriQwbvyW47892664 = -609165585;    long zUriQwbvyW54288705 = 32568339;    long zUriQwbvyW47654771 = -692377189;    long zUriQwbvyW27432426 = -845627427;    long zUriQwbvyW70828125 = -90002962;    long zUriQwbvyW36582859 = -914227125;    long zUriQwbvyW93531877 = 81506578;    long zUriQwbvyW3177282 = -638126346;    long zUriQwbvyW29939741 = -526668153;    long zUriQwbvyW19279883 = -53572477;    long zUriQwbvyW63096154 = -472620715;    long zUriQwbvyW41008033 = -459503364;    long zUriQwbvyW46950057 = -393404426;    long zUriQwbvyW57461459 = -379038658;    long zUriQwbvyW80869604 = -508212133;    long zUriQwbvyW45333874 = -267230959;    long zUriQwbvyW90732414 = 83877402;    long zUriQwbvyW95544159 = -902663597;    long zUriQwbvyW97544916 = -538716802;    long zUriQwbvyW65354651 = -833194579;     zUriQwbvyW15684103 = zUriQwbvyW75861785;     zUriQwbvyW75861785 = zUriQwbvyW49007891;     zUriQwbvyW49007891 = zUriQwbvyW7116566;     zUriQwbvyW7116566 = zUriQwbvyW64829612;     zUriQwbvyW64829612 = zUriQwbvyW42596538;     zUriQwbvyW42596538 = zUriQwbvyW96815672;     zUriQwbvyW96815672 = zUriQwbvyW63191051;     zUriQwbvyW63191051 = zUriQwbvyW3965138;     zUriQwbvyW3965138 = zUriQwbvyW17579673;     zUriQwbvyW17579673 = zUriQwbvyW48345177;     zUriQwbvyW48345177 = zUriQwbvyW31313736;     zUriQwbvyW31313736 = zUriQwbvyW5212477;     zUriQwbvyW5212477 = zUriQwbvyW24819691;     zUriQwbvyW24819691 = zUriQwbvyW8451023;     zUriQwbvyW8451023 = zUriQwbvyW32790974;     zUriQwbvyW32790974 = zUriQwbvyW26637062;     zUriQwbvyW26637062 = zUriQwbvyW48242752;     zUriQwbvyW48242752 = zUriQwbvyW10931387;     zUriQwbvyW10931387 = zUriQwbvyW66383396;     zUriQwbvyW66383396 = zUriQwbvyW7427204;     zUriQwbvyW7427204 = zUriQwbvyW55779382;     zUriQwbvyW55779382 = zUriQwbvyW62115212;     zUriQwbvyW62115212 = zUriQwbvyW32625998;     zUriQwbvyW32625998 = zUriQwbvyW34708535;     zUriQwbvyW34708535 = zUriQwbvyW52547139;     zUriQwbvyW52547139 = zUriQwbvyW15677719;     zUriQwbvyW15677719 = zUriQwbvyW59773996;     zUriQwbvyW59773996 = zUriQwbvyW55520678;     zUriQwbvyW55520678 = zUriQwbvyW21331628;     zUriQwbvyW21331628 = zUriQwbvyW60584104;     zUriQwbvyW60584104 = zUriQwbvyW55310305;     zUriQwbvyW55310305 = zUriQwbvyW3686372;     zUriQwbvyW3686372 = zUriQwbvyW92112610;     zUriQwbvyW92112610 = zUriQwbvyW79184603;     zUriQwbvyW79184603 = zUriQwbvyW76842727;     zUriQwbvyW76842727 = zUriQwbvyW57389926;     zUriQwbvyW57389926 = zUriQwbvyW19358087;     zUriQwbvyW19358087 = zUriQwbvyW69743933;     zUriQwbvyW69743933 = zUriQwbvyW7788423;     zUriQwbvyW7788423 = zUriQwbvyW82375550;     zUriQwbvyW82375550 = zUriQwbvyW98402787;     zUriQwbvyW98402787 = zUriQwbvyW78177668;     zUriQwbvyW78177668 = zUriQwbvyW54540485;     zUriQwbvyW54540485 = zUriQwbvyW58389523;     zUriQwbvyW58389523 = zUriQwbvyW42791493;     zUriQwbvyW42791493 = zUriQwbvyW4654475;     zUriQwbvyW4654475 = zUriQwbvyW61389013;     zUriQwbvyW61389013 = zUriQwbvyW12119225;     zUriQwbvyW12119225 = zUriQwbvyW28088253;     zUriQwbvyW28088253 = zUriQwbvyW50503503;     zUriQwbvyW50503503 = zUriQwbvyW24001245;     zUriQwbvyW24001245 = zUriQwbvyW61778428;     zUriQwbvyW61778428 = zUriQwbvyW509091;     zUriQwbvyW509091 = zUriQwbvyW62172870;     zUriQwbvyW62172870 = zUriQwbvyW59904720;     zUriQwbvyW59904720 = zUriQwbvyW13746574;     zUriQwbvyW13746574 = zUriQwbvyW16381894;     zUriQwbvyW16381894 = zUriQwbvyW72408030;     zUriQwbvyW72408030 = zUriQwbvyW12282474;     zUriQwbvyW12282474 = zUriQwbvyW26918819;     zUriQwbvyW26918819 = zUriQwbvyW37041677;     zUriQwbvyW37041677 = zUriQwbvyW7670373;     zUriQwbvyW7670373 = zUriQwbvyW82633509;     zUriQwbvyW82633509 = zUriQwbvyW56995569;     zUriQwbvyW56995569 = zUriQwbvyW93034872;     zUriQwbvyW93034872 = zUriQwbvyW27627364;     zUriQwbvyW27627364 = zUriQwbvyW13099866;     zUriQwbvyW13099866 = zUriQwbvyW45635088;     zUriQwbvyW45635088 = zUriQwbvyW31608295;     zUriQwbvyW31608295 = zUriQwbvyW75401047;     zUriQwbvyW75401047 = zUriQwbvyW7278976;     zUriQwbvyW7278976 = zUriQwbvyW78498819;     zUriQwbvyW78498819 = zUriQwbvyW3142964;     zUriQwbvyW3142964 = zUriQwbvyW84007845;     zUriQwbvyW84007845 = zUriQwbvyW9024417;     zUriQwbvyW9024417 = zUriQwbvyW77601714;     zUriQwbvyW77601714 = zUriQwbvyW7574728;     zUriQwbvyW7574728 = zUriQwbvyW74236475;     zUriQwbvyW74236475 = zUriQwbvyW91917041;     zUriQwbvyW91917041 = zUriQwbvyW47892664;     zUriQwbvyW47892664 = zUriQwbvyW54288705;     zUriQwbvyW54288705 = zUriQwbvyW47654771;     zUriQwbvyW47654771 = zUriQwbvyW27432426;     zUriQwbvyW27432426 = zUriQwbvyW70828125;     zUriQwbvyW70828125 = zUriQwbvyW36582859;     zUriQwbvyW36582859 = zUriQwbvyW93531877;     zUriQwbvyW93531877 = zUriQwbvyW3177282;     zUriQwbvyW3177282 = zUriQwbvyW29939741;     zUriQwbvyW29939741 = zUriQwbvyW19279883;     zUriQwbvyW19279883 = zUriQwbvyW63096154;     zUriQwbvyW63096154 = zUriQwbvyW41008033;     zUriQwbvyW41008033 = zUriQwbvyW46950057;     zUriQwbvyW46950057 = zUriQwbvyW57461459;     zUriQwbvyW57461459 = zUriQwbvyW80869604;     zUriQwbvyW80869604 = zUriQwbvyW45333874;     zUriQwbvyW45333874 = zUriQwbvyW90732414;     zUriQwbvyW90732414 = zUriQwbvyW95544159;     zUriQwbvyW95544159 = zUriQwbvyW97544916;     zUriQwbvyW97544916 = zUriQwbvyW65354651;     zUriQwbvyW65354651 = zUriQwbvyW15684103;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void hrQtCVkYME27510758() {     long vZkiiDFbLL9002100 = -555104059;    long vZkiiDFbLL9608810 = -717355322;    long vZkiiDFbLL49923699 = -483437583;    long vZkiiDFbLL96410241 = -122007784;    long vZkiiDFbLL57894201 = -285984795;    long vZkiiDFbLL60314534 = -410968741;    long vZkiiDFbLL73191552 = -601839156;    long vZkiiDFbLL24659931 = -705720188;    long vZkiiDFbLL38683151 = -52053022;    long vZkiiDFbLL45869655 = -213868600;    long vZkiiDFbLL21609296 = -876362647;    long vZkiiDFbLL59769627 = -340139807;    long vZkiiDFbLL84984120 = -15825775;    long vZkiiDFbLL66027729 = 95271397;    long vZkiiDFbLL71231114 = 99385862;    long vZkiiDFbLL95000393 = -288768199;    long vZkiiDFbLL76426766 = -608743823;    long vZkiiDFbLL7738486 = 78161829;    long vZkiiDFbLL12457138 = -402405212;    long vZkiiDFbLL88426590 = -657167877;    long vZkiiDFbLL75145188 = -890570998;    long vZkiiDFbLL69845118 = -389104229;    long vZkiiDFbLL32702502 = -818667905;    long vZkiiDFbLL59411458 = -333893768;    long vZkiiDFbLL29399305 = -162508262;    long vZkiiDFbLL29098323 = -626312816;    long vZkiiDFbLL43165124 = -204937251;    long vZkiiDFbLL76335246 = -778653865;    long vZkiiDFbLL30392775 = -955299136;    long vZkiiDFbLL89375889 = -113033772;    long vZkiiDFbLL75216015 = -109878637;    long vZkiiDFbLL19049818 = -611737556;    long vZkiiDFbLL38256218 = -210319093;    long vZkiiDFbLL10432477 = -502450947;    long vZkiiDFbLL22314799 = -703047037;    long vZkiiDFbLL36000905 = -965275886;    long vZkiiDFbLL25770536 = -939150707;    long vZkiiDFbLL35579636 = -103829025;    long vZkiiDFbLL8205994 = -655238321;    long vZkiiDFbLL12771417 = -544246176;    long vZkiiDFbLL2324802 = -963802933;    long vZkiiDFbLL94246110 = -275554562;    long vZkiiDFbLL41927897 = -122195242;    long vZkiiDFbLL15783484 = -47395418;    long vZkiiDFbLL58369602 = -208901354;    long vZkiiDFbLL61958495 = 90180369;    long vZkiiDFbLL246615 = -496332980;    long vZkiiDFbLL90673150 = -241015707;    long vZkiiDFbLL15047684 = -125874587;    long vZkiiDFbLL34140331 = -659389733;    long vZkiiDFbLL94395427 = -231102728;    long vZkiiDFbLL35728932 = -978393333;    long vZkiiDFbLL26438432 = -578767796;    long vZkiiDFbLL72278787 = -846403835;    long vZkiiDFbLL52365569 = -495517634;    long vZkiiDFbLL39156981 = -65999830;    long vZkiiDFbLL76906308 = -898687417;    long vZkiiDFbLL90512240 = -49543815;    long vZkiiDFbLL67010936 = -959499522;    long vZkiiDFbLL28795878 = -659671980;    long vZkiiDFbLL17149411 = -106031491;    long vZkiiDFbLL96856306 = -823185292;    long vZkiiDFbLL94267155 = -750421053;    long vZkiiDFbLL49307261 = -939019250;    long vZkiiDFbLL70653639 = -3989964;    long vZkiiDFbLL2559478 = -164625091;    long vZkiiDFbLL21513410 = -29820714;    long vZkiiDFbLL74551643 = -513374828;    long vZkiiDFbLL43712930 = -201681567;    long vZkiiDFbLL35230209 = 64661747;    long vZkiiDFbLL69229857 = -349617492;    long vZkiiDFbLL40847131 = -404914798;    long vZkiiDFbLL99532491 = -266599851;    long vZkiiDFbLL99685721 = -858159036;    long vZkiiDFbLL86101789 = -693364944;    long vZkiiDFbLL80899078 = -515016437;    long vZkiiDFbLL27917222 = -166908987;    long vZkiiDFbLL16919018 = -671272488;    long vZkiiDFbLL1041857 = -24992415;    long vZkiiDFbLL67440809 = -152688632;    long vZkiiDFbLL28851709 = -29979837;    long vZkiiDFbLL52491974 = -963921544;    long vZkiiDFbLL61287563 = -552779279;    long vZkiiDFbLL96252444 = -195909403;    long vZkiiDFbLL94980462 = -881931045;    long vZkiiDFbLL39487083 = -131485304;    long vZkiiDFbLL92611386 = 67030240;    long vZkiiDFbLL65977430 = -363915258;    long vZkiiDFbLL58066907 = 93066686;    long vZkiiDFbLL83157818 = -537047207;    long vZkiiDFbLL59094597 = 33411531;    long vZkiiDFbLL35258295 = -789606893;    long vZkiiDFbLL68568699 = -144329504;    long vZkiiDFbLL79410116 = -995566342;    long vZkiiDFbLL95622006 = -338214686;    long vZkiiDFbLL5468496 = -40617642;    long vZkiiDFbLL99978954 = -525133510;    long vZkiiDFbLL92620635 = -183175992;    long vZkiiDFbLL45129844 = 56594546;    long vZkiiDFbLL55810124 = -555104059;     vZkiiDFbLL9002100 = vZkiiDFbLL9608810;     vZkiiDFbLL9608810 = vZkiiDFbLL49923699;     vZkiiDFbLL49923699 = vZkiiDFbLL96410241;     vZkiiDFbLL96410241 = vZkiiDFbLL57894201;     vZkiiDFbLL57894201 = vZkiiDFbLL60314534;     vZkiiDFbLL60314534 = vZkiiDFbLL73191552;     vZkiiDFbLL73191552 = vZkiiDFbLL24659931;     vZkiiDFbLL24659931 = vZkiiDFbLL38683151;     vZkiiDFbLL38683151 = vZkiiDFbLL45869655;     vZkiiDFbLL45869655 = vZkiiDFbLL21609296;     vZkiiDFbLL21609296 = vZkiiDFbLL59769627;     vZkiiDFbLL59769627 = vZkiiDFbLL84984120;     vZkiiDFbLL84984120 = vZkiiDFbLL66027729;     vZkiiDFbLL66027729 = vZkiiDFbLL71231114;     vZkiiDFbLL71231114 = vZkiiDFbLL95000393;     vZkiiDFbLL95000393 = vZkiiDFbLL76426766;     vZkiiDFbLL76426766 = vZkiiDFbLL7738486;     vZkiiDFbLL7738486 = vZkiiDFbLL12457138;     vZkiiDFbLL12457138 = vZkiiDFbLL88426590;     vZkiiDFbLL88426590 = vZkiiDFbLL75145188;     vZkiiDFbLL75145188 = vZkiiDFbLL69845118;     vZkiiDFbLL69845118 = vZkiiDFbLL32702502;     vZkiiDFbLL32702502 = vZkiiDFbLL59411458;     vZkiiDFbLL59411458 = vZkiiDFbLL29399305;     vZkiiDFbLL29399305 = vZkiiDFbLL29098323;     vZkiiDFbLL29098323 = vZkiiDFbLL43165124;     vZkiiDFbLL43165124 = vZkiiDFbLL76335246;     vZkiiDFbLL76335246 = vZkiiDFbLL30392775;     vZkiiDFbLL30392775 = vZkiiDFbLL89375889;     vZkiiDFbLL89375889 = vZkiiDFbLL75216015;     vZkiiDFbLL75216015 = vZkiiDFbLL19049818;     vZkiiDFbLL19049818 = vZkiiDFbLL38256218;     vZkiiDFbLL38256218 = vZkiiDFbLL10432477;     vZkiiDFbLL10432477 = vZkiiDFbLL22314799;     vZkiiDFbLL22314799 = vZkiiDFbLL36000905;     vZkiiDFbLL36000905 = vZkiiDFbLL25770536;     vZkiiDFbLL25770536 = vZkiiDFbLL35579636;     vZkiiDFbLL35579636 = vZkiiDFbLL8205994;     vZkiiDFbLL8205994 = vZkiiDFbLL12771417;     vZkiiDFbLL12771417 = vZkiiDFbLL2324802;     vZkiiDFbLL2324802 = vZkiiDFbLL94246110;     vZkiiDFbLL94246110 = vZkiiDFbLL41927897;     vZkiiDFbLL41927897 = vZkiiDFbLL15783484;     vZkiiDFbLL15783484 = vZkiiDFbLL58369602;     vZkiiDFbLL58369602 = vZkiiDFbLL61958495;     vZkiiDFbLL61958495 = vZkiiDFbLL246615;     vZkiiDFbLL246615 = vZkiiDFbLL90673150;     vZkiiDFbLL90673150 = vZkiiDFbLL15047684;     vZkiiDFbLL15047684 = vZkiiDFbLL34140331;     vZkiiDFbLL34140331 = vZkiiDFbLL94395427;     vZkiiDFbLL94395427 = vZkiiDFbLL35728932;     vZkiiDFbLL35728932 = vZkiiDFbLL26438432;     vZkiiDFbLL26438432 = vZkiiDFbLL72278787;     vZkiiDFbLL72278787 = vZkiiDFbLL52365569;     vZkiiDFbLL52365569 = vZkiiDFbLL39156981;     vZkiiDFbLL39156981 = vZkiiDFbLL76906308;     vZkiiDFbLL76906308 = vZkiiDFbLL90512240;     vZkiiDFbLL90512240 = vZkiiDFbLL67010936;     vZkiiDFbLL67010936 = vZkiiDFbLL28795878;     vZkiiDFbLL28795878 = vZkiiDFbLL17149411;     vZkiiDFbLL17149411 = vZkiiDFbLL96856306;     vZkiiDFbLL96856306 = vZkiiDFbLL94267155;     vZkiiDFbLL94267155 = vZkiiDFbLL49307261;     vZkiiDFbLL49307261 = vZkiiDFbLL70653639;     vZkiiDFbLL70653639 = vZkiiDFbLL2559478;     vZkiiDFbLL2559478 = vZkiiDFbLL21513410;     vZkiiDFbLL21513410 = vZkiiDFbLL74551643;     vZkiiDFbLL74551643 = vZkiiDFbLL43712930;     vZkiiDFbLL43712930 = vZkiiDFbLL35230209;     vZkiiDFbLL35230209 = vZkiiDFbLL69229857;     vZkiiDFbLL69229857 = vZkiiDFbLL40847131;     vZkiiDFbLL40847131 = vZkiiDFbLL99532491;     vZkiiDFbLL99532491 = vZkiiDFbLL99685721;     vZkiiDFbLL99685721 = vZkiiDFbLL86101789;     vZkiiDFbLL86101789 = vZkiiDFbLL80899078;     vZkiiDFbLL80899078 = vZkiiDFbLL27917222;     vZkiiDFbLL27917222 = vZkiiDFbLL16919018;     vZkiiDFbLL16919018 = vZkiiDFbLL1041857;     vZkiiDFbLL1041857 = vZkiiDFbLL67440809;     vZkiiDFbLL67440809 = vZkiiDFbLL28851709;     vZkiiDFbLL28851709 = vZkiiDFbLL52491974;     vZkiiDFbLL52491974 = vZkiiDFbLL61287563;     vZkiiDFbLL61287563 = vZkiiDFbLL96252444;     vZkiiDFbLL96252444 = vZkiiDFbLL94980462;     vZkiiDFbLL94980462 = vZkiiDFbLL39487083;     vZkiiDFbLL39487083 = vZkiiDFbLL92611386;     vZkiiDFbLL92611386 = vZkiiDFbLL65977430;     vZkiiDFbLL65977430 = vZkiiDFbLL58066907;     vZkiiDFbLL58066907 = vZkiiDFbLL83157818;     vZkiiDFbLL83157818 = vZkiiDFbLL59094597;     vZkiiDFbLL59094597 = vZkiiDFbLL35258295;     vZkiiDFbLL35258295 = vZkiiDFbLL68568699;     vZkiiDFbLL68568699 = vZkiiDFbLL79410116;     vZkiiDFbLL79410116 = vZkiiDFbLL95622006;     vZkiiDFbLL95622006 = vZkiiDFbLL5468496;     vZkiiDFbLL5468496 = vZkiiDFbLL99978954;     vZkiiDFbLL99978954 = vZkiiDFbLL92620635;     vZkiiDFbLL92620635 = vZkiiDFbLL45129844;     vZkiiDFbLL45129844 = vZkiiDFbLL55810124;     vZkiiDFbLL55810124 = vZkiiDFbLL9002100;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void BXtmhUVFuH63825535() {     long FUjovOmuGq86050085 = -754511464;    long FUjovOmuGq2381614 = -102868065;    long FUjovOmuGq38112412 = -51347426;    long FUjovOmuGq97772010 = -313976897;    long FUjovOmuGq21680024 = -81121715;    long FUjovOmuGq54566616 = -701295143;    long FUjovOmuGq17900660 = 78817332;    long FUjovOmuGq60254842 = -872707747;    long FUjovOmuGq40880528 = -269456362;    long FUjovOmuGq23625711 = -598604332;    long FUjovOmuGq17441845 = -438871548;    long FUjovOmuGq64145613 = 58169173;    long FUjovOmuGq83956701 = -416424925;    long FUjovOmuGq47764692 = -799387887;    long FUjovOmuGq93018355 = -572500631;    long FUjovOmuGq54459294 = 32200345;    long FUjovOmuGq70229122 = -440008902;    long FUjovOmuGq58310956 = -40073708;    long FUjovOmuGq34531100 = -205336618;    long FUjovOmuGq12503667 = -643144026;    long FUjovOmuGq30533259 = -639675084;    long FUjovOmuGq6616660 = -550322766;    long FUjovOmuGq35587260 = -22534076;    long FUjovOmuGq43689506 = -716006919;    long FUjovOmuGq32249479 = -830286986;    long FUjovOmuGq42068188 = -65709896;    long FUjovOmuGq22022887 = -216568310;    long FUjovOmuGq92172 = 33806809;    long FUjovOmuGq64504565 = 66269185;    long FUjovOmuGq16878608 = -648656234;    long FUjovOmuGq37799670 = -352974080;    long FUjovOmuGq22858762 = -183483678;    long FUjovOmuGq1498342 = 5764014;    long FUjovOmuGq64194219 = -630016875;    long FUjovOmuGq50690282 = -725352794;    long FUjovOmuGq22192127 = -348901113;    long FUjovOmuGq81973368 = -422871901;    long FUjovOmuGq32265296 = -950120839;    long FUjovOmuGq71970177 = -725551539;    long FUjovOmuGq85070633 = -729347118;    long FUjovOmuGq99185905 = -391586859;    long FUjovOmuGq33731499 = -447203258;    long FUjovOmuGq78194911 = -391100889;    long FUjovOmuGq64990104 = 38525711;    long FUjovOmuGq2318880 = -777303028;    long FUjovOmuGq84964411 = -348793670;    long FUjovOmuGq1319931 = -620519994;    long FUjovOmuGq83315552 = -466441714;    long FUjovOmuGq33191966 = -411557613;    long FUjovOmuGq56020316 = -354404400;    long FUjovOmuGq65118813 = -664839499;    long FUjovOmuGq84415081 = -442132850;    long FUjovOmuGq61032489 = -98540475;    long FUjovOmuGq79730818 = -486051277;    long FUjovOmuGq33292276 = -175231153;    long FUjovOmuGq79433425 = -104188698;    long FUjovOmuGq66794353 = 19666011;    long FUjovOmuGq94422906 = -335340508;    long FUjovOmuGq65522532 = -483689911;    long FUjovOmuGq79611835 = 84588181;    long FUjovOmuGq32543729 = -384726834;    long FUjovOmuGq17808488 = -954989478;    long FUjovOmuGq95750276 = -838976933;    long FUjovOmuGq24001920 = -620800129;    long FUjovOmuGq85826040 = -145630252;    long FUjovOmuGq94583083 = -155387871;    long FUjovOmuGq62647271 = -947594841;    long FUjovOmuGq19762483 = -786408051;    long FUjovOmuGq97074409 = 25964907;    long FUjovOmuGq70826229 = -123599519;    long FUjovOmuGq72485926 = -544927755;    long FUjovOmuGq37963827 = -489888063;    long FUjovOmuGq86340778 = -314522170;    long FUjovOmuGq49460467 = -475989500;    long FUjovOmuGq13317761 = -151557167;    long FUjovOmuGq96801760 = -92471827;    long FUjovOmuGq28421748 = -59221878;    long FUjovOmuGq70597155 = 38940212;    long FUjovOmuGq41370626 = -938703892;    long FUjovOmuGq47285068 = -381493316;    long FUjovOmuGq40748257 = -445189903;    long FUjovOmuGq38707334 = -750126596;    long FUjovOmuGq66900206 = -554635578;    long FUjovOmuGq8484250 = -579326416;    long FUjovOmuGq51759795 = -983816735;    long FUjovOmuGq53384589 = -910841230;    long FUjovOmuGq61826272 = 15056797;    long FUjovOmuGq21767523 = -508184709;    long FUjovOmuGq30901944 = -354785722;    long FUjovOmuGq71256857 = -521164096;    long FUjovOmuGq55397773 = -268567124;    long FUjovOmuGq87550462 = 12468606;    long FUjovOmuGq66742763 = -366430928;    long FUjovOmuGq92358341 = -710139720;    long FUjovOmuGq52526904 = -244620285;    long FUjovOmuGq81377418 = -436597382;    long FUjovOmuGq37981222 = -608226325;    long FUjovOmuGq54192992 = -770300760;    long FUjovOmuGq79164063 = -815844037;    long FUjovOmuGq7735797 = -754511464;     FUjovOmuGq86050085 = FUjovOmuGq2381614;     FUjovOmuGq2381614 = FUjovOmuGq38112412;     FUjovOmuGq38112412 = FUjovOmuGq97772010;     FUjovOmuGq97772010 = FUjovOmuGq21680024;     FUjovOmuGq21680024 = FUjovOmuGq54566616;     FUjovOmuGq54566616 = FUjovOmuGq17900660;     FUjovOmuGq17900660 = FUjovOmuGq60254842;     FUjovOmuGq60254842 = FUjovOmuGq40880528;     FUjovOmuGq40880528 = FUjovOmuGq23625711;     FUjovOmuGq23625711 = FUjovOmuGq17441845;     FUjovOmuGq17441845 = FUjovOmuGq64145613;     FUjovOmuGq64145613 = FUjovOmuGq83956701;     FUjovOmuGq83956701 = FUjovOmuGq47764692;     FUjovOmuGq47764692 = FUjovOmuGq93018355;     FUjovOmuGq93018355 = FUjovOmuGq54459294;     FUjovOmuGq54459294 = FUjovOmuGq70229122;     FUjovOmuGq70229122 = FUjovOmuGq58310956;     FUjovOmuGq58310956 = FUjovOmuGq34531100;     FUjovOmuGq34531100 = FUjovOmuGq12503667;     FUjovOmuGq12503667 = FUjovOmuGq30533259;     FUjovOmuGq30533259 = FUjovOmuGq6616660;     FUjovOmuGq6616660 = FUjovOmuGq35587260;     FUjovOmuGq35587260 = FUjovOmuGq43689506;     FUjovOmuGq43689506 = FUjovOmuGq32249479;     FUjovOmuGq32249479 = FUjovOmuGq42068188;     FUjovOmuGq42068188 = FUjovOmuGq22022887;     FUjovOmuGq22022887 = FUjovOmuGq92172;     FUjovOmuGq92172 = FUjovOmuGq64504565;     FUjovOmuGq64504565 = FUjovOmuGq16878608;     FUjovOmuGq16878608 = FUjovOmuGq37799670;     FUjovOmuGq37799670 = FUjovOmuGq22858762;     FUjovOmuGq22858762 = FUjovOmuGq1498342;     FUjovOmuGq1498342 = FUjovOmuGq64194219;     FUjovOmuGq64194219 = FUjovOmuGq50690282;     FUjovOmuGq50690282 = FUjovOmuGq22192127;     FUjovOmuGq22192127 = FUjovOmuGq81973368;     FUjovOmuGq81973368 = FUjovOmuGq32265296;     FUjovOmuGq32265296 = FUjovOmuGq71970177;     FUjovOmuGq71970177 = FUjovOmuGq85070633;     FUjovOmuGq85070633 = FUjovOmuGq99185905;     FUjovOmuGq99185905 = FUjovOmuGq33731499;     FUjovOmuGq33731499 = FUjovOmuGq78194911;     FUjovOmuGq78194911 = FUjovOmuGq64990104;     FUjovOmuGq64990104 = FUjovOmuGq2318880;     FUjovOmuGq2318880 = FUjovOmuGq84964411;     FUjovOmuGq84964411 = FUjovOmuGq1319931;     FUjovOmuGq1319931 = FUjovOmuGq83315552;     FUjovOmuGq83315552 = FUjovOmuGq33191966;     FUjovOmuGq33191966 = FUjovOmuGq56020316;     FUjovOmuGq56020316 = FUjovOmuGq65118813;     FUjovOmuGq65118813 = FUjovOmuGq84415081;     FUjovOmuGq84415081 = FUjovOmuGq61032489;     FUjovOmuGq61032489 = FUjovOmuGq79730818;     FUjovOmuGq79730818 = FUjovOmuGq33292276;     FUjovOmuGq33292276 = FUjovOmuGq79433425;     FUjovOmuGq79433425 = FUjovOmuGq66794353;     FUjovOmuGq66794353 = FUjovOmuGq94422906;     FUjovOmuGq94422906 = FUjovOmuGq65522532;     FUjovOmuGq65522532 = FUjovOmuGq79611835;     FUjovOmuGq79611835 = FUjovOmuGq32543729;     FUjovOmuGq32543729 = FUjovOmuGq17808488;     FUjovOmuGq17808488 = FUjovOmuGq95750276;     FUjovOmuGq95750276 = FUjovOmuGq24001920;     FUjovOmuGq24001920 = FUjovOmuGq85826040;     FUjovOmuGq85826040 = FUjovOmuGq94583083;     FUjovOmuGq94583083 = FUjovOmuGq62647271;     FUjovOmuGq62647271 = FUjovOmuGq19762483;     FUjovOmuGq19762483 = FUjovOmuGq97074409;     FUjovOmuGq97074409 = FUjovOmuGq70826229;     FUjovOmuGq70826229 = FUjovOmuGq72485926;     FUjovOmuGq72485926 = FUjovOmuGq37963827;     FUjovOmuGq37963827 = FUjovOmuGq86340778;     FUjovOmuGq86340778 = FUjovOmuGq49460467;     FUjovOmuGq49460467 = FUjovOmuGq13317761;     FUjovOmuGq13317761 = FUjovOmuGq96801760;     FUjovOmuGq96801760 = FUjovOmuGq28421748;     FUjovOmuGq28421748 = FUjovOmuGq70597155;     FUjovOmuGq70597155 = FUjovOmuGq41370626;     FUjovOmuGq41370626 = FUjovOmuGq47285068;     FUjovOmuGq47285068 = FUjovOmuGq40748257;     FUjovOmuGq40748257 = FUjovOmuGq38707334;     FUjovOmuGq38707334 = FUjovOmuGq66900206;     FUjovOmuGq66900206 = FUjovOmuGq8484250;     FUjovOmuGq8484250 = FUjovOmuGq51759795;     FUjovOmuGq51759795 = FUjovOmuGq53384589;     FUjovOmuGq53384589 = FUjovOmuGq61826272;     FUjovOmuGq61826272 = FUjovOmuGq21767523;     FUjovOmuGq21767523 = FUjovOmuGq30901944;     FUjovOmuGq30901944 = FUjovOmuGq71256857;     FUjovOmuGq71256857 = FUjovOmuGq55397773;     FUjovOmuGq55397773 = FUjovOmuGq87550462;     FUjovOmuGq87550462 = FUjovOmuGq66742763;     FUjovOmuGq66742763 = FUjovOmuGq92358341;     FUjovOmuGq92358341 = FUjovOmuGq52526904;     FUjovOmuGq52526904 = FUjovOmuGq81377418;     FUjovOmuGq81377418 = FUjovOmuGq37981222;     FUjovOmuGq37981222 = FUjovOmuGq54192992;     FUjovOmuGq54192992 = FUjovOmuGq79164063;     FUjovOmuGq79164063 = FUjovOmuGq7735797;     FUjovOmuGq7735797 = FUjovOmuGq86050085;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void rRqxMzuOme45513636() {     float vIOlXEQGLU64549456 = -130210422;    float vIOlXEQGLU34031630 = -892957244;    float vIOlXEQGLU8908784 = -684680652;    float vIOlXEQGLU28663376 = -101538681;    float vIOlXEQGLU95379842 = -994095078;    float vIOlXEQGLU86971009 = -600974365;    float vIOlXEQGLU96955866 = 64462699;    float vIOlXEQGLU87559129 = -858311292;    float vIOlXEQGLU14741278 = -531919619;    float vIOlXEQGLU54098590 = -672926295;    float vIOlXEQGLU30334449 = -832537590;    float vIOlXEQGLU62590362 = -988591094;    float vIOlXEQGLU11063687 = -666277189;    float vIOlXEQGLU38906286 = -468200000;    float vIOlXEQGLU9375141 = -862475149;    float vIOlXEQGLU21144011 = -297063479;    float vIOlXEQGLU55778047 = -648544762;    float vIOlXEQGLU3590926 = -730142757;    float vIOlXEQGLU77963774 = -659694540;    float vIOlXEQGLU75625436 = -61699737;    float vIOlXEQGLU79721627 = -819499628;    float vIOlXEQGLU90675101 = -520512709;    float vIOlXEQGLU2130173 = -564350537;    float vIOlXEQGLU36919248 = -862995156;    float vIOlXEQGLU57821393 = -870062533;    float vIOlXEQGLU42523415 = -869413889;    float vIOlXEQGLU45238272 = -100416790;    float vIOlXEQGLU45663391 = -827301839;    float vIOlXEQGLU97038217 = -159923375;    float vIOlXEQGLU76718826 = -142996498;    float vIOlXEQGLU99392533 = -87931096;    float vIOlXEQGLU66553468 = -288868169;    float vIOlXEQGLU6337278 = -842651013;    float vIOlXEQGLU18625599 = -888196789;    float vIOlXEQGLU162828 = -522327765;    float vIOlXEQGLU64732051 = -663146906;    float vIOlXEQGLU90631040 = -459195756;    float vIOlXEQGLU22419869 = -585699330;    float vIOlXEQGLU70373760 = -280032129;    float vIOlXEQGLU71662955 = -221084135;    float vIOlXEQGLU24504252 = -200996343;    float vIOlXEQGLU43663592 = -620598288;    float vIOlXEQGLU32024602 = -228783747;    float vIOlXEQGLU71265887 = -745904209;    float vIOlXEQGLU95268150 = -878289211;    float vIOlXEQGLU35324864 = -650272385;    float vIOlXEQGLU2169247 = -28666251;    float vIOlXEQGLU67408854 = -964443254;    float vIOlXEQGLU26321392 = -944834195;    float vIOlXEQGLU31049781 = -273704131;    float vIOlXEQGLU69633235 = -546125703;    float vIOlXEQGLU29986502 = -685287763;    float vIOlXEQGLU19181612 = -306281800;    float vIOlXEQGLU93673947 = -656142120;    float vIOlXEQGLU65792008 = -834141509;    float vIOlXEQGLU73874355 = -609697714;    float vIOlXEQGLU31901458 = -228606708;    float vIOlXEQGLU71989535 = -821685496;    float vIOlXEQGLU70841983 = -231476149;    float vIOlXEQGLU52856427 = -24681189;    float vIOlXEQGLU41732738 = -400557575;    float vIOlXEQGLU51292475 = -108235463;    float vIOlXEQGLU90520912 = -598387918;    float vIOlXEQGLU38022451 = -288923122;    float vIOlXEQGLU54706056 = -484995200;    float vIOlXEQGLU63780981 = -443669421;    float vIOlXEQGLU56253084 = -45940081;    float vIOlXEQGLU92438087 = -778080400;    float vIOlXEQGLU38743459 = -945872235;    float vIOlXEQGLU44643090 = -99328243;    float vIOlXEQGLU30512970 = -837867724;    float vIOlXEQGLU33358178 = 37154568;    float vIOlXEQGLU33217165 = -350110629;    float vIOlXEQGLU6300820 = -338610406;    float vIOlXEQGLU51121185 = -860703395;    float vIOlXEQGLU36058035 = -98901340;    float vIOlXEQGLU58650499 = -191728962;    float vIOlXEQGLU30864285 = -818446329;    float vIOlXEQGLU41651098 = -984705946;    float vIOlXEQGLU22496529 = -119790149;    float vIOlXEQGLU40354168 = -740747639;    float vIOlXEQGLU77829417 = -135973536;    float vIOlXEQGLU19341999 = -882467644;    float vIOlXEQGLU65988436 = -886219244;    float vIOlXEQGLU7085591 = -596870795;    float vIOlXEQGLU69406032 = -402643333;    float vIOlXEQGLU47371856 = -982586370;    float vIOlXEQGLU12663331 = -86508894;    float vIOlXEQGLU52833591 = 45944719;    float vIOlXEQGLU26288473 = -912630052;    float vIOlXEQGLU32830593 = -334540199;    float vIOlXEQGLU18641506 = -637510260;    float vIOlXEQGLU51577886 = -254223182;    float vIOlXEQGLU17517333 = -155350941;    float vIOlXEQGLU29930218 = -820526560;    float vIOlXEQGLU73211776 = 7239119;    float vIOlXEQGLU53142680 = 77789629;    float vIOlXEQGLU94002151 = -939860626;    float vIOlXEQGLU16559832 = -160909009;    float vIOlXEQGLU31487170 = -130210422;     vIOlXEQGLU64549456 = vIOlXEQGLU34031630;     vIOlXEQGLU34031630 = vIOlXEQGLU8908784;     vIOlXEQGLU8908784 = vIOlXEQGLU28663376;     vIOlXEQGLU28663376 = vIOlXEQGLU95379842;     vIOlXEQGLU95379842 = vIOlXEQGLU86971009;     vIOlXEQGLU86971009 = vIOlXEQGLU96955866;     vIOlXEQGLU96955866 = vIOlXEQGLU87559129;     vIOlXEQGLU87559129 = vIOlXEQGLU14741278;     vIOlXEQGLU14741278 = vIOlXEQGLU54098590;     vIOlXEQGLU54098590 = vIOlXEQGLU30334449;     vIOlXEQGLU30334449 = vIOlXEQGLU62590362;     vIOlXEQGLU62590362 = vIOlXEQGLU11063687;     vIOlXEQGLU11063687 = vIOlXEQGLU38906286;     vIOlXEQGLU38906286 = vIOlXEQGLU9375141;     vIOlXEQGLU9375141 = vIOlXEQGLU21144011;     vIOlXEQGLU21144011 = vIOlXEQGLU55778047;     vIOlXEQGLU55778047 = vIOlXEQGLU3590926;     vIOlXEQGLU3590926 = vIOlXEQGLU77963774;     vIOlXEQGLU77963774 = vIOlXEQGLU75625436;     vIOlXEQGLU75625436 = vIOlXEQGLU79721627;     vIOlXEQGLU79721627 = vIOlXEQGLU90675101;     vIOlXEQGLU90675101 = vIOlXEQGLU2130173;     vIOlXEQGLU2130173 = vIOlXEQGLU36919248;     vIOlXEQGLU36919248 = vIOlXEQGLU57821393;     vIOlXEQGLU57821393 = vIOlXEQGLU42523415;     vIOlXEQGLU42523415 = vIOlXEQGLU45238272;     vIOlXEQGLU45238272 = vIOlXEQGLU45663391;     vIOlXEQGLU45663391 = vIOlXEQGLU97038217;     vIOlXEQGLU97038217 = vIOlXEQGLU76718826;     vIOlXEQGLU76718826 = vIOlXEQGLU99392533;     vIOlXEQGLU99392533 = vIOlXEQGLU66553468;     vIOlXEQGLU66553468 = vIOlXEQGLU6337278;     vIOlXEQGLU6337278 = vIOlXEQGLU18625599;     vIOlXEQGLU18625599 = vIOlXEQGLU162828;     vIOlXEQGLU162828 = vIOlXEQGLU64732051;     vIOlXEQGLU64732051 = vIOlXEQGLU90631040;     vIOlXEQGLU90631040 = vIOlXEQGLU22419869;     vIOlXEQGLU22419869 = vIOlXEQGLU70373760;     vIOlXEQGLU70373760 = vIOlXEQGLU71662955;     vIOlXEQGLU71662955 = vIOlXEQGLU24504252;     vIOlXEQGLU24504252 = vIOlXEQGLU43663592;     vIOlXEQGLU43663592 = vIOlXEQGLU32024602;     vIOlXEQGLU32024602 = vIOlXEQGLU71265887;     vIOlXEQGLU71265887 = vIOlXEQGLU95268150;     vIOlXEQGLU95268150 = vIOlXEQGLU35324864;     vIOlXEQGLU35324864 = vIOlXEQGLU2169247;     vIOlXEQGLU2169247 = vIOlXEQGLU67408854;     vIOlXEQGLU67408854 = vIOlXEQGLU26321392;     vIOlXEQGLU26321392 = vIOlXEQGLU31049781;     vIOlXEQGLU31049781 = vIOlXEQGLU69633235;     vIOlXEQGLU69633235 = vIOlXEQGLU29986502;     vIOlXEQGLU29986502 = vIOlXEQGLU19181612;     vIOlXEQGLU19181612 = vIOlXEQGLU93673947;     vIOlXEQGLU93673947 = vIOlXEQGLU65792008;     vIOlXEQGLU65792008 = vIOlXEQGLU73874355;     vIOlXEQGLU73874355 = vIOlXEQGLU31901458;     vIOlXEQGLU31901458 = vIOlXEQGLU71989535;     vIOlXEQGLU71989535 = vIOlXEQGLU70841983;     vIOlXEQGLU70841983 = vIOlXEQGLU52856427;     vIOlXEQGLU52856427 = vIOlXEQGLU41732738;     vIOlXEQGLU41732738 = vIOlXEQGLU51292475;     vIOlXEQGLU51292475 = vIOlXEQGLU90520912;     vIOlXEQGLU90520912 = vIOlXEQGLU38022451;     vIOlXEQGLU38022451 = vIOlXEQGLU54706056;     vIOlXEQGLU54706056 = vIOlXEQGLU63780981;     vIOlXEQGLU63780981 = vIOlXEQGLU56253084;     vIOlXEQGLU56253084 = vIOlXEQGLU92438087;     vIOlXEQGLU92438087 = vIOlXEQGLU38743459;     vIOlXEQGLU38743459 = vIOlXEQGLU44643090;     vIOlXEQGLU44643090 = vIOlXEQGLU30512970;     vIOlXEQGLU30512970 = vIOlXEQGLU33358178;     vIOlXEQGLU33358178 = vIOlXEQGLU33217165;     vIOlXEQGLU33217165 = vIOlXEQGLU6300820;     vIOlXEQGLU6300820 = vIOlXEQGLU51121185;     vIOlXEQGLU51121185 = vIOlXEQGLU36058035;     vIOlXEQGLU36058035 = vIOlXEQGLU58650499;     vIOlXEQGLU58650499 = vIOlXEQGLU30864285;     vIOlXEQGLU30864285 = vIOlXEQGLU41651098;     vIOlXEQGLU41651098 = vIOlXEQGLU22496529;     vIOlXEQGLU22496529 = vIOlXEQGLU40354168;     vIOlXEQGLU40354168 = vIOlXEQGLU77829417;     vIOlXEQGLU77829417 = vIOlXEQGLU19341999;     vIOlXEQGLU19341999 = vIOlXEQGLU65988436;     vIOlXEQGLU65988436 = vIOlXEQGLU7085591;     vIOlXEQGLU7085591 = vIOlXEQGLU69406032;     vIOlXEQGLU69406032 = vIOlXEQGLU47371856;     vIOlXEQGLU47371856 = vIOlXEQGLU12663331;     vIOlXEQGLU12663331 = vIOlXEQGLU52833591;     vIOlXEQGLU52833591 = vIOlXEQGLU26288473;     vIOlXEQGLU26288473 = vIOlXEQGLU32830593;     vIOlXEQGLU32830593 = vIOlXEQGLU18641506;     vIOlXEQGLU18641506 = vIOlXEQGLU51577886;     vIOlXEQGLU51577886 = vIOlXEQGLU17517333;     vIOlXEQGLU17517333 = vIOlXEQGLU29930218;     vIOlXEQGLU29930218 = vIOlXEQGLU73211776;     vIOlXEQGLU73211776 = vIOlXEQGLU53142680;     vIOlXEQGLU53142680 = vIOlXEQGLU94002151;     vIOlXEQGLU94002151 = vIOlXEQGLU16559832;     vIOlXEQGLU16559832 = vIOlXEQGLU31487170;     vIOlXEQGLU31487170 = vIOlXEQGLU64549456;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void kRJoesRcdd3754517() {     float wxYZSljtLz3206585 = -387116459;    float wxYZSljtLz59353352 = 19556427;    float wxYZSljtLz50405157 = 86844581;    float wxYZSljtLz31601972 = 76394886;    float wxYZSljtLz22832863 = -555559209;    float wxYZSljtLz25320041 = -57694886;    float wxYZSljtLz20778378 = -540546936;    float wxYZSljtLz89066956 = -412630668;    float wxYZSljtLz44425045 = -532279032;    float wxYZSljtLz96396100 = -929433484;    float wxYZSljtLz45307878 = -948348805;    float wxYZSljtLz42573217 = 54324521;    float wxYZSljtLz58870929 = -363820740;    float wxYZSljtLz40992114 = -991378946;    float wxYZSljtLz87103268 = -526968409;    float wxYZSljtLz68150442 = 12600979;    float wxYZSljtLz61588747 = -586559289;    float wxYZSljtLz18490605 = -868105496;    float wxYZSljtLz98697194 = -524129694;    float wxYZSljtLz52107839 = -210065725;    float wxYZSljtLz92934648 = -946986789;    float wxYZSljtLz31784515 = -522115619;    float wxYZSljtLz73126027 = -69994234;    float wxYZSljtLz5926449 = -668675883;    float wxYZSljtLz85202236 = -839984749;    float wxYZSljtLz94407729 = -778547014;    float wxYZSljtLz40957334 = -814927573;    float wxYZSljtLz44379166 = -338281793;    float wxYZSljtLz44691083 = -626054909;    float wxYZSljtLz26417549 = -166117364;    float wxYZSljtLz95731594 = -337242462;    float wxYZSljtLz84025227 = -783564063;    float wxYZSljtLz58703670 = -908724633;    float wxYZSljtLz42572409 = -684908724;    float wxYZSljtLz91146904 = -11107505;    float wxYZSljtLz79391876 = 20088448;    float wxYZSljtLz96248530 = 28544211;    float wxYZSljtLz95581858 = -549444264;    float wxYZSljtLz93379768 = 11799304;    float wxYZSljtLz24532447 = -20092971;    float wxYZSljtLz76349769 = -42077781;    float wxYZSljtLz88529918 = -966273392;    float wxYZSljtLz65058008 = 76959669;    float wxYZSljtLz82746385 = -721288569;    float wxYZSljtLz19282219 = -834678012;    float wxYZSljtLz39586233 = 70485541;    float wxYZSljtLz8985468 = 33288781;    float wxYZSljtLz48649262 = -467617704;    float wxYZSljtLz5565473 = -758530604;    float wxYZSljtLz12305620 = -470733841;    float wxYZSljtLz51670990 = -313984586;    float wxYZSljtLz66879296 = -646200007;    float wxYZSljtLz27561961 = -958314672;    float wxYZSljtLz18278158 = -887033592;    float wxYZSljtLz10819869 = -415017957;    float wxYZSljtLz71422070 = -865000841;    float wxYZSljtLz86227325 = -910449339;    float wxYZSljtLz44478708 = -244479536;    float wxYZSljtLz46399736 = -83620366;    float wxYZSljtLz28425134 = -777012196;    float wxYZSljtLz84362706 = -242767313;    float wxYZSljtLz76399212 = -102265144;    float wxYZSljtLz44375873 = -786575760;    float wxYZSljtLz18007496 = -266161669;    float wxYZSljtLz664506 = -492191023;    float wxYZSljtLz61282650 = -64784743;    float wxYZSljtLz83869547 = -36950846;    float wxYZSljtLz16298520 = -678912016;    float wxYZSljtLz49845209 = -880271442;    float wxYZSljtLz7711393 = -447056858;    float wxYZSljtLz71901911 = 84056768;    float wxYZSljtLz66006889 = 62884975;    float wxYZSljtLz25110836 = -779904801;    float wxYZSljtLz74164748 = -404036724;    float wxYZSljtLz75758069 = -67987944;    float wxYZSljtLz4404731 = -980713398;    float wxYZSljtLz66726506 = -499075288;    float wxYZSljtLz90379641 = -348705666;    float wxYZSljtLz86644230 = -833997871;    float wxYZSljtLz45616003 = -810470291;    float wxYZSljtLz85422261 = -711835795;    float wxYZSljtLz92308072 = -247309870;    float wxYZSljtLz38813693 = -579751189;    float wxYZSljtLz32385463 = -55321068;    float wxYZSljtLz74746558 = -852132778;    float wxYZSljtLz28852299 = -691042455;    float wxYZSljtLz56463267 = -825249391;    float wxYZSljtLz40425513 = 78308959;    float wxYZSljtLz31752541 = -169890768;    float wxYZSljtLz19724835 = -146106664;    float wxYZSljtLz93164551 = -69462213;    float wxYZSljtLz51769822 = -726976253;    float wxYZSljtLz49182123 = -365823899;    float wxYZSljtLz64954635 = -211188500;    float wxYZSljtLz40169740 = -777325658;    float wxYZSljtLz99950556 = -939812637;    float wxYZSljtLz44154045 = -79697633;    float wxYZSljtLz47050512 = -656878663;    float wxYZSljtLz82081880 = -129097546;    float wxYZSljtLz57999569 = -387116459;     wxYZSljtLz3206585 = wxYZSljtLz59353352;     wxYZSljtLz59353352 = wxYZSljtLz50405157;     wxYZSljtLz50405157 = wxYZSljtLz31601972;     wxYZSljtLz31601972 = wxYZSljtLz22832863;     wxYZSljtLz22832863 = wxYZSljtLz25320041;     wxYZSljtLz25320041 = wxYZSljtLz20778378;     wxYZSljtLz20778378 = wxYZSljtLz89066956;     wxYZSljtLz89066956 = wxYZSljtLz44425045;     wxYZSljtLz44425045 = wxYZSljtLz96396100;     wxYZSljtLz96396100 = wxYZSljtLz45307878;     wxYZSljtLz45307878 = wxYZSljtLz42573217;     wxYZSljtLz42573217 = wxYZSljtLz58870929;     wxYZSljtLz58870929 = wxYZSljtLz40992114;     wxYZSljtLz40992114 = wxYZSljtLz87103268;     wxYZSljtLz87103268 = wxYZSljtLz68150442;     wxYZSljtLz68150442 = wxYZSljtLz61588747;     wxYZSljtLz61588747 = wxYZSljtLz18490605;     wxYZSljtLz18490605 = wxYZSljtLz98697194;     wxYZSljtLz98697194 = wxYZSljtLz52107839;     wxYZSljtLz52107839 = wxYZSljtLz92934648;     wxYZSljtLz92934648 = wxYZSljtLz31784515;     wxYZSljtLz31784515 = wxYZSljtLz73126027;     wxYZSljtLz73126027 = wxYZSljtLz5926449;     wxYZSljtLz5926449 = wxYZSljtLz85202236;     wxYZSljtLz85202236 = wxYZSljtLz94407729;     wxYZSljtLz94407729 = wxYZSljtLz40957334;     wxYZSljtLz40957334 = wxYZSljtLz44379166;     wxYZSljtLz44379166 = wxYZSljtLz44691083;     wxYZSljtLz44691083 = wxYZSljtLz26417549;     wxYZSljtLz26417549 = wxYZSljtLz95731594;     wxYZSljtLz95731594 = wxYZSljtLz84025227;     wxYZSljtLz84025227 = wxYZSljtLz58703670;     wxYZSljtLz58703670 = wxYZSljtLz42572409;     wxYZSljtLz42572409 = wxYZSljtLz91146904;     wxYZSljtLz91146904 = wxYZSljtLz79391876;     wxYZSljtLz79391876 = wxYZSljtLz96248530;     wxYZSljtLz96248530 = wxYZSljtLz95581858;     wxYZSljtLz95581858 = wxYZSljtLz93379768;     wxYZSljtLz93379768 = wxYZSljtLz24532447;     wxYZSljtLz24532447 = wxYZSljtLz76349769;     wxYZSljtLz76349769 = wxYZSljtLz88529918;     wxYZSljtLz88529918 = wxYZSljtLz65058008;     wxYZSljtLz65058008 = wxYZSljtLz82746385;     wxYZSljtLz82746385 = wxYZSljtLz19282219;     wxYZSljtLz19282219 = wxYZSljtLz39586233;     wxYZSljtLz39586233 = wxYZSljtLz8985468;     wxYZSljtLz8985468 = wxYZSljtLz48649262;     wxYZSljtLz48649262 = wxYZSljtLz5565473;     wxYZSljtLz5565473 = wxYZSljtLz12305620;     wxYZSljtLz12305620 = wxYZSljtLz51670990;     wxYZSljtLz51670990 = wxYZSljtLz66879296;     wxYZSljtLz66879296 = wxYZSljtLz27561961;     wxYZSljtLz27561961 = wxYZSljtLz18278158;     wxYZSljtLz18278158 = wxYZSljtLz10819869;     wxYZSljtLz10819869 = wxYZSljtLz71422070;     wxYZSljtLz71422070 = wxYZSljtLz86227325;     wxYZSljtLz86227325 = wxYZSljtLz44478708;     wxYZSljtLz44478708 = wxYZSljtLz46399736;     wxYZSljtLz46399736 = wxYZSljtLz28425134;     wxYZSljtLz28425134 = wxYZSljtLz84362706;     wxYZSljtLz84362706 = wxYZSljtLz76399212;     wxYZSljtLz76399212 = wxYZSljtLz44375873;     wxYZSljtLz44375873 = wxYZSljtLz18007496;     wxYZSljtLz18007496 = wxYZSljtLz664506;     wxYZSljtLz664506 = wxYZSljtLz61282650;     wxYZSljtLz61282650 = wxYZSljtLz83869547;     wxYZSljtLz83869547 = wxYZSljtLz16298520;     wxYZSljtLz16298520 = wxYZSljtLz49845209;     wxYZSljtLz49845209 = wxYZSljtLz7711393;     wxYZSljtLz7711393 = wxYZSljtLz71901911;     wxYZSljtLz71901911 = wxYZSljtLz66006889;     wxYZSljtLz66006889 = wxYZSljtLz25110836;     wxYZSljtLz25110836 = wxYZSljtLz74164748;     wxYZSljtLz74164748 = wxYZSljtLz75758069;     wxYZSljtLz75758069 = wxYZSljtLz4404731;     wxYZSljtLz4404731 = wxYZSljtLz66726506;     wxYZSljtLz66726506 = wxYZSljtLz90379641;     wxYZSljtLz90379641 = wxYZSljtLz86644230;     wxYZSljtLz86644230 = wxYZSljtLz45616003;     wxYZSljtLz45616003 = wxYZSljtLz85422261;     wxYZSljtLz85422261 = wxYZSljtLz92308072;     wxYZSljtLz92308072 = wxYZSljtLz38813693;     wxYZSljtLz38813693 = wxYZSljtLz32385463;     wxYZSljtLz32385463 = wxYZSljtLz74746558;     wxYZSljtLz74746558 = wxYZSljtLz28852299;     wxYZSljtLz28852299 = wxYZSljtLz56463267;     wxYZSljtLz56463267 = wxYZSljtLz40425513;     wxYZSljtLz40425513 = wxYZSljtLz31752541;     wxYZSljtLz31752541 = wxYZSljtLz19724835;     wxYZSljtLz19724835 = wxYZSljtLz93164551;     wxYZSljtLz93164551 = wxYZSljtLz51769822;     wxYZSljtLz51769822 = wxYZSljtLz49182123;     wxYZSljtLz49182123 = wxYZSljtLz64954635;     wxYZSljtLz64954635 = wxYZSljtLz40169740;     wxYZSljtLz40169740 = wxYZSljtLz99950556;     wxYZSljtLz99950556 = wxYZSljtLz44154045;     wxYZSljtLz44154045 = wxYZSljtLz47050512;     wxYZSljtLz47050512 = wxYZSljtLz82081880;     wxYZSljtLz82081880 = wxYZSljtLz57999569;     wxYZSljtLz57999569 = wxYZSljtLz3206585;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void DvQGIKysmI1032347() {     float OxDSDrYqHG61059141 = -615273181;    float OxDSDrYqHG18400614 = -866943109;    float OxDSDrYqHG15247701 = -961347724;    float OxDSDrYqHG33752154 = 69377113;    float OxDSDrYqHG68452283 = -783859735;    float OxDSDrYqHG41620598 = -481218347;    float OxDSDrYqHG55044187 = -502723510;    float OxDSDrYqHG57618325 = -823284135;    float OxDSDrYqHG60365617 = -91160408;    float OxDSDrYqHG6422884 = -700054944;    float OxDSDrYqHG710868 = -787508863;    float OxDSDrYqHG84752637 = -325063181;    float OxDSDrYqHG32260841 = -412892090;    float OxDSDrYqHG82903509 = -50298061;    float OxDSDrYqHG36860953 = -695158285;    float OxDSDrYqHG21383108 = -772082519;    float OxDSDrYqHG11395276 = -471199091;    float OxDSDrYqHG1226680 = -996204634;    float OxDSDrYqHG20100886 = -357812974;    float OxDSDrYqHG52387577 = -277236793;    float OxDSDrYqHG27235195 = -885282413;    float OxDSDrYqHG20724992 = -603526343;    float OxDSDrYqHG10066333 = -524749168;    float OxDSDrYqHG82569073 = -762572822;    float OxDSDrYqHG317745 = -58835219;    float OxDSDrYqHG76834818 = 97187884;    float OxDSDrYqHG78245747 = -77998493;    float OxDSDrYqHG55615516 = -787541432;    float OxDSDrYqHG85573411 = -898336515;    float OxDSDrYqHG65018269 = -445489027;    float OxDSDrYqHG25192953 = -583445866;    float OxDSDrYqHG94665579 = -816785070;    float OxDSDrYqHG66507928 = -283719889;    float OxDSDrYqHG31426686 = -97047655;    float OxDSDrYqHG50826685 = -866650253;    float OxDSDrYqHG29817400 = -430106488;    float OxDSDrYqHG27158692 = -569446403;    float OxDSDrYqHG30505683 = -404462638;    float OxDSDrYqHG36764865 = -427441588;    float OxDSDrYqHG37116801 = -12147860;    float OxDSDrYqHG50703080 = -226510463;    float OxDSDrYqHG80705775 = -124935292;    float OxDSDrYqHG99708218 = 95378554;    float OxDSDrYqHG63089945 = -666020184;    float OxDSDrYqHG3263892 = 2926750;    float OxDSDrYqHG53219875 = -338622516;    float OxDSDrYqHG12930236 = -547827210;    float OxDSDrYqHG35590668 = -881917932;    float OxDSDrYqHG4259655 = -808220321;    float OxDSDrYqHG13873532 = -416756030;    float OxDSDrYqHG28051561 = -964782413;    float OxDSDrYqHG9668769 = -908525888;    float OxDSDrYqHG99049163 = -494217448;    float OxDSDrYqHG84306278 = -822303049;    float OxDSDrYqHG73797152 = -45312940;    float OxDSDrYqHG40334150 = 88253161;    float OxDSDrYqHG8334281 = -242193941;    float OxDSDrYqHG32678628 = -98774903;    float OxDSDrYqHG33434410 = -871787669;    float OxDSDrYqHG91617465 = -781047619;    float OxDSDrYqHG63374850 = -303219854;    float OxDSDrYqHG99428671 = -715182078;    float OxDSDrYqHG72044913 = -924947620;    float OxDSDrYqHG95347347 = -645671381;    float OxDSDrYqHG81229930 = -16609078;    float OxDSDrYqHG6045288 = -970723793;    float OxDSDrYqHG18244710 = 58656708;    float OxDSDrYqHG834156 = -215844435;    float OxDSDrYqHG32076824 = -183647808;    float OxDSDrYqHG7043554 = -165051798;    float OxDSDrYqHG94224416 = -102636117;    float OxDSDrYqHG80889592 = 33263546;    float OxDSDrYqHG64461815 = -468763046;    float OxDSDrYqHG82984085 = -245665114;    float OxDSDrYqHG1684498 = 49273669;    float OxDSDrYqHG46529419 = -660347122;    float OxDSDrYqHG21016774 = -598904897;    float OxDSDrYqHG46976388 = -858728985;    float OxDSDrYqHG79305181 = -665499573;    float OxDSDrYqHG47097870 = -720212703;    float OxDSDrYqHG63904582 = -354984906;    float OxDSDrYqHG42655080 = -196080562;    float OxDSDrYqHG51355861 = -979321112;    float OxDSDrYqHG71699880 = -381580486;    float OxDSDrYqHG36966709 = -480706614;    float OxDSDrYqHG15524185 = -674919979;    float OxDSDrYqHG95616415 = -222567623;    float OxDSDrYqHG82201649 = -461416840;    float OxDSDrYqHG57629534 = 48265285;    float OxDSDrYqHG10492536 = -854903415;    float OxDSDrYqHG21483119 = -87912547;    float OxDSDrYqHG94480063 = -370671500;    float OxDSDrYqHG97071273 = -532674970;    float OxDSDrYqHG45147400 = -646393969;    float OxDSDrYqHG73741950 = -708928006;    float OxDSDrYqHG51274409 = -511328385;    float OxDSDrYqHG8660862 = -199987672;    float OxDSDrYqHG4360871 = -258950065;    float OxDSDrYqHG81860014 = -549411107;    float OxDSDrYqHG97218604 = -615273181;     OxDSDrYqHG61059141 = OxDSDrYqHG18400614;     OxDSDrYqHG18400614 = OxDSDrYqHG15247701;     OxDSDrYqHG15247701 = OxDSDrYqHG33752154;     OxDSDrYqHG33752154 = OxDSDrYqHG68452283;     OxDSDrYqHG68452283 = OxDSDrYqHG41620598;     OxDSDrYqHG41620598 = OxDSDrYqHG55044187;     OxDSDrYqHG55044187 = OxDSDrYqHG57618325;     OxDSDrYqHG57618325 = OxDSDrYqHG60365617;     OxDSDrYqHG60365617 = OxDSDrYqHG6422884;     OxDSDrYqHG6422884 = OxDSDrYqHG710868;     OxDSDrYqHG710868 = OxDSDrYqHG84752637;     OxDSDrYqHG84752637 = OxDSDrYqHG32260841;     OxDSDrYqHG32260841 = OxDSDrYqHG82903509;     OxDSDrYqHG82903509 = OxDSDrYqHG36860953;     OxDSDrYqHG36860953 = OxDSDrYqHG21383108;     OxDSDrYqHG21383108 = OxDSDrYqHG11395276;     OxDSDrYqHG11395276 = OxDSDrYqHG1226680;     OxDSDrYqHG1226680 = OxDSDrYqHG20100886;     OxDSDrYqHG20100886 = OxDSDrYqHG52387577;     OxDSDrYqHG52387577 = OxDSDrYqHG27235195;     OxDSDrYqHG27235195 = OxDSDrYqHG20724992;     OxDSDrYqHG20724992 = OxDSDrYqHG10066333;     OxDSDrYqHG10066333 = OxDSDrYqHG82569073;     OxDSDrYqHG82569073 = OxDSDrYqHG317745;     OxDSDrYqHG317745 = OxDSDrYqHG76834818;     OxDSDrYqHG76834818 = OxDSDrYqHG78245747;     OxDSDrYqHG78245747 = OxDSDrYqHG55615516;     OxDSDrYqHG55615516 = OxDSDrYqHG85573411;     OxDSDrYqHG85573411 = OxDSDrYqHG65018269;     OxDSDrYqHG65018269 = OxDSDrYqHG25192953;     OxDSDrYqHG25192953 = OxDSDrYqHG94665579;     OxDSDrYqHG94665579 = OxDSDrYqHG66507928;     OxDSDrYqHG66507928 = OxDSDrYqHG31426686;     OxDSDrYqHG31426686 = OxDSDrYqHG50826685;     OxDSDrYqHG50826685 = OxDSDrYqHG29817400;     OxDSDrYqHG29817400 = OxDSDrYqHG27158692;     OxDSDrYqHG27158692 = OxDSDrYqHG30505683;     OxDSDrYqHG30505683 = OxDSDrYqHG36764865;     OxDSDrYqHG36764865 = OxDSDrYqHG37116801;     OxDSDrYqHG37116801 = OxDSDrYqHG50703080;     OxDSDrYqHG50703080 = OxDSDrYqHG80705775;     OxDSDrYqHG80705775 = OxDSDrYqHG99708218;     OxDSDrYqHG99708218 = OxDSDrYqHG63089945;     OxDSDrYqHG63089945 = OxDSDrYqHG3263892;     OxDSDrYqHG3263892 = OxDSDrYqHG53219875;     OxDSDrYqHG53219875 = OxDSDrYqHG12930236;     OxDSDrYqHG12930236 = OxDSDrYqHG35590668;     OxDSDrYqHG35590668 = OxDSDrYqHG4259655;     OxDSDrYqHG4259655 = OxDSDrYqHG13873532;     OxDSDrYqHG13873532 = OxDSDrYqHG28051561;     OxDSDrYqHG28051561 = OxDSDrYqHG9668769;     OxDSDrYqHG9668769 = OxDSDrYqHG99049163;     OxDSDrYqHG99049163 = OxDSDrYqHG84306278;     OxDSDrYqHG84306278 = OxDSDrYqHG73797152;     OxDSDrYqHG73797152 = OxDSDrYqHG40334150;     OxDSDrYqHG40334150 = OxDSDrYqHG8334281;     OxDSDrYqHG8334281 = OxDSDrYqHG32678628;     OxDSDrYqHG32678628 = OxDSDrYqHG33434410;     OxDSDrYqHG33434410 = OxDSDrYqHG91617465;     OxDSDrYqHG91617465 = OxDSDrYqHG63374850;     OxDSDrYqHG63374850 = OxDSDrYqHG99428671;     OxDSDrYqHG99428671 = OxDSDrYqHG72044913;     OxDSDrYqHG72044913 = OxDSDrYqHG95347347;     OxDSDrYqHG95347347 = OxDSDrYqHG81229930;     OxDSDrYqHG81229930 = OxDSDrYqHG6045288;     OxDSDrYqHG6045288 = OxDSDrYqHG18244710;     OxDSDrYqHG18244710 = OxDSDrYqHG834156;     OxDSDrYqHG834156 = OxDSDrYqHG32076824;     OxDSDrYqHG32076824 = OxDSDrYqHG7043554;     OxDSDrYqHG7043554 = OxDSDrYqHG94224416;     OxDSDrYqHG94224416 = OxDSDrYqHG80889592;     OxDSDrYqHG80889592 = OxDSDrYqHG64461815;     OxDSDrYqHG64461815 = OxDSDrYqHG82984085;     OxDSDrYqHG82984085 = OxDSDrYqHG1684498;     OxDSDrYqHG1684498 = OxDSDrYqHG46529419;     OxDSDrYqHG46529419 = OxDSDrYqHG21016774;     OxDSDrYqHG21016774 = OxDSDrYqHG46976388;     OxDSDrYqHG46976388 = OxDSDrYqHG79305181;     OxDSDrYqHG79305181 = OxDSDrYqHG47097870;     OxDSDrYqHG47097870 = OxDSDrYqHG63904582;     OxDSDrYqHG63904582 = OxDSDrYqHG42655080;     OxDSDrYqHG42655080 = OxDSDrYqHG51355861;     OxDSDrYqHG51355861 = OxDSDrYqHG71699880;     OxDSDrYqHG71699880 = OxDSDrYqHG36966709;     OxDSDrYqHG36966709 = OxDSDrYqHG15524185;     OxDSDrYqHG15524185 = OxDSDrYqHG95616415;     OxDSDrYqHG95616415 = OxDSDrYqHG82201649;     OxDSDrYqHG82201649 = OxDSDrYqHG57629534;     OxDSDrYqHG57629534 = OxDSDrYqHG10492536;     OxDSDrYqHG10492536 = OxDSDrYqHG21483119;     OxDSDrYqHG21483119 = OxDSDrYqHG94480063;     OxDSDrYqHG94480063 = OxDSDrYqHG97071273;     OxDSDrYqHG97071273 = OxDSDrYqHG45147400;     OxDSDrYqHG45147400 = OxDSDrYqHG73741950;     OxDSDrYqHG73741950 = OxDSDrYqHG51274409;     OxDSDrYqHG51274409 = OxDSDrYqHG8660862;     OxDSDrYqHG8660862 = OxDSDrYqHG4360871;     OxDSDrYqHG4360871 = OxDSDrYqHG81860014;     OxDSDrYqHG81860014 = OxDSDrYqHG97218604;     OxDSDrYqHG97218604 = OxDSDrYqHG61059141;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IXkBxURWMg85120249() {     double mutbxHqUrd63968382 = -195332144;    double mutbxHqUrd57582725 = -333500856;    double mutbxHqUrd79149805 = -935065874;    double mutbxHqUrd7731485 = -401267401;    double mutbxHqUrd79440175 = -351177302;    double mutbxHqUrd83119788 = -491174;    double mutbxHqUrd55189051 = 11790713;    double mutbxHqUrd71823026 = -756338789;    double mutbxHqUrd20952197 = -467634173;    double mutbxHqUrd15217016 = -442420537;    double mutbxHqUrd14510371 = -290351072;    double mutbxHqUrd58598489 = -179723313;    double mutbxHqUrd56676733 = -89739845;    double mutbxHqUrd47868552 = -553450669;    double mutbxHqUrd80827932 = 31378515;    double mutbxHqUrd61270192 = -639751604;    double mutbxHqUrd39035653 = -306126084;    double mutbxHqUrd67641144 = -642800039;    double mutbxHqUrd42390042 = 57316262;    double mutbxHqUrd58403203 = -730371468;    double mutbxHqUrd35166366 = -936256956;    double mutbxHqUrd37002526 = -811477268;    double mutbxHqUrd504246 = -541691905;    double mutbxHqUrd56822354 = -411402471;    double mutbxHqUrd17318537 = -576135014;    double mutbxHqUrd35231467 = -523220014;    double mutbxHqUrd96739409 = -621633624;    double mutbxHqUrd63840578 = -225713089;    double mutbxHqUrd69738686 = -547787961;    double mutbxHqUrd53603400 = -887493260;    double mutbxHqUrd89798691 = -280075777;    double mutbxHqUrd89713246 = -392240049;    double mutbxHqUrd64249130 = -10771941;    double mutbxHqUrd32483122 = -481593898;    double mutbxHqUrd10662771 = -156674757;    double mutbxHqUrd99686615 = -11581875;    double mutbxHqUrd20127005 = -474998347;    double mutbxHqUrd47525829 = -187773313;    double mutbxHqUrd70730066 = -883094919;    double mutbxHqUrd93830118 = -115988322;    double mutbxHqUrd19761896 = -901817681;    double mutbxHqUrd35901525 = 65364119;    double mutbxHqUrd74550209 = -683045614;    double mutbxHqUrd17996373 = -649757837;    double mutbxHqUrd17245826 = -788982867;    double mutbxHqUrd67500982 = -251587196;    double mutbxHqUrd84784442 = -834465074;    double mutbxHqUrd43108884 = -818307643;    double mutbxHqUrd35571553 = -639643573;    double mutbxHqUrd127070 = -178301273;    double mutbxHqUrd82374263 = -281326270;    double mutbxHqUrd88892051 = -985210933;    double mutbxHqUrd70710943 = -878100730;    double mutbxHqUrd87038201 = -251269999;    double mutbxHqUrd49953883 = -46807337;    double mutbxHqUrd26965856 = -383854877;    double mutbxHqUrd57078480 = -791808951;    double mutbxHqUrd22327452 = -423663404;    double mutbxHqUrd90412948 = -825132388;    double mutbxHqUrd44208708 = -827957288;    double mutbxHqUrd86380379 = -378857551;    double mutbxHqUrd91348473 = -762496198;    double mutbxHqUrd2084341 = -108550829;    double mutbxHqUrd67348797 = -580140914;    double mutbxHqUrd25418324 = -62344761;    double mutbxHqUrd24797125 = -898111023;    double mutbxHqUrd94349358 = -68951372;    double mutbxHqUrd24193611 = -608145947;    double mutbxHqUrd37205781 = -296775913;    double mutbxHqUrd81141316 = -957039610;    double mutbxHqUrd41143188 = -64753258;    double mutbxHqUrd91509824 = -18352772;    double mutbxHqUrd96911077 = -759705121;    double mutbxHqUrd48559924 = -826695417;    double mutbxHqUrd38641308 = -828553787;    double mutbxHqUrd99264841 = -901621076;    double mutbxHqUrd62452317 = -28431654;    double mutbxHqUrd82507872 = -891934068;    double mutbxHqUrd39576528 = -622419605;    double mutbxHqUrd49817555 = -224547818;    double mutbxHqUrd50447025 = -688754941;    double mutbxHqUrd53630525 = -803325982;    double mutbxHqUrd28269026 = -586069517;    double mutbxHqUrd69611616 = -269486688;    double mutbxHqUrd71229137 = -506166990;    double mutbxHqUrd906640 = -294864845;    double mutbxHqUrd19002303 = -514139320;    double mutbxHqUrd77210928 = -759501943;    double mutbxHqUrd82529238 = -334786561;    double mutbxHqUrd83696914 = -772819881;    double mutbxHqUrd42608136 = -219772925;    double mutbxHqUrd97799552 = 48665057;    double mutbxHqUrd57112881 = -362640926;    double mutbxHqUrd26521359 = 44862369;    double mutbxHqUrd7449739 = -737130771;    double mutbxHqUrd28413423 = -39321484;    double mutbxHqUrd33817185 = -826085052;    double mutbxHqUrd7201413 = -2904701;    double mutbxHqUrd92578048 = -487413077;    double mutbxHqUrd92448700 = -195332144;     mutbxHqUrd63968382 = mutbxHqUrd57582725;     mutbxHqUrd57582725 = mutbxHqUrd79149805;     mutbxHqUrd79149805 = mutbxHqUrd7731485;     mutbxHqUrd7731485 = mutbxHqUrd79440175;     mutbxHqUrd79440175 = mutbxHqUrd83119788;     mutbxHqUrd83119788 = mutbxHqUrd55189051;     mutbxHqUrd55189051 = mutbxHqUrd71823026;     mutbxHqUrd71823026 = mutbxHqUrd20952197;     mutbxHqUrd20952197 = mutbxHqUrd15217016;     mutbxHqUrd15217016 = mutbxHqUrd14510371;     mutbxHqUrd14510371 = mutbxHqUrd58598489;     mutbxHqUrd58598489 = mutbxHqUrd56676733;     mutbxHqUrd56676733 = mutbxHqUrd47868552;     mutbxHqUrd47868552 = mutbxHqUrd80827932;     mutbxHqUrd80827932 = mutbxHqUrd61270192;     mutbxHqUrd61270192 = mutbxHqUrd39035653;     mutbxHqUrd39035653 = mutbxHqUrd67641144;     mutbxHqUrd67641144 = mutbxHqUrd42390042;     mutbxHqUrd42390042 = mutbxHqUrd58403203;     mutbxHqUrd58403203 = mutbxHqUrd35166366;     mutbxHqUrd35166366 = mutbxHqUrd37002526;     mutbxHqUrd37002526 = mutbxHqUrd504246;     mutbxHqUrd504246 = mutbxHqUrd56822354;     mutbxHqUrd56822354 = mutbxHqUrd17318537;     mutbxHqUrd17318537 = mutbxHqUrd35231467;     mutbxHqUrd35231467 = mutbxHqUrd96739409;     mutbxHqUrd96739409 = mutbxHqUrd63840578;     mutbxHqUrd63840578 = mutbxHqUrd69738686;     mutbxHqUrd69738686 = mutbxHqUrd53603400;     mutbxHqUrd53603400 = mutbxHqUrd89798691;     mutbxHqUrd89798691 = mutbxHqUrd89713246;     mutbxHqUrd89713246 = mutbxHqUrd64249130;     mutbxHqUrd64249130 = mutbxHqUrd32483122;     mutbxHqUrd32483122 = mutbxHqUrd10662771;     mutbxHqUrd10662771 = mutbxHqUrd99686615;     mutbxHqUrd99686615 = mutbxHqUrd20127005;     mutbxHqUrd20127005 = mutbxHqUrd47525829;     mutbxHqUrd47525829 = mutbxHqUrd70730066;     mutbxHqUrd70730066 = mutbxHqUrd93830118;     mutbxHqUrd93830118 = mutbxHqUrd19761896;     mutbxHqUrd19761896 = mutbxHqUrd35901525;     mutbxHqUrd35901525 = mutbxHqUrd74550209;     mutbxHqUrd74550209 = mutbxHqUrd17996373;     mutbxHqUrd17996373 = mutbxHqUrd17245826;     mutbxHqUrd17245826 = mutbxHqUrd67500982;     mutbxHqUrd67500982 = mutbxHqUrd84784442;     mutbxHqUrd84784442 = mutbxHqUrd43108884;     mutbxHqUrd43108884 = mutbxHqUrd35571553;     mutbxHqUrd35571553 = mutbxHqUrd127070;     mutbxHqUrd127070 = mutbxHqUrd82374263;     mutbxHqUrd82374263 = mutbxHqUrd88892051;     mutbxHqUrd88892051 = mutbxHqUrd70710943;     mutbxHqUrd70710943 = mutbxHqUrd87038201;     mutbxHqUrd87038201 = mutbxHqUrd49953883;     mutbxHqUrd49953883 = mutbxHqUrd26965856;     mutbxHqUrd26965856 = mutbxHqUrd57078480;     mutbxHqUrd57078480 = mutbxHqUrd22327452;     mutbxHqUrd22327452 = mutbxHqUrd90412948;     mutbxHqUrd90412948 = mutbxHqUrd44208708;     mutbxHqUrd44208708 = mutbxHqUrd86380379;     mutbxHqUrd86380379 = mutbxHqUrd91348473;     mutbxHqUrd91348473 = mutbxHqUrd2084341;     mutbxHqUrd2084341 = mutbxHqUrd67348797;     mutbxHqUrd67348797 = mutbxHqUrd25418324;     mutbxHqUrd25418324 = mutbxHqUrd24797125;     mutbxHqUrd24797125 = mutbxHqUrd94349358;     mutbxHqUrd94349358 = mutbxHqUrd24193611;     mutbxHqUrd24193611 = mutbxHqUrd37205781;     mutbxHqUrd37205781 = mutbxHqUrd81141316;     mutbxHqUrd81141316 = mutbxHqUrd41143188;     mutbxHqUrd41143188 = mutbxHqUrd91509824;     mutbxHqUrd91509824 = mutbxHqUrd96911077;     mutbxHqUrd96911077 = mutbxHqUrd48559924;     mutbxHqUrd48559924 = mutbxHqUrd38641308;     mutbxHqUrd38641308 = mutbxHqUrd99264841;     mutbxHqUrd99264841 = mutbxHqUrd62452317;     mutbxHqUrd62452317 = mutbxHqUrd82507872;     mutbxHqUrd82507872 = mutbxHqUrd39576528;     mutbxHqUrd39576528 = mutbxHqUrd49817555;     mutbxHqUrd49817555 = mutbxHqUrd50447025;     mutbxHqUrd50447025 = mutbxHqUrd53630525;     mutbxHqUrd53630525 = mutbxHqUrd28269026;     mutbxHqUrd28269026 = mutbxHqUrd69611616;     mutbxHqUrd69611616 = mutbxHqUrd71229137;     mutbxHqUrd71229137 = mutbxHqUrd906640;     mutbxHqUrd906640 = mutbxHqUrd19002303;     mutbxHqUrd19002303 = mutbxHqUrd77210928;     mutbxHqUrd77210928 = mutbxHqUrd82529238;     mutbxHqUrd82529238 = mutbxHqUrd83696914;     mutbxHqUrd83696914 = mutbxHqUrd42608136;     mutbxHqUrd42608136 = mutbxHqUrd97799552;     mutbxHqUrd97799552 = mutbxHqUrd57112881;     mutbxHqUrd57112881 = mutbxHqUrd26521359;     mutbxHqUrd26521359 = mutbxHqUrd7449739;     mutbxHqUrd7449739 = mutbxHqUrd28413423;     mutbxHqUrd28413423 = mutbxHqUrd33817185;     mutbxHqUrd33817185 = mutbxHqUrd7201413;     mutbxHqUrd7201413 = mutbxHqUrd92578048;     mutbxHqUrd92578048 = mutbxHqUrd92448700;     mutbxHqUrd92448700 = mutbxHqUrd63968382;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ZkJpfuPJkH91118599() {     double vzydurAjwi73283648 = -97863170;    double vzydurAjwi13005648 = -350035358;    double vzydurAjwi99301886 = -648706487;    double vzydurAjwi65521507 = -592931393;    double vzydurAjwi19503414 = -327692459;    double vzydurAjwi76663150 = -559360035;    double vzydurAjwi28843123 = -887458165;    double vzydurAjwi60959183 = -953297937;    double vzydurAjwi13760854 = -847694844;    double vzydurAjwi83841472 = -263216205;    double vzydurAjwi51412356 = -481592144;    double vzydurAjwi69836238 = -817093128;    double vzydurAjwi52458449 = -775161979;    double vzydurAjwi79957193 = -532504774;    double vzydurAjwi96103969 = -920151896;    double vzydurAjwi66240717 = -667275082;    double vzydurAjwi82846421 = -333711172;    double vzydurAjwi79833785 = -372857352;    double vzydurAjwi24402974 = -996324567;    double vzydurAjwi21598552 = -809079309;    double vzydurAjwi23845717 = -161956884;    double vzydurAjwi61211438 = -634373600;    double vzydurAjwi36565512 = -156220905;    double vzydurAjwi16028983 = 71436419;    double vzydurAjwi80381079 = -895268065;    double vzydurAjwi1139285 = -622431655;    double vzydurAjwi30497676 = -330522469;    double vzydurAjwi34935054 = -732849822;    double vzydurAjwi36855593 = -662207397;    double vzydurAjwi66384348 = -693577822;    double vzydurAjwi59797070 = -990727594;    double vzydurAjwi66972609 = -823411344;    double vzydurAjwi14108460 = -921862954;    double vzydurAjwi21512070 = 34846215;    double vzydurAjwi97313046 = -333087351;    double vzydurAjwi31511510 = -427807322;    double vzydurAjwi57594612 = -76198209;    double vzydurAjwi3562628 = 59631324;    double vzydurAjwi36955768 = -934310706;    double vzydurAjwi69930015 = -923173834;    double vzydurAjwi43825030 = 61025901;    double vzydurAjwi23553181 = -955907972;    double vzydurAjwi96267214 = -904925995;    double vzydurAjwi76753273 = -40152725;    double vzydurAjwi53195900 = -580758661;    double vzydurAjwi37740218 = -577121755;    double vzydurAjwi90034073 = -407299219;    double vzydurAjwi14579921 = -164851031;    double vzydurAjwi1598697 = -875340089;    double vzydurAjwi69764972 = 28685025;    double vzydurAjwi19341972 = -17202266;    double vzydurAjwi53109094 = -533197150;    double vzydurAjwi58718601 = -465877636;    double vzydurAjwi91619445 = -611123116;    double vzydurAjwi67272882 = 18274578;    double vzydurAjwi12072210 = -463489571;    double vzydurAjwi76440136 = -93814454;    double vzydurAjwi83272903 = -620142906;    double vzydurAjwi85140427 = -697663329;    double vzydurAjwi18364130 = -705260805;    double vzydurAjwi46165475 = -128837566;    double vzydurAjwi93908069 = -54608343;    double vzydurAjwi24103590 = -191090541;    double vzydurAjwi47376506 = -54117022;    double vzydurAjwi24044403 = -272488612;    double vzydurAjwi84439746 = -658180801;    double vzydurAjwi55727778 = -895230175;    double vzydurAjwi30946379 = -710008195;    double vzydurAjwi82644147 = -99417423;    double vzydurAjwi64592459 = -392344574;    double vzydurAjwi8646105 = -491076873;    double vzydurAjwi79283793 = -293342496;    double vzydurAjwi42878018 = -438546646;    double vzydurAjwi54472959 = 26849266;    double vzydurAjwi77773522 = -770105210;    double vzydurAjwi292537 = -206048913;    double vzydurAjwi64944223 = -729447605;    double vzydurAjwi59812238 = -16068180;    double vzydurAjwi62833083 = -347804921;    double vzydurAjwi42640862 = -218146310;    double vzydurAjwi11105211 = -115132437;    double vzydurAjwi15917755 = -65671438;    double vzydurAjwi33336358 = -857509733;    double vzydurAjwi67090621 = -590892422;    double vzydurAjwi47042376 = -576375556;    double vzydurAjwi6687977 = -357530445;    double vzydurAjwi8254009 = -257533709;    double vzydurAjwi22489015 = -210739838;    double vzydurAjwi54239188 = -983428363;    double vzydurAjwi85240836 = -869597781;    double vzydurAjwi55071374 = -233992869;    double vzydurAjwi74321709 = -456055303;    double vzydurAjwi18422200 = -242705348;    double vzydurAjwi18591638 = -129049902;    double vzydurAjwi23764541 = -694336268;    double vzydurAjwi49916960 = -884365756;    double vzydurAjwi99449590 = -664817431;    double vzydurAjwi48890709 = -750808974;    double vzydurAjwi52708870 = -767664114;    double vzydurAjwi68756154 = -97863170;     vzydurAjwi73283648 = vzydurAjwi13005648;     vzydurAjwi13005648 = vzydurAjwi99301886;     vzydurAjwi99301886 = vzydurAjwi65521507;     vzydurAjwi65521507 = vzydurAjwi19503414;     vzydurAjwi19503414 = vzydurAjwi76663150;     vzydurAjwi76663150 = vzydurAjwi28843123;     vzydurAjwi28843123 = vzydurAjwi60959183;     vzydurAjwi60959183 = vzydurAjwi13760854;     vzydurAjwi13760854 = vzydurAjwi83841472;     vzydurAjwi83841472 = vzydurAjwi51412356;     vzydurAjwi51412356 = vzydurAjwi69836238;     vzydurAjwi69836238 = vzydurAjwi52458449;     vzydurAjwi52458449 = vzydurAjwi79957193;     vzydurAjwi79957193 = vzydurAjwi96103969;     vzydurAjwi96103969 = vzydurAjwi66240717;     vzydurAjwi66240717 = vzydurAjwi82846421;     vzydurAjwi82846421 = vzydurAjwi79833785;     vzydurAjwi79833785 = vzydurAjwi24402974;     vzydurAjwi24402974 = vzydurAjwi21598552;     vzydurAjwi21598552 = vzydurAjwi23845717;     vzydurAjwi23845717 = vzydurAjwi61211438;     vzydurAjwi61211438 = vzydurAjwi36565512;     vzydurAjwi36565512 = vzydurAjwi16028983;     vzydurAjwi16028983 = vzydurAjwi80381079;     vzydurAjwi80381079 = vzydurAjwi1139285;     vzydurAjwi1139285 = vzydurAjwi30497676;     vzydurAjwi30497676 = vzydurAjwi34935054;     vzydurAjwi34935054 = vzydurAjwi36855593;     vzydurAjwi36855593 = vzydurAjwi66384348;     vzydurAjwi66384348 = vzydurAjwi59797070;     vzydurAjwi59797070 = vzydurAjwi66972609;     vzydurAjwi66972609 = vzydurAjwi14108460;     vzydurAjwi14108460 = vzydurAjwi21512070;     vzydurAjwi21512070 = vzydurAjwi97313046;     vzydurAjwi97313046 = vzydurAjwi31511510;     vzydurAjwi31511510 = vzydurAjwi57594612;     vzydurAjwi57594612 = vzydurAjwi3562628;     vzydurAjwi3562628 = vzydurAjwi36955768;     vzydurAjwi36955768 = vzydurAjwi69930015;     vzydurAjwi69930015 = vzydurAjwi43825030;     vzydurAjwi43825030 = vzydurAjwi23553181;     vzydurAjwi23553181 = vzydurAjwi96267214;     vzydurAjwi96267214 = vzydurAjwi76753273;     vzydurAjwi76753273 = vzydurAjwi53195900;     vzydurAjwi53195900 = vzydurAjwi37740218;     vzydurAjwi37740218 = vzydurAjwi90034073;     vzydurAjwi90034073 = vzydurAjwi14579921;     vzydurAjwi14579921 = vzydurAjwi1598697;     vzydurAjwi1598697 = vzydurAjwi69764972;     vzydurAjwi69764972 = vzydurAjwi19341972;     vzydurAjwi19341972 = vzydurAjwi53109094;     vzydurAjwi53109094 = vzydurAjwi58718601;     vzydurAjwi58718601 = vzydurAjwi91619445;     vzydurAjwi91619445 = vzydurAjwi67272882;     vzydurAjwi67272882 = vzydurAjwi12072210;     vzydurAjwi12072210 = vzydurAjwi76440136;     vzydurAjwi76440136 = vzydurAjwi83272903;     vzydurAjwi83272903 = vzydurAjwi85140427;     vzydurAjwi85140427 = vzydurAjwi18364130;     vzydurAjwi18364130 = vzydurAjwi46165475;     vzydurAjwi46165475 = vzydurAjwi93908069;     vzydurAjwi93908069 = vzydurAjwi24103590;     vzydurAjwi24103590 = vzydurAjwi47376506;     vzydurAjwi47376506 = vzydurAjwi24044403;     vzydurAjwi24044403 = vzydurAjwi84439746;     vzydurAjwi84439746 = vzydurAjwi55727778;     vzydurAjwi55727778 = vzydurAjwi30946379;     vzydurAjwi30946379 = vzydurAjwi82644147;     vzydurAjwi82644147 = vzydurAjwi64592459;     vzydurAjwi64592459 = vzydurAjwi8646105;     vzydurAjwi8646105 = vzydurAjwi79283793;     vzydurAjwi79283793 = vzydurAjwi42878018;     vzydurAjwi42878018 = vzydurAjwi54472959;     vzydurAjwi54472959 = vzydurAjwi77773522;     vzydurAjwi77773522 = vzydurAjwi292537;     vzydurAjwi292537 = vzydurAjwi64944223;     vzydurAjwi64944223 = vzydurAjwi59812238;     vzydurAjwi59812238 = vzydurAjwi62833083;     vzydurAjwi62833083 = vzydurAjwi42640862;     vzydurAjwi42640862 = vzydurAjwi11105211;     vzydurAjwi11105211 = vzydurAjwi15917755;     vzydurAjwi15917755 = vzydurAjwi33336358;     vzydurAjwi33336358 = vzydurAjwi67090621;     vzydurAjwi67090621 = vzydurAjwi47042376;     vzydurAjwi47042376 = vzydurAjwi6687977;     vzydurAjwi6687977 = vzydurAjwi8254009;     vzydurAjwi8254009 = vzydurAjwi22489015;     vzydurAjwi22489015 = vzydurAjwi54239188;     vzydurAjwi54239188 = vzydurAjwi85240836;     vzydurAjwi85240836 = vzydurAjwi55071374;     vzydurAjwi55071374 = vzydurAjwi74321709;     vzydurAjwi74321709 = vzydurAjwi18422200;     vzydurAjwi18422200 = vzydurAjwi18591638;     vzydurAjwi18591638 = vzydurAjwi23764541;     vzydurAjwi23764541 = vzydurAjwi49916960;     vzydurAjwi49916960 = vzydurAjwi99449590;     vzydurAjwi99449590 = vzydurAjwi48890709;     vzydurAjwi48890709 = vzydurAjwi52708870;     vzydurAjwi52708870 = vzydurAjwi68756154;     vzydurAjwi68756154 = vzydurAjwi73283648;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void wzgWuqFCku49359480() {     double AZrjrZjRTV11940776 = -354769208;    double AZrjrZjRTV38327369 = -537521687;    double AZrjrZjRTV40798260 = -977181254;    double AZrjrZjRTV68460103 = -414997826;    double AZrjrZjRTV46956434 = -989156591;    double AZrjrZjRTV15012183 = -16080556;    double AZrjrZjRTV52665635 = -392467800;    double AZrjrZjRTV62467009 = -507617313;    double AZrjrZjRTV43444621 = -848054257;    double AZrjrZjRTV26138983 = -519723394;    double AZrjrZjRTV66385784 = -597403359;    double AZrjrZjRTV49819094 = -874177513;    double AZrjrZjRTV265692 = -472705530;    double AZrjrZjRTV82043020 = 44316280;    double AZrjrZjRTV73832097 = -584645156;    double AZrjrZjRTV13247148 = -357610624;    double AZrjrZjRTV88657121 = -271725698;    double AZrjrZjRTV94733464 = -510820090;    double AZrjrZjRTV45136394 = -860759721;    double AZrjrZjRTV98080953 = -957445297;    double AZrjrZjRTV37058738 = -289444046;    double AZrjrZjRTV2320851 = -635976510;    double AZrjrZjRTV7561367 = -761864602;    double AZrjrZjRTV85036183 = -834244308;    double AZrjrZjRTV7761923 = -865190281;    double AZrjrZjRTV53023598 = -531564780;    double AZrjrZjRTV26216739 = 54966749;    double AZrjrZjRTV33650829 = -243829775;    double AZrjrZjRTV84508459 = -28338931;    double AZrjrZjRTV16083070 = -716698688;    double AZrjrZjRTV56136131 = -140038960;    double AZrjrZjRTV84444369 = -218107237;    double AZrjrZjRTV66474852 = -987936573;    double AZrjrZjRTV45458881 = -861865719;    double AZrjrZjRTV88297123 = -921867091;    double AZrjrZjRTV46171335 = -844571968;    double AZrjrZjRTV63212102 = -688458243;    double AZrjrZjRTV76724616 = 95886390;    double AZrjrZjRTV59961776 = -642479272;    double AZrjrZjRTV22799507 = -722182670;    double AZrjrZjRTV95670547 = -880055537;    double AZrjrZjRTV68419506 = -201583076;    double AZrjrZjRTV29300621 = -599182579;    double AZrjrZjRTV88233771 = -15537085;    double AZrjrZjRTV77209968 = -537147462;    double AZrjrZjRTV42001586 = -956363829;    double AZrjrZjRTV96850293 = -345344187;    double AZrjrZjRTV95820329 = -768025480;    double AZrjrZjRTV80842777 = -689036498;    double AZrjrZjRTV51020810 = -168344685;    double AZrjrZjRTV1379727 = -885061149;    double AZrjrZjRTV90001888 = -494109394;    double AZrjrZjRTV67098950 = -17910508;    double AZrjrZjRTV16223656 = -842014589;    double AZrjrZjRTV12300743 = -662601870;    double AZrjrZjRTV9619925 = -718792698;    double AZrjrZjRTV30766003 = -775657085;    double AZrjrZjRTV55762076 = -42936947;    double AZrjrZjRTV60698180 = -549807546;    double AZrjrZjRTV93932835 = -357591811;    double AZrjrZjRTV88795443 = 28952695;    double AZrjrZjRTV19014806 = -48638025;    double AZrjrZjRTV77958550 = -379278383;    double AZrjrZjRTV27361551 = -31355569;    double AZrjrZjRTV70002851 = -279684434;    double AZrjrZjRTV81941415 = -279296122;    double AZrjrZjRTV83344241 = -886240941;    double AZrjrZjRTV54806811 = -610839811;    double AZrjrZjRTV93745897 = -33816630;    double AZrjrZjRTV27660762 = -740073188;    double AZrjrZjRTV50035046 = -669152381;    double AZrjrZjRTV11932505 = -267612089;    double AZrjrZjRTV34771689 = -868340819;    double AZrjrZjRTV22336888 = -38577051;    double AZrjrZjRTV2410406 = 22610240;    double AZrjrZjRTV68639232 = 12139029;    double AZrjrZjRTV73020230 = 63206068;    double AZrjrZjRTV19327595 = -646327518;    double AZrjrZjRTV7826216 = -197096846;    double AZrjrZjRTV65760336 = -908826452;    double AZrjrZjRTV56173304 = -86220593;    double AZrjrZjRTV30396410 = -177007772;    double AZrjrZjRTV52808051 = -554793278;    double AZrjrZjRTV33487649 = -859994246;    double AZrjrZjRTV14703344 = -831637539;    double AZrjrZjRTV66134242 = -645929567;    double AZrjrZjRTV17345420 = -100196730;    double AZrjrZjRTV50251197 = -45921985;    double AZrjrZjRTV33158139 = -99263850;    double AZrjrZjRTV78677198 = -103074393;    double AZrjrZjRTV15405333 = 31085117;    double AZrjrZjRTV7450026 = -545521296;    double AZrjrZjRTV16026437 = -354306065;    double AZrjrZjRTV66028941 = -184887461;    double AZrjrZjRTV34004063 = -651135366;    double AZrjrZjRTV76655741 = -731417513;    double AZrjrZjRTV90460956 = -822304693;    double AZrjrZjRTV1939071 = -467827011;    double AZrjrZjRTV18230920 = -735852652;    double AZrjrZjRTV95268553 = -354769208;     AZrjrZjRTV11940776 = AZrjrZjRTV38327369;     AZrjrZjRTV38327369 = AZrjrZjRTV40798260;     AZrjrZjRTV40798260 = AZrjrZjRTV68460103;     AZrjrZjRTV68460103 = AZrjrZjRTV46956434;     AZrjrZjRTV46956434 = AZrjrZjRTV15012183;     AZrjrZjRTV15012183 = AZrjrZjRTV52665635;     AZrjrZjRTV52665635 = AZrjrZjRTV62467009;     AZrjrZjRTV62467009 = AZrjrZjRTV43444621;     AZrjrZjRTV43444621 = AZrjrZjRTV26138983;     AZrjrZjRTV26138983 = AZrjrZjRTV66385784;     AZrjrZjRTV66385784 = AZrjrZjRTV49819094;     AZrjrZjRTV49819094 = AZrjrZjRTV265692;     AZrjrZjRTV265692 = AZrjrZjRTV82043020;     AZrjrZjRTV82043020 = AZrjrZjRTV73832097;     AZrjrZjRTV73832097 = AZrjrZjRTV13247148;     AZrjrZjRTV13247148 = AZrjrZjRTV88657121;     AZrjrZjRTV88657121 = AZrjrZjRTV94733464;     AZrjrZjRTV94733464 = AZrjrZjRTV45136394;     AZrjrZjRTV45136394 = AZrjrZjRTV98080953;     AZrjrZjRTV98080953 = AZrjrZjRTV37058738;     AZrjrZjRTV37058738 = AZrjrZjRTV2320851;     AZrjrZjRTV2320851 = AZrjrZjRTV7561367;     AZrjrZjRTV7561367 = AZrjrZjRTV85036183;     AZrjrZjRTV85036183 = AZrjrZjRTV7761923;     AZrjrZjRTV7761923 = AZrjrZjRTV53023598;     AZrjrZjRTV53023598 = AZrjrZjRTV26216739;     AZrjrZjRTV26216739 = AZrjrZjRTV33650829;     AZrjrZjRTV33650829 = AZrjrZjRTV84508459;     AZrjrZjRTV84508459 = AZrjrZjRTV16083070;     AZrjrZjRTV16083070 = AZrjrZjRTV56136131;     AZrjrZjRTV56136131 = AZrjrZjRTV84444369;     AZrjrZjRTV84444369 = AZrjrZjRTV66474852;     AZrjrZjRTV66474852 = AZrjrZjRTV45458881;     AZrjrZjRTV45458881 = AZrjrZjRTV88297123;     AZrjrZjRTV88297123 = AZrjrZjRTV46171335;     AZrjrZjRTV46171335 = AZrjrZjRTV63212102;     AZrjrZjRTV63212102 = AZrjrZjRTV76724616;     AZrjrZjRTV76724616 = AZrjrZjRTV59961776;     AZrjrZjRTV59961776 = AZrjrZjRTV22799507;     AZrjrZjRTV22799507 = AZrjrZjRTV95670547;     AZrjrZjRTV95670547 = AZrjrZjRTV68419506;     AZrjrZjRTV68419506 = AZrjrZjRTV29300621;     AZrjrZjRTV29300621 = AZrjrZjRTV88233771;     AZrjrZjRTV88233771 = AZrjrZjRTV77209968;     AZrjrZjRTV77209968 = AZrjrZjRTV42001586;     AZrjrZjRTV42001586 = AZrjrZjRTV96850293;     AZrjrZjRTV96850293 = AZrjrZjRTV95820329;     AZrjrZjRTV95820329 = AZrjrZjRTV80842777;     AZrjrZjRTV80842777 = AZrjrZjRTV51020810;     AZrjrZjRTV51020810 = AZrjrZjRTV1379727;     AZrjrZjRTV1379727 = AZrjrZjRTV90001888;     AZrjrZjRTV90001888 = AZrjrZjRTV67098950;     AZrjrZjRTV67098950 = AZrjrZjRTV16223656;     AZrjrZjRTV16223656 = AZrjrZjRTV12300743;     AZrjrZjRTV12300743 = AZrjrZjRTV9619925;     AZrjrZjRTV9619925 = AZrjrZjRTV30766003;     AZrjrZjRTV30766003 = AZrjrZjRTV55762076;     AZrjrZjRTV55762076 = AZrjrZjRTV60698180;     AZrjrZjRTV60698180 = AZrjrZjRTV93932835;     AZrjrZjRTV93932835 = AZrjrZjRTV88795443;     AZrjrZjRTV88795443 = AZrjrZjRTV19014806;     AZrjrZjRTV19014806 = AZrjrZjRTV77958550;     AZrjrZjRTV77958550 = AZrjrZjRTV27361551;     AZrjrZjRTV27361551 = AZrjrZjRTV70002851;     AZrjrZjRTV70002851 = AZrjrZjRTV81941415;     AZrjrZjRTV81941415 = AZrjrZjRTV83344241;     AZrjrZjRTV83344241 = AZrjrZjRTV54806811;     AZrjrZjRTV54806811 = AZrjrZjRTV93745897;     AZrjrZjRTV93745897 = AZrjrZjRTV27660762;     AZrjrZjRTV27660762 = AZrjrZjRTV50035046;     AZrjrZjRTV50035046 = AZrjrZjRTV11932505;     AZrjrZjRTV11932505 = AZrjrZjRTV34771689;     AZrjrZjRTV34771689 = AZrjrZjRTV22336888;     AZrjrZjRTV22336888 = AZrjrZjRTV2410406;     AZrjrZjRTV2410406 = AZrjrZjRTV68639232;     AZrjrZjRTV68639232 = AZrjrZjRTV73020230;     AZrjrZjRTV73020230 = AZrjrZjRTV19327595;     AZrjrZjRTV19327595 = AZrjrZjRTV7826216;     AZrjrZjRTV7826216 = AZrjrZjRTV65760336;     AZrjrZjRTV65760336 = AZrjrZjRTV56173304;     AZrjrZjRTV56173304 = AZrjrZjRTV30396410;     AZrjrZjRTV30396410 = AZrjrZjRTV52808051;     AZrjrZjRTV52808051 = AZrjrZjRTV33487649;     AZrjrZjRTV33487649 = AZrjrZjRTV14703344;     AZrjrZjRTV14703344 = AZrjrZjRTV66134242;     AZrjrZjRTV66134242 = AZrjrZjRTV17345420;     AZrjrZjRTV17345420 = AZrjrZjRTV50251197;     AZrjrZjRTV50251197 = AZrjrZjRTV33158139;     AZrjrZjRTV33158139 = AZrjrZjRTV78677198;     AZrjrZjRTV78677198 = AZrjrZjRTV15405333;     AZrjrZjRTV15405333 = AZrjrZjRTV7450026;     AZrjrZjRTV7450026 = AZrjrZjRTV16026437;     AZrjrZjRTV16026437 = AZrjrZjRTV66028941;     AZrjrZjRTV66028941 = AZrjrZjRTV34004063;     AZrjrZjRTV34004063 = AZrjrZjRTV76655741;     AZrjrZjRTV76655741 = AZrjrZjRTV90460956;     AZrjrZjRTV90460956 = AZrjrZjRTV1939071;     AZrjrZjRTV1939071 = AZrjrZjRTV18230920;     AZrjrZjRTV18230920 = AZrjrZjRTV95268553;     AZrjrZjRTV95268553 = AZrjrZjRTV11940776;}
// Junk Finished
