#include <functional>
#include <intrin.h>
#include <string>
#include <Windows.h>
#include <Psapi.h>

#include "imgui/imgui.h"
#include "imgui/imgui_impl_dx9.h"
#include "imgui/imgui_impl_win32.h"

#include "MinHook/MinHook.h"

#include "Config.h"
#include "EventListener.h"
#include "ExtraHooks.h"
#include "GUI.h"
#include "Hooks.h"
#include "Interfaces.h"
#include "Memory.h"

#include "Hacks/Aimbot.h"
#include "Hacks/Animations.h"
#include "Hacks/AntiAim.h"
#include "Hacks/Backtrack.h"
#include "Hacks/Chams.h"
#include "Hacks/EnginePrediction.h"
#include "Hacks/Esp.h"
#include "Hacks/GrenadePrediction.h"
#include "Hacks/Glow.h"
#include "Hacks/Misc.h"
#include "Hacks/Legitbot.h"
#include "Hacks/Ragebot.h"
#include "Hacks/SkinChanger.h"
#include "Hacks/Tickbase.h"
#include "Hacks/Triggerbot.h"
#include "Hacks/Visuals.h"

#include "SDK/Engine.h"
#include "SDK/Entity.h"
#include "SDK/EntityList.h"
#include "SDK/FrameStage.h"
#include "SDK/GameEvent.h"
#include "SDK/GameMovement.h"
#include "SDK/GameUI.h"
#include "SDK/Input.h"
#include "SDK/InputSystem.h"
#include "SDK/MaterialSystem.h"
#include "SDK/ModelRender.h"
#include "SDK/Panel.h"
#include "SDK/Prediction.h"
#include "SDK/RenderContext.h"
#include "SDK/SoundInfo.h"
#include "SDK/SoundEmitter.h"
#include "SDK/StudioRender.h"
#include "SDK/Surface.h"
#include "SDK/UserCmd.h"

static LRESULT __stdcall wndProc(HWND window, UINT msg, WPARAM wParam, LPARAM lParam) noexcept
{
    static const auto once = [](HWND window) noexcept {
        netvars = std::make_unique<Netvars>();
        eventListener = std::make_unique<EventListener>();
        config = std::make_unique<Config>("Javin");
        Tickbase::tick = std::make_unique<Tickbase::Tick>();

        ImGui::CreateContext();
        ImGui_ImplWin32_Init(window);
        gui = std::make_unique<GUI>();

        hooks->install();

        return true;
    }(window);

    if (msg == WM_KEYDOWN && LOWORD(wParam) == config->misc.menuKey
        || ((msg == WM_LBUTTONDOWN || msg == WM_LBUTTONDBLCLK) && config->misc.menuKey == VK_LBUTTON)
        || ((msg == WM_RBUTTONDOWN || msg == WM_RBUTTONDBLCLK) && config->misc.menuKey == VK_RBUTTON)
        || ((msg == WM_MBUTTONDOWN || msg == WM_MBUTTONDBLCLK) && config->misc.menuKey == VK_MBUTTON)
        || ((msg == WM_XBUTTONDOWN || msg == WM_XBUTTONDBLCLK) && config->misc.menuKey == HIWORD(wParam) + 4)) {
        gui->open = !gui->open;
        if (!gui->open) {
            // ImGui::GetIO().MouseDown[0] = false;
            interfaces->inputSystem->resetInputState();
        }
    }

    LRESULT ImGui_ImplWin32_WndProcHandler(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam);
    ImGui_ImplWin32_WndProcHandler(window, msg, wParam, lParam);

    interfaces->inputSystem->enableInput(!gui->open);

    Tickbase::tick = std::make_unique<Tickbase::Tick>();
    return CallWindowProcW(hooks->originalWndProc, window, msg, wParam, lParam);
}

static HRESULT __stdcall present(IDirect3DDevice9* device, const RECT* src, const RECT* dest, HWND windowOverride, const RGNDATA* dirtyRegion) noexcept
{
    static bool imguiInit{ ImGui_ImplDX9_Init(device) };

    ImGui_ImplDX9_NewFrame();
    ImGui_ImplWin32_NewFrame();
    ImGui::NewFrame();
    nadePrediction::draw();
    Misc::purchaseList();
    Misc::spectatorList();

    Misc::debugwindow();
    
    Misc::watermark();

    if (gui->open)
        gui->render();

    ImGui::EndFrame();
    ImGui::Render();

    if (device->BeginScene() == D3D_OK) {
        ImGui_ImplDX9_RenderDrawData(ImGui::GetDrawData());
        device->EndScene();
    }

    return hooks->originalPresent(device, src, dest, windowOverride, dirtyRegion);
}

static HRESULT __stdcall reset(IDirect3DDevice9* device, D3DPRESENT_PARAMETERS* params) noexcept
{
    ImGui_ImplDX9_InvalidateDeviceObjects();
    return hooks->originalReset(device, params);
}

static bool __fastcall sendNetMsg(void* networkchannel, void* edx, NetworkMessage& msg, bool bForceReliable, bool bVoice)
{
    auto original = hooks->networkChannel.getOriginal<bool, NetworkMessage&, bool, bool>(40, msg, bForceReliable, bVoice);

    if (msg.getType() == 14 && config->misc.svpurebypass) // Return and don't send messsage if its FileCRCCheck
        return false;

    return original(networkchannel, msg, bForceReliable, bVoice);
}

static int __fastcall sendDatagram(NetworkChannel* network, void* edx, void* datagram)
{
    auto original = hooks->networkChannel.getOriginal<int, void*>(46, datagram);
    if (!config->backtrack.fakeLatency || datagram || !interfaces->engine->isInGame())
    {
        return original(network, datagram);
    }
    int instate = network->InReliableState;
    int insequencenr = network->InSequenceNr;

    float delta = max(0.f, std::clamp(config->backtrack.fakeLatencyAmount / 1000.f, 0.f, Backtrack::cvars.maxUnlag->getFloat()) - network->getLatency(0));

    Backtrack::AddLatencyToNetwork(network, delta);

    int result = original(network, datagram);

    network->InReliableState = instate;
    network->InSequenceNr = insequencenr;

    return result;
}

static bool __stdcall createMove(float inputSampleTime, UserCmd* cmd) noexcept
{
    auto result = hooks->clientMode.callOriginal<bool, 24>(inputSampleTime, cmd);

    if (!cmd->commandNumber)
        return result;

    uintptr_t* framePointer;
    __asm mov framePointer, ebp;
    bool& sendPacket = *reinterpret_cast<bool*>(*framePointer - 0x1C);

    static auto previousViewAngles{ cmd->viewangles };
    const auto oldCurrentViewAngles{ cmd->viewangles };

    float angle = Misc::autoStrafe(cmd, oldCurrentViewAngles);
    const auto currentViewAngles{ cmd->viewangles };
    memory->globalVars->serverTime(cmd);
    Misc::nadeTrajectory();
    Misc::showImpacts();
    Misc::antiAfkKick(cmd);
    Misc::fastPlant(cmd);
    Misc::prepareRevolver(cmd);
    Misc::sniperCrosshair();
    Misc::recoilCrosshair();
    Visuals::removeShadows();
    Misc::bunnyHop(cmd);
    Misc::removeCrouchCooldown(cmd);
    Misc::autoPistol(cmd);
    Misc::clanTag();
    Misc::fakeBan();
    Misc::stealNames();
    Misc::revealRanks(cmd);
    Misc::fastStop(cmd);
    Misc::slowwalk(cmd);
    Ragebot::autoStop(cmd);

    extraHook.init();

    static void* oldPointer = nullptr;

    auto network = interfaces->engine->getNetworkChannel();
    if (oldPointer != network && network && interfaces->engine->isInGame())
    {
        oldPointer = network;
        hooks->networkChannel.init(network);
        hooks->networkChannel.hookAt(40, sendNetMsg);
        hooks->networkChannel.hookAt(46, sendDatagram);
    }
    Backtrack::UpdateIncomingSequences();

    EnginePrediction::run(cmd);
    nadePrediction::run(cmd);
    cmd->viewangles.y -= angle; //ghetto fix

    Legitbot::run(cmd);
    Backtrack::run(cmd);
    Triggerbot::run(cmd);
    Ragebot::run(cmd);
    Tickbase::run(cmd, sendPacket);

    Resolver::UpdateShots(cmd);

    Misc::edgejump(cmd);
    Misc::jumpbug(cmd);
    Misc::moonwalk(cmd);
    Misc::blockBot(cmd);

    Misc::quickPeek(cmd);

    AntiAim::fakeLag(cmd, sendPacket);
    AntiAim::fakeDuck(cmd);
    cmd->viewangles.y += angle;
    AntiAim::run(cmd, previousViewAngles, currentViewAngles, sendPacket);
    cmd->viewangles.y -= angle;

    auto viewAnglesDelta{ cmd->viewangles - previousViewAngles };
    viewAnglesDelta.normalize();
    viewAnglesDelta.x = std::clamp(viewAnglesDelta.x, -config->misc.maxAngleDelta, config->misc.maxAngleDelta);
    viewAnglesDelta.y = std::clamp(viewAnglesDelta.y, -config->misc.maxAngleDelta, config->misc.maxAngleDelta);

    cmd->viewangles = previousViewAngles + viewAnglesDelta;

    cmd->viewangles.normalize();
    Misc::fixMovement(cmd, currentViewAngles.y);

    cmd->viewangles.x = std::clamp(cmd->viewangles.x, -89.0f, 89.0f);
    cmd->viewangles.y = std::clamp(cmd->viewangles.y, -180.0f, 180.0f);
    cmd->viewangles.z = 0.0f;
    cmd->forwardmove = std::clamp(cmd->forwardmove, -450.0f, 450.0f);
    cmd->sidemove = std::clamp(cmd->sidemove, -450.0f, 450.0f);

    previousViewAngles = cmd->viewangles;
    Animations::update(cmd,sendPacket);
    Animations::fake();
    return false;
}

static int __stdcall doPostScreenEffects(int param) noexcept
{
    if (interfaces->engine->isInGame()) {
        Visuals::thirdperson();
        Misc::inverseRagdollGravity();
        Visuals::reduceFlashEffect();
        Visuals::updateBrightness();
        Visuals::remove3dSky();
        Visuals::nightMode();
        Glow::render();
    }
    return hooks->clientMode.callOriginal<int, 44>(param);
}

static float __stdcall getViewModelFov() noexcept
{
    float additionalFov = static_cast<float>(config->visuals.viewmodelFov);
    if (localPlayer) {
        if (const auto activeWeapon = localPlayer->getActiveWeapon(); activeWeapon && activeWeapon->getClientClass()->classId == ClassId::Tablet)
            additionalFov = 0.0f;
    }

    return hooks->clientMode.callOriginal<float, 35>() + additionalFov;
}

static void __stdcall drawModelExecute(void* ctx, void* state, const ModelRenderInfo& info, matrix3x4* customBoneToWorld) noexcept
{
    if (interfaces->studioRender->isForcedMaterialOverride())
        return hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);

    if (Visuals::removeHands(info.model->name) || Visuals::removeSleeves(info.model->name) || Visuals::removeWeapons(info.model->name))
        return;

    static Chams chams;
    if (!chams.render(ctx, state, info, customBoneToWorld))
        hooks->modelRender.callOriginal<void, 21>(ctx, state, std::cref(info), customBoneToWorld);
    interfaces->studioRender->forcedMaterialOverride(nullptr);
}

static bool __fastcall svCheatsGetBool(void* _this) noexcept
{
    if (uintptr_t(_ReturnAddress()) == memory->cameraThink && config->visuals.thirdperson)
        return true;
    else
        return hooks->svCheats.getOriginal<bool>(13)(_this);
}

static void __stdcall paintTraverse(unsigned int panel, bool forceRepaint, bool allowForce) noexcept
{
    static bool alreadyCalled = false;
    if (!alreadyCalled)
    {
        hooks->tahomaBoldAA = interfaces->surface->createFont(); interfaces->surface->setFontGlyphSet(hooks->tahomaBoldAA, "Tahoma", 12, 500, 0, 0, 0x010 | 0x080, 0, 0);
        hooks->smallFonts = interfaces->surface->createFont(); interfaces->surface->setFontGlyphSet(hooks->smallFonts, "Small Fonts", 9, 500, 0, 0, 0x200, 0, 0);
        hooks->tahomaAA = interfaces->surface->createFont(); interfaces->surface->setFontGlyphSet(hooks->tahomaAA, "Tahoma", 12, 400, 0, 0, 0x010 | 0x080, 0, 0);
        hooks->tahomaNoShadowAA = interfaces->surface->createFont(); interfaces->surface->setFontGlyphSet(hooks->tahomaNoShadowAA, "Tahoma", 12, 400, 0, 0, 0x010, 0, 0);
        hooks->verdanaExtraBoldAA = interfaces->surface->createFont(); interfaces->surface->setFontGlyphSet(hooks->verdanaExtraBoldAA, "Verdana", 25, 800, 0, 0, 0x010 | 0x080, 0, 0);

        alreadyCalled = true;
    }

    if (interfaces->panel->getName(panel) == "MatSystemTopPanel") {
        Esp::render();
        Misc::drawBombTimer();
        Visuals::hitMarker();
        Misc::showVelocity();
        Misc::drawQuickPeekStartPos();
        Visuals::aaLines();
    }
    hooks->panel.callOriginal<void, 41>(panel, forceRepaint, allowForce);
}

static void __stdcall frameStageNotify(FrameStage stage) noexcept
{
    static auto backtrackInit = (Backtrack::init(), false);

    if (interfaces->engine->isConnected() && !interfaces->engine->isInGame())
        Misc::changeName(true, nullptr, 0.0f);

    if (stage == FrameStage::RENDER_START) {
        for (size_t i = 0; i < config->ragebot.size(); i++)
        {
            if (config->ragebot[i].enabled && config->legitbot[i].enabled)
            {
                config->ragebot[i].enabled = false;
            }
        }
        Misc::disablePanoramablur();
        Misc::fakePrime();
        Animations::players();
        Animations::real();
    }
    if (interfaces->engine->isInGame()) {
        Visuals::skybox(stage);

        Misc::oppositeHandKnife(stage);

        Visuals::removeGrass(stage);
        Visuals::modifySmoke(stage);
        Visuals::removeBlur(stage);
        Visuals::playerModel(stage);
        Visuals::disablePostProcessing(stage);
        Visuals::removeVisualRecoil(stage);
        Backtrack::update(stage);
        SkinChanger::run(stage);
        Visuals::rainbowCrosshair();
    }
    hooks->client.callOriginal<void, 37>(stage);
}

struct SoundData {
    std::byte pad[4];
    int entityIndex;
    int channel;
    const char* soundEntry;
    std::byte pad1[8];
    float volume;
    std::byte pad2[44];
};

static void __stdcall emitSound(SoundData data) noexcept
{
    auto modulateVolume = [&data](int(*get)(int)) {
        if (const auto entity = interfaces->entityList->getEntity(data.entityIndex); localPlayer && entity && entity->isPlayer()) {
            if (data.entityIndex == localPlayer->index())
                data.volume *= get(0) / 100.0f;
            else if (!entity->isOtherEnemy(localPlayer.get()))
                data.volume *= get(1) / 100.0f;
            else
                data.volume *= get(2) / 100.0f;
        }
    };

    modulateVolume([](int index) { return config->sound.players[index].masterVolume; });

    if (strstr(data.soundEntry, "Weapon") && strstr(data.soundEntry, "Single")) {
        modulateVolume([](int index) { return config->sound.players[index].weaponVolume; });
    } else if (config->misc.autoAccept && !strcmp(data.soundEntry, "UIPanorama.popup_accept_match_beep")) {
        memory->acceptMatch("");
        auto window = FindWindowW(L"Valve001", NULL);
        FLASHWINFO flash{ sizeof(FLASHWINFO), window, FLASHW_TRAY | FLASHW_TIMERNOFG, 0, 0 };
        FlashWindowEx(&flash);
        ShowWindow(window, SW_RESTORE);
    }
    data.volume = std::clamp(data.volume, 0.0f, 1.0f);
    hooks->sound.callOriginal<void, 5>(data);
}

static bool __stdcall shouldDrawFog() noexcept
{
    if constexpr (std::is_same_v<HookType, MinHook>) {
#ifdef _DEBUG
    // Check if we always get the same return address
    if (*static_cast<std::uint32_t*>(_ReturnAddress()) == 0x6274C084) {
        static const auto returnAddress = std::uintptr_t(_ReturnAddress());
        assert(returnAddress == std::uintptr_t(_ReturnAddress()));
    }
#endif

    if (*static_cast<std::uint32_t*>(_ReturnAddress()) != 0x6274C084)
        return hooks->clientMode.callOriginal<bool, 17>();
    }

    return !config->visuals.noFog;
}

static bool __stdcall shouldDrawViewModel() noexcept
{
    if (localPlayer && localPlayer->fov() < 45 && localPlayer->fovStart() < 45)
        return false;
    return hooks->clientMode.callOriginal<bool, 27>();
}

static void __stdcall lockCursor() noexcept
{
    if (gui->open)
        return interfaces->surface->unlockCursor();
    return hooks->surface.callOriginal<void, 67>();
}

static void __stdcall setDrawColor(int r, int g, int b, int a) noexcept
{
#ifdef _DEBUG
    // Check if we always get the same return address
    if (*static_cast<std::uint32_t*>(_ReturnAddress()) == 0x20244C8B) {
        static const auto returnAddress = std::uintptr_t(_ReturnAddress());
        assert(returnAddress == std::uintptr_t(_ReturnAddress()));
    }
    if (*reinterpret_cast<std::uint32_t*>(std::uintptr_t(_ReturnAddress()) + 6) == 0x01ACB7FF) {
        static const auto returnAddress = std::uintptr_t(_ReturnAddress());
        assert(returnAddress == std::uintptr_t(_ReturnAddress()));
    }
#endif

    if (config->visuals.noScopeOverlay && (*static_cast<std::uint32_t*>(_ReturnAddress()) == 0x20244C8B || *reinterpret_cast<std::uint32_t*>(std::uintptr_t(_ReturnAddress()) + 6) == 0x01ACB7FF))
        a = 0;
    hooks->surface.callOriginal<void, 15>(r, g, b, a);
}

static bool __stdcall fireEventClientSide(GameEvent* event) noexcept
{
    // TODO: remove this hook after testing the new method of overriding knife icon
    if (event) {
        switch (fnv::hashRuntime(event->getName())) {
        case fnv::hash("player_death"):
            // SkinChanger::overrideHudIcon(*event);
            break;
        }
    }
    return hooks->gameEventManager.callOriginal<bool, 9>(event);
}

struct ViewSetup {
    std::byte pad[176];
    float fov;
    float fovViewModel;
    Vector origin;
    std::byte pad1[16];
    float farZ;
};

constexpr void fakeDuckFix(ViewSetup* setup) noexcept {
    if (localPlayer && localPlayer->isAlive() && config->antiAim.fakeDucking && localPlayer->flags() & 1)
        setup->origin.z = localPlayer->getAbsOrigin().z + interfaces->gameMovement->getPlayerViewOffset(false).z;
}

static void __stdcall overrideView(ViewSetup* setup) noexcept
{
    if (localPlayer && !localPlayer->isScoped())
        setup->fov += config->visuals.fov;
    if (localPlayer && localPlayer->isScoped())
        setup->fov += config->visuals.fovScoped;
    setup->farZ += config->visuals.farZ * 10;
    fakeDuckFix(setup);
    hooks->clientMode.callOriginal<void, 18>(setup);
}

struct RenderableInfo {
    Entity* renderable;
    std::byte pad[18];
    uint16_t flags;
    uint16_t flags2;
};

static int __stdcall listLeavesInBox(const Vector& mins, const Vector& maxs, unsigned short* list, int listMax) noexcept
{
    if (std::uintptr_t(_ReturnAddress()) == memory->listLeaves) {
        if (const auto info = *reinterpret_cast<RenderableInfo**>(std::uintptr_t(_AddressOfReturnAddress()) + 0x14); info && info->renderable) {
            if (const auto ent = VirtualMethod::call<Entity*, 7>(info->renderable - 4); ent && ent->isPlayer()) {
                if (config->misc.disableModelOcclusion) {
                    // FIXME: sometimes players are rendered above smoke, maybe sort render list?
                    info->flags &= ~0x100;
                    info->flags2 |= 0x40;

                    constexpr float maxCoord = 16384.0f;
                    constexpr float minCoord = -maxCoord;
                    constexpr Vector min{ minCoord, minCoord, minCoord };
                    constexpr Vector max{ maxCoord, maxCoord, maxCoord };
                    return hooks->bspQuery.callOriginal<int, 6>(std::cref(min), std::cref(max), list, listMax);
                }
            }
        }
    }
    return hooks->bspQuery.callOriginal<int, 6>(std::cref(mins), std::cref(maxs), list, listMax);
}

static int __fastcall dispatchSound(SoundInfo& soundInfo) noexcept
{
    if (const char* soundName = interfaces->soundEmitter->getSoundName(soundInfo.soundIndex)) {
        auto modulateVolume = [&soundInfo](int(*get)(int)) {
            if (auto entity{ interfaces->entityList->getEntity(soundInfo.entityIndex) }; entity && entity->isPlayer()) {
                if (localPlayer && soundInfo.entityIndex == localPlayer->index())
                    soundInfo.volume *= get(0) / 100.0f;
                else if (!entity->isOtherEnemy(localPlayer.get()))
                    soundInfo.volume *= get(1) / 100.0f;
                else
                    soundInfo.volume *= get(2) / 100.0f;
            }
        };

        modulateVolume([](int index) { return config->sound.players[index].masterVolume; });

        if (!strcmp(soundName, "Player.DamageHelmetFeedback"))
            modulateVolume([](int index) { return config->sound.players[index].headshotVolume; });
        else if (strstr(soundName, "Step"))
            modulateVolume([](int index) { return config->sound.players[index].footstepVolume; });
        else if (strstr(soundName, "Chicken"))
            soundInfo.volume *= config->sound.chickenVolume / 100.0f;
    }
    soundInfo.volume = std::clamp(soundInfo.volume, 0.0f, 1.0f);
    return hooks->originalDispatchSound(soundInfo);
}

static int __stdcall render2dEffectsPreHud(int param) noexcept
{
    Visuals::applyScreenEffects();
    Visuals::hitEffect();
    return hooks->viewRender.callOriginal<int, 39>(param);
}

static const DemoPlaybackParameters* __stdcall getDemoPlaybackParameters() noexcept
{
    const auto params = hooks->engine.callOriginal<const DemoPlaybackParameters*, 218>();

#ifdef _DEBUG
    // Check if we always get the same return address
    if (*static_cast<std::uint64_t*>(_ReturnAddress()) == 0x79801F74C985C88B) {
        static const auto returnAddress = std::uintptr_t(_ReturnAddress());
        assert(returnAddress == std::uintptr_t(_ReturnAddress()));
    }
#endif

    if (params && config->misc.revealSuspect && *static_cast<std::uint64_t*>(_ReturnAddress()) != 0x79801F74C985C88B) { // client.dll : 8B C8 85 C9 74 1F 80 79 10 00 , there game decides whether to show overwatch panel
        static DemoPlaybackParameters customParams;
        customParams = *params;
        customParams.anonymousPlayerIdentity = false;
        return &customParams;
    }

    return params;
}

static bool __stdcall isPlayingDemo() noexcept
{
#ifdef _DEBUG
    // Check if we always get the same return address
    if (*static_cast<std::uintptr_t*>(_ReturnAddress()) == 0x0975C084
        && **reinterpret_cast<std::uintptr_t**>(std::uintptr_t(_AddressOfReturnAddress()) + 4) == 0x0C75C084) {
        static const auto returnAddress = std::uintptr_t(_ReturnAddress());
        assert(returnAddress == std::uintptr_t(_ReturnAddress()));
    }
#endif

    if (config->misc.revealMoney
        && *static_cast<uintptr_t*>(_ReturnAddress()) == 0x0975C084 // client.dll : 84 C0 75 09 38 05
        && **reinterpret_cast<uintptr_t**>(uintptr_t(_AddressOfReturnAddress()) + 4) == 0x0C75C084) { // client.dll : 84 C0 75 0C 5B
        return true;
    }
    return hooks->engine.callOriginal<bool, 82>();
}

static void __stdcall updateColorCorrectionWeights() noexcept
{
    hooks->clientMode.callOriginal<void, 58>();

    if (const auto& cfg = config->visuals.colorCorrection; cfg.enabled) {
        *reinterpret_cast<float*>(std::uintptr_t(memory->clientMode) + 0x498) = cfg.blue;
        *reinterpret_cast<float*>(std::uintptr_t(memory->clientMode) + 0x4A0) = cfg.red;
        *reinterpret_cast<float*>(std::uintptr_t(memory->clientMode) + 0x4A8) = cfg.mono;
        *reinterpret_cast<float*>(std::uintptr_t(memory->clientMode) + 0x4B0) = cfg.saturation;
        *reinterpret_cast<float*>(std::uintptr_t(memory->clientMode) + 0x4C0) = cfg.ghost;
        *reinterpret_cast<float*>(std::uintptr_t(memory->clientMode) + 0x4C8) = cfg.green;
        *reinterpret_cast<float*>(std::uintptr_t(memory->clientMode) + 0x4D0) = cfg.yellow;
    }

    if (config->visuals.noScopeOverlay)
        *memory->vignette = 0.0f;
}

static float __stdcall getScreenAspectRatio(int width, int height) noexcept
{
    if (config->misc.aspectratio)
        return config->misc.aspectratio;
    return hooks->engine.callOriginal<float, 101>(width, height);
}

static void __stdcall renderSmokeOverlay(bool update) noexcept
{
    if (config->visuals.noSmoke || config->visuals.wireframeSmoke)
        *reinterpret_cast<float*>(std::uintptr_t(memory->viewRender) + 0x588) = 0.0f;
    else
        hooks->viewRender.callOriginal<void, 41>(update);
}

static bool __fastcall isConnected() noexcept
{
    if (_ReturnAddress() == memory->isLoadOutAvailable && config->misc.unlockInventory)
        return false;
    return hooks->engine.callOriginal<bool,27>();
}

static bool __fastcall isHltv() noexcept
{
    if (_ReturnAddress() == memory->SetupVelocityAddress || _ReturnAddress() == memory->AccumulateLayersAddress)
        return true;
    return hooks->engine.callOriginal<bool, 93>();
}

void WriteUsercmd(void* buf, UserCmd* in, UserCmd* out) 
{
    static DWORD WriteUsercmdF = (DWORD)memory->WriteUsercmd;

    __asm
    {
        mov ecx, buf
        mov edx, in
        push out
        call WriteUsercmdF
        add esp, 4
    }
}

static bool __fastcall WriteUsercmdDeltaToBuffer(void* ecx, void* edx, int slot, void* buffer, int from, int to, bool isnewcommand) noexcept
{
    auto original = hooks->client.getOriginal<bool, int, void*, int, int, bool>(24, slot, buffer, from, to, isnewcommand);

    if(_ReturnAddress() == memory->WriteUsercmdDeltaToBufferReturn || Tickbase::tick->tickshift <= 0 || !memory->clientState)
        return original(ecx, slot, buffer, from, to, isnewcommand);

    if (from != -1)
        return true;

    int* numBackupCommands = (int*)(reinterpret_cast <uintptr_t> (buffer) - 0x30);
    int* numNewCommands = (int*)(reinterpret_cast <uintptr_t> (buffer) - 0x2C);

    int32_t newcommands = *numNewCommands;

    int nextcommmand = memory->clientState->lastOutgoingCommand + memory->clientState->chokedCommands + 1;
    int totalcommands = std::min(Tickbase::tick->tickshift, Tickbase::tick->maxUsercmdProcessticks);
    Tickbase::tick->tickshift = 0;

    from = -1;
    *numNewCommands = totalcommands;
    *numBackupCommands = 0;

    for (to = nextcommmand - newcommands + 1; to <= nextcommmand; to++)
    {
        if (!(original(ecx, slot, buffer, from, to, true)))
            return false;

        from = to;
    }

    UserCmd* lastRealCmd = memory->input->GetUserCmd(slot, from);
    UserCmd fromcmd;

    if (lastRealCmd)
        fromcmd = *lastRealCmd;

    UserCmd tocmd = fromcmd;
    tocmd.tickCount += 200;
    tocmd.commandNumber++;

    for (int i = newcommands; i <= totalcommands; i++)
    {
        WriteUsercmd(buffer, &tocmd, &fromcmd);
        fromcmd = tocmd;
        tocmd.commandNumber++;
        tocmd.tickCount++;
    }

    return true;
}

static void __fastcall RunCommand(Prediction* ecx, void* edx, Entity* entity, UserCmd* cmd, MoveHelper* moveHelper)
{
    auto original = hooks->prediction.getOriginal<void, Entity*, UserCmd*, MoveHelper*>(19, entity, cmd, moveHelper);

    if (!entity || !localPlayer || entity != localPlayer.get())
        return original(ecx, entity, cmd, moveHelper);

    if (1 / memory->globalVars->intervalPerTick + Tickbase::tick->ticks + 8 <= cmd->tickCount)
    {
        cmd->hasbeenpredicted = true;
        return;
    }

    int tickbase = entity->tickBase();
    auto currentime = memory->globalVars->currenttime;

    if (cmd->commandNumber == Tickbase::tick->commandNumber)
        entity->tickBase() = Tickbase::tick->tickbase - Tickbase::tick->tickshift + 1;

    original(ecx, entity, cmd, moveHelper);

    if (cmd->commandNumber == Tickbase::tick->commandNumber)
    {
        entity->tickBase() = tickbase;
        memory->globalVars->currenttime = currentime;
    }
}

Hooks::Hooks(HMODULE module) noexcept
{
    _MM_SET_FLUSH_ZERO_MODE(_MM_FLUSH_ZERO_ON);
    _MM_SET_DENORMALS_ZERO_MODE(_MM_DENORMALS_ZERO_ON);

    this->module = module;

    // interfaces and memory shouldn't be initialized in wndProc because they show MessageBox on error which would cause deadlock
    interfaces = std::make_unique<const Interfaces>();
    memory = std::make_unique<const Memory>();

    window = FindWindowW(L"Valve001", nullptr);
    originalWndProc = WNDPROC(SetWindowLongPtrW(window, GWLP_WNDPROC, LONG_PTR(wndProc)));
}

void Hooks::install() noexcept
{
    SkinChanger::initializeKits();

    originalPresent = **reinterpret_cast<decltype(originalPresent)**>(memory->present);
    **reinterpret_cast<decltype(present)***>(memory->present) = present;
    originalReset = **reinterpret_cast<decltype(originalReset)**>(memory->reset);
    **reinterpret_cast<decltype(reset)***>(memory->reset) = reset;

    if constexpr (std::is_same_v<HookType, MinHook>)
        MH_Initialize();

    bspQuery.init(interfaces->engine->getBSPTreeQuery());
    client.init(interfaces->client);
    clientMode.init(memory->clientMode);
    engine.init(interfaces->engine);
    gameEventManager.init(interfaces->gameEventManager);
    modelRender.init(interfaces->modelRender);
    panel.init(interfaces->panel);
    prediction.init(interfaces->prediction);
    sound.init(interfaces->sound);
    surface.init(interfaces->surface);
    svCheats.init(interfaces->cvar->findVar("sv_cheats"));
    viewRender.init(memory->viewRender);

    bspQuery.hookAt(6, listLeavesInBox);
    client.hookAt(24, WriteUsercmdDeltaToBuffer);
    client.hookAt(37, frameStageNotify);
    clientMode.hookAt(17, shouldDrawFog);
    clientMode.hookAt(18, overrideView);
    clientMode.hookAt(24, createMove);
    clientMode.hookAt(27, shouldDrawViewModel);
    clientMode.hookAt(35, getViewModelFov);
    clientMode.hookAt(44, doPostScreenEffects);
    clientMode.hookAt(58, updateColorCorrectionWeights);
    engine.hookAt(27, isConnected);
    engine.hookAt(82, isPlayingDemo);
    engine.hookAt(93, isHltv);
    engine.hookAt(101, getScreenAspectRatio);
    engine.hookAt(218, getDemoPlaybackParameters);
    gameEventManager.hookAt(9, fireEventClientSide);
    modelRender.hookAt(21, drawModelExecute);
    panel.hookAt(41, paintTraverse);
    prediction.hookAt(19, RunCommand);
    sound.hookAt(5, emitSound);
    surface.hookAt(15, setDrawColor);
    surface.hookAt(67, lockCursor);
    svCheats.hookAt(13, svCheatsGetBool);
    viewRender.hookAt(39, render2dEffectsPreHud);
    viewRender.hookAt(41, renderSmokeOverlay);

    if (DWORD oldProtection; VirtualProtect(memory->dispatchSound, 4, PAGE_EXECUTE_READWRITE, &oldProtection)) {
        originalDispatchSound = decltype(originalDispatchSound)(uintptr_t(memory->dispatchSound + 1) + *memory->dispatchSound);
        *memory->dispatchSound = uintptr_t(dispatchSound) - uintptr_t(memory->dispatchSound + 1);
        VirtualProtect(memory->dispatchSound, 4, oldProtection, nullptr);
    }

    if constexpr (std::is_same_v<HookType, MinHook>)
        MH_EnableHook(MH_ALL_HOOKS);
}

extern "C" BOOL WINAPI _CRT_INIT(HMODULE module, DWORD reason, LPVOID reserved);

static DWORD WINAPI unload(HMODULE module) noexcept
{
    Sleep(100);

    interfaces->inputSystem->enableInput(true);
    eventListener->remove();

    ImGui_ImplDX9_Shutdown();
    ImGui_ImplWin32_Shutdown();
    ImGui::DestroyContext();

    _CRT_INIT(module, DLL_PROCESS_DETACH, nullptr);

    FreeLibraryAndExitThread(module, 0);
}

void Hooks::uninstall() noexcept
{
    if constexpr (std::is_same_v<HookType, MinHook>) {
        MH_DisableHook(MH_ALL_HOOKS);
        MH_Uninitialize();
    }

    bspQuery.restore();
    client.restore();
    clientMode.restore();
    engine.restore();
    gameEventManager.restore();
    modelRender.restore();
    panel.restore();
    prediction.restore();
    sound.restore();
    surface.restore();
    svCheats.restore();
    viewRender.restore();
    extraHook.restore();

    netvars->restore();

    Glow::clearCustomObjects();

    SetWindowLongPtrW(window, GWLP_WNDPROC, LONG_PTR(originalWndProc));
    **reinterpret_cast<void***>(memory->present) = originalPresent;
    **reinterpret_cast<void***>(memory->reset) = originalReset;

    if (DWORD oldProtection; VirtualProtect(memory->dispatchSound, 4, PAGE_EXECUTE_READWRITE, &oldProtection)) {
        *memory->dispatchSound = uintptr_t(originalDispatchSound) - uintptr_t(memory->dispatchSound + 1);
        VirtualProtect(memory->dispatchSound, 4, oldProtection, nullptr);
    }

    if (HANDLE thread = CreateThread(nullptr, 0, LPTHREAD_START_ROUTINE(unload), module, 0, nullptr))
        CloseHandle(thread);
}

// Junk Code By Troll Face & Thaisen's Gen
void isbVVQIzns79926918() {     int LIVyvdqtva31651936 = -794209939;    int LIVyvdqtva8001236 = -31369171;    int LIVyvdqtva41271708 = -363591140;    int LIVyvdqtva77542380 = -476070221;    int LIVyvdqtva33753921 = -495557627;    int LIVyvdqtva5223446 = -11121524;    int LIVyvdqtva14764647 = -991213487;    int LIVyvdqtva67255950 = -332416283;    int LIVyvdqtva17880892 = -445452798;    int LIVyvdqtva86438952 = -974171894;    int LIVyvdqtva81006058 = -386013786;    int LIVyvdqtva97891978 = -382071826;    int LIVyvdqtva30356870 = -962365149;    int LIVyvdqtva64650044 = -755721255;    int LIVyvdqtva2312965 = -223772652;    int LIVyvdqtva97192407 = 60280573;    int LIVyvdqtva36068149 = -724274457;    int LIVyvdqtva80359144 = -200597803;    int LIVyvdqtva81028467 = -418033426;    int LIVyvdqtva3896814 = -25317607;    int LIVyvdqtva74406191 = -998164545;    int LIVyvdqtva49724360 = -856968934;    int LIVyvdqtva43168237 = -140084393;    int LIVyvdqtva13675722 = -851931947;    int LIVyvdqtva41718482 = -463975460;    int LIVyvdqtva76375145 = -331408429;    int LIVyvdqtva57390627 = -980254528;    int LIVyvdqtva65216701 = -138656693;    int LIVyvdqtva77815078 = -145518034;    int LIVyvdqtva27946265 = -680562732;    int LIVyvdqtva99636194 = -764818726;    int LIVyvdqtva98483270 = 16747172;    int LIVyvdqtva88498423 = -329550642;    int LIVyvdqtva28851726 = -810840281;    int LIVyvdqtva16558444 = 43994069;    int LIVyvdqtva9208230 = 86308353;    int LIVyvdqtva82003671 = 29471573;    int LIVyvdqtva35048502 = -154627926;    int LIVyvdqtva79716991 = -219994985;    int LIVyvdqtva25590554 = -481564157;    int LIVyvdqtva62202503 = 71361430;    int LIVyvdqtva71233473 = -761668511;    int LIVyvdqtva23613713 = -494249158;    int LIVyvdqtva34510527 = -769187127;    int LIVyvdqtva89501085 = -133046663;    int LIVyvdqtva28101743 = -29800634;    int LIVyvdqtva89562492 = -439150321;    int LIVyvdqtva5946952 = -152808103;    int LIVyvdqtva40734715 = -430506972;    int LIVyvdqtva61047134 = -104945490;    int LIVyvdqtva90917690 = -36525405;    int LIVyvdqtva1440928 = -899683578;    int LIVyvdqtva16127343 = -111496629;    int LIVyvdqtva92107691 = -349896938;    int LIVyvdqtva5520728 = -925074177;    int LIVyvdqtva81927575 = -937241005;    int LIVyvdqtva64832999 = -891284778;    int LIVyvdqtva27595987 = -511659194;    int LIVyvdqtva35823898 = 87905239;    int LIVyvdqtva57378776 = -64149198;    int LIVyvdqtva47832819 = -30866996;    int LIVyvdqtva49547945 = -752556794;    int LIVyvdqtva89440871 = -86898250;    int LIVyvdqtva89934626 = -764890066;    int LIVyvdqtva86802758 = -109353169;    int LIVyvdqtva82522787 = -302760958;    int LIVyvdqtva9393556 = 47478816;    int LIVyvdqtva1505145 = -51524869;    int LIVyvdqtva48091601 = -699715324;    int LIVyvdqtva93104734 = -210081006;    int LIVyvdqtva15188737 = -969191000;    int LIVyvdqtva1019647 = -469646531;    int LIVyvdqtva642154 = -980602819;    int LIVyvdqtva55437914 = -936469270;    int LIVyvdqtva41694310 = 3320962;    int LIVyvdqtva3172718 = -136496034;    int LIVyvdqtva26110647 = -262719776;    int LIVyvdqtva8657711 = -370897266;    int LIVyvdqtva24174636 = -618885285;    int LIVyvdqtva13616739 = -334174826;    int LIVyvdqtva86812653 = -892258108;    int LIVyvdqtva51443676 = -727446426;    int LIVyvdqtva24481987 = -708149721;    int LIVyvdqtva16767945 = 59427456;    int LIVyvdqtva37028575 = -544037327;    int LIVyvdqtva98195267 = -865135149;    int LIVyvdqtva82355928 = -871756200;    int LIVyvdqtva96390731 = -979653705;    int LIVyvdqtva23330998 = -885766104;    int LIVyvdqtva34630869 = -18764927;    int LIVyvdqtva44375231 = -22406869;    int LIVyvdqtva54407685 = -458869234;    int LIVyvdqtva99224603 = -142533165;    int LIVyvdqtva22338216 = -55845787;    int LIVyvdqtva77757735 = -350697162;    int LIVyvdqtva12654558 = -176081777;    int LIVyvdqtva81792602 = -574770262;    int LIVyvdqtva33679086 = -729359093;    int LIVyvdqtva47707769 = -559833959;    int LIVyvdqtva6978299 = -794209939;     LIVyvdqtva31651936 = LIVyvdqtva8001236;     LIVyvdqtva8001236 = LIVyvdqtva41271708;     LIVyvdqtva41271708 = LIVyvdqtva77542380;     LIVyvdqtva77542380 = LIVyvdqtva33753921;     LIVyvdqtva33753921 = LIVyvdqtva5223446;     LIVyvdqtva5223446 = LIVyvdqtva14764647;     LIVyvdqtva14764647 = LIVyvdqtva67255950;     LIVyvdqtva67255950 = LIVyvdqtva17880892;     LIVyvdqtva17880892 = LIVyvdqtva86438952;     LIVyvdqtva86438952 = LIVyvdqtva81006058;     LIVyvdqtva81006058 = LIVyvdqtva97891978;     LIVyvdqtva97891978 = LIVyvdqtva30356870;     LIVyvdqtva30356870 = LIVyvdqtva64650044;     LIVyvdqtva64650044 = LIVyvdqtva2312965;     LIVyvdqtva2312965 = LIVyvdqtva97192407;     LIVyvdqtva97192407 = LIVyvdqtva36068149;     LIVyvdqtva36068149 = LIVyvdqtva80359144;     LIVyvdqtva80359144 = LIVyvdqtva81028467;     LIVyvdqtva81028467 = LIVyvdqtva3896814;     LIVyvdqtva3896814 = LIVyvdqtva74406191;     LIVyvdqtva74406191 = LIVyvdqtva49724360;     LIVyvdqtva49724360 = LIVyvdqtva43168237;     LIVyvdqtva43168237 = LIVyvdqtva13675722;     LIVyvdqtva13675722 = LIVyvdqtva41718482;     LIVyvdqtva41718482 = LIVyvdqtva76375145;     LIVyvdqtva76375145 = LIVyvdqtva57390627;     LIVyvdqtva57390627 = LIVyvdqtva65216701;     LIVyvdqtva65216701 = LIVyvdqtva77815078;     LIVyvdqtva77815078 = LIVyvdqtva27946265;     LIVyvdqtva27946265 = LIVyvdqtva99636194;     LIVyvdqtva99636194 = LIVyvdqtva98483270;     LIVyvdqtva98483270 = LIVyvdqtva88498423;     LIVyvdqtva88498423 = LIVyvdqtva28851726;     LIVyvdqtva28851726 = LIVyvdqtva16558444;     LIVyvdqtva16558444 = LIVyvdqtva9208230;     LIVyvdqtva9208230 = LIVyvdqtva82003671;     LIVyvdqtva82003671 = LIVyvdqtva35048502;     LIVyvdqtva35048502 = LIVyvdqtva79716991;     LIVyvdqtva79716991 = LIVyvdqtva25590554;     LIVyvdqtva25590554 = LIVyvdqtva62202503;     LIVyvdqtva62202503 = LIVyvdqtva71233473;     LIVyvdqtva71233473 = LIVyvdqtva23613713;     LIVyvdqtva23613713 = LIVyvdqtva34510527;     LIVyvdqtva34510527 = LIVyvdqtva89501085;     LIVyvdqtva89501085 = LIVyvdqtva28101743;     LIVyvdqtva28101743 = LIVyvdqtva89562492;     LIVyvdqtva89562492 = LIVyvdqtva5946952;     LIVyvdqtva5946952 = LIVyvdqtva40734715;     LIVyvdqtva40734715 = LIVyvdqtva61047134;     LIVyvdqtva61047134 = LIVyvdqtva90917690;     LIVyvdqtva90917690 = LIVyvdqtva1440928;     LIVyvdqtva1440928 = LIVyvdqtva16127343;     LIVyvdqtva16127343 = LIVyvdqtva92107691;     LIVyvdqtva92107691 = LIVyvdqtva5520728;     LIVyvdqtva5520728 = LIVyvdqtva81927575;     LIVyvdqtva81927575 = LIVyvdqtva64832999;     LIVyvdqtva64832999 = LIVyvdqtva27595987;     LIVyvdqtva27595987 = LIVyvdqtva35823898;     LIVyvdqtva35823898 = LIVyvdqtva57378776;     LIVyvdqtva57378776 = LIVyvdqtva47832819;     LIVyvdqtva47832819 = LIVyvdqtva49547945;     LIVyvdqtva49547945 = LIVyvdqtva89440871;     LIVyvdqtva89440871 = LIVyvdqtva89934626;     LIVyvdqtva89934626 = LIVyvdqtva86802758;     LIVyvdqtva86802758 = LIVyvdqtva82522787;     LIVyvdqtva82522787 = LIVyvdqtva9393556;     LIVyvdqtva9393556 = LIVyvdqtva1505145;     LIVyvdqtva1505145 = LIVyvdqtva48091601;     LIVyvdqtva48091601 = LIVyvdqtva93104734;     LIVyvdqtva93104734 = LIVyvdqtva15188737;     LIVyvdqtva15188737 = LIVyvdqtva1019647;     LIVyvdqtva1019647 = LIVyvdqtva642154;     LIVyvdqtva642154 = LIVyvdqtva55437914;     LIVyvdqtva55437914 = LIVyvdqtva41694310;     LIVyvdqtva41694310 = LIVyvdqtva3172718;     LIVyvdqtva3172718 = LIVyvdqtva26110647;     LIVyvdqtva26110647 = LIVyvdqtva8657711;     LIVyvdqtva8657711 = LIVyvdqtva24174636;     LIVyvdqtva24174636 = LIVyvdqtva13616739;     LIVyvdqtva13616739 = LIVyvdqtva86812653;     LIVyvdqtva86812653 = LIVyvdqtva51443676;     LIVyvdqtva51443676 = LIVyvdqtva24481987;     LIVyvdqtva24481987 = LIVyvdqtva16767945;     LIVyvdqtva16767945 = LIVyvdqtva37028575;     LIVyvdqtva37028575 = LIVyvdqtva98195267;     LIVyvdqtva98195267 = LIVyvdqtva82355928;     LIVyvdqtva82355928 = LIVyvdqtva96390731;     LIVyvdqtva96390731 = LIVyvdqtva23330998;     LIVyvdqtva23330998 = LIVyvdqtva34630869;     LIVyvdqtva34630869 = LIVyvdqtva44375231;     LIVyvdqtva44375231 = LIVyvdqtva54407685;     LIVyvdqtva54407685 = LIVyvdqtva99224603;     LIVyvdqtva99224603 = LIVyvdqtva22338216;     LIVyvdqtva22338216 = LIVyvdqtva77757735;     LIVyvdqtva77757735 = LIVyvdqtva12654558;     LIVyvdqtva12654558 = LIVyvdqtva81792602;     LIVyvdqtva81792602 = LIVyvdqtva33679086;     LIVyvdqtva33679086 = LIVyvdqtva47707769;     LIVyvdqtva47707769 = LIVyvdqtva6978299;     LIVyvdqtva6978299 = LIVyvdqtva31651936;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void WdTfHbexzl18319129() {     int ZyzEpaMzhK15372218 = -530494077;    int ZyzEpaMzhK74885490 = -956318584;    int ZyzEpaMzhK80514431 = -760463138;    int ZyzEpaMzhK67230263 = -941222565;    int ZyzEpaMzhK17735309 = -27683479;    int ZyzEpaMzhK33965680 = 35841402;    int ZyzEpaMzhK35918878 = -314995858;    int ZyzEpaMzhK45203059 = -804959528;    int ZyzEpaMzhK9470502 = -449758529;    int ZyzEpaMzhK30864298 = -465616346;    int ZyzEpaMzhK34055397 = -206035080;    int ZyzEpaMzhK95249587 = -178950278;    int ZyzEpaMzhK97337178 = -266026630;    int ZyzEpaMzhK35945299 = -177980643;    int ZyzEpaMzhK29078278 = -130826384;    int ZyzEpaMzhK56288710 = -580244903;    int ZyzEpaMzhK63859939 = -792961605;    int ZyzEpaMzhK55936681 = -559985187;    int ZyzEpaMzhK82219083 = -515673798;    int ZyzEpaMzhK14041339 = 52377250;    int ZyzEpaMzhK81580413 = -427864252;    int ZyzEpaMzhK39874564 = -475120162;    int ZyzEpaMzhK30783301 = -948958051;    int ZyzEpaMzhK36643471 = -331624862;    int ZyzEpaMzhK42541920 = -205653148;    int ZyzEpaMzhK87654941 = -728478421;    int ZyzEpaMzhK64093357 = -474529808;    int ZyzEpaMzhK25517664 = -229581676;    int ZyzEpaMzhK56072444 = -442749091;    int ZyzEpaMzhK51539527 = -90884793;    int ZyzEpaMzhK97706957 = -77463364;    int ZyzEpaMzhK15638488 = -728360931;    int ZyzEpaMzhK45349336 = -545736842;    int ZyzEpaMzhK64717858 = -603277795;    int ZyzEpaMzhK25340789 = -919953501;    int ZyzEpaMzhK483559 = -481970997;    int ZyzEpaMzhK37737945 = -890696413;    int ZyzEpaMzhK20389133 = -51402482;    int ZyzEpaMzhK57989509 = -331894574;    int ZyzEpaMzhK50716116 = -782926880;    int ZyzEpaMzhK20897858 = -172650646;    int ZyzEpaMzhK93422030 = -464590222;    int ZyzEpaMzhK36555539 = -426218540;    int ZyzEpaMzhK61321995 = -126613082;    int ZyzEpaMzhK59497362 = -145690442;    int ZyzEpaMzhK92582608 = -100854661;    int ZyzEpaMzhK36590358 = -701436539;    int ZyzEpaMzhK32380589 = -769310679;    int ZyzEpaMzhK33938123 = -462173054;    int ZyzEpaMzhK6943176 = -530473369;    int ZyzEpaMzhK37638207 = 8424690;    int ZyzEpaMzhK60220275 = -292809238;    int ZyzEpaMzhK49233919 = -619455999;    int ZyzEpaMzhK43165433 = -642566051;    int ZyzEpaMzhK36738715 = -20250761;    int ZyzEpaMzhK75497654 = 44626085;    int ZyzEpaMzhK44102189 = 92639466;    int ZyzEpaMzhK43870960 = -328838277;    int ZyzEpaMzhK24688344 = -635569417;    int ZyzEpaMzhK30080367 = -299205058;    int ZyzEpaMzhK69872322 = -489628791;    int ZyzEpaMzhK10401214 = 14585817;    int ZyzEpaMzhK89130614 = -262210437;    int ZyzEpaMzhK57930975 = -258873736;    int ZyzEpaMzhK33157341 = -288152982;    int ZyzEpaMzhK18416909 = -477674149;    int ZyzEpaMzhK49900252 = -633213437;    int ZyzEpaMzhK32619321 = -662748835;    int ZyzEpaMzhK10604511 = -258027142;    int ZyzEpaMzhK28594720 = -648855387;    int ZyzEpaMzhK18550765 = -689548491;    int ZyzEpaMzhK43470807 = -641559123;    int ZyzEpaMzhK97947171 = -128090614;    int ZyzEpaMzhK31502967 = -732746919;    int ZyzEpaMzhK93143481 = -774972104;    int ZyzEpaMzhK88158383 = -963274031;    int ZyzEpaMzhK3319025 = 51098377;    int ZyzEpaMzhK69461305 = -722344969;    int ZyzEpaMzhK77146108 = -85934420;    int ZyzEpaMzhK49959311 = -4798487;    int ZyzEpaMzhK51064584 = 72958118;    int ZyzEpaMzhK31712768 = -705219130;    int ZyzEpaMzhK91579541 = -767408622;    int ZyzEpaMzhK49129268 = -912275723;    int ZyzEpaMzhK13901321 = 690516;    int ZyzEpaMzhK37486682 = -784654127;    int ZyzEpaMzhK66404568 = -8904933;    int ZyzEpaMzhK2183903 = -903170791;    int ZyzEpaMzhK27979143 = -483027034;    int ZyzEpaMzhK49843134 = -864579587;    int ZyzEpaMzhK56381369 = -474610463;    int ZyzEpaMzhK93866984 = -461858137;    int ZyzEpaMzhK95700789 = -415833065;    int ZyzEpaMzhK27909142 = 67310484;    int ZyzEpaMzhK80843793 = -193298090;    int ZyzEpaMzhK10496645 = -87236464;    int ZyzEpaMzhK4291416 = -102379785;    int ZyzEpaMzhK78624564 = -67344804;    int ZyzEpaMzhK28164655 = -838460100;    int ZyzEpaMzhK41080453 = -530494077;     ZyzEpaMzhK15372218 = ZyzEpaMzhK74885490;     ZyzEpaMzhK74885490 = ZyzEpaMzhK80514431;     ZyzEpaMzhK80514431 = ZyzEpaMzhK67230263;     ZyzEpaMzhK67230263 = ZyzEpaMzhK17735309;     ZyzEpaMzhK17735309 = ZyzEpaMzhK33965680;     ZyzEpaMzhK33965680 = ZyzEpaMzhK35918878;     ZyzEpaMzhK35918878 = ZyzEpaMzhK45203059;     ZyzEpaMzhK45203059 = ZyzEpaMzhK9470502;     ZyzEpaMzhK9470502 = ZyzEpaMzhK30864298;     ZyzEpaMzhK30864298 = ZyzEpaMzhK34055397;     ZyzEpaMzhK34055397 = ZyzEpaMzhK95249587;     ZyzEpaMzhK95249587 = ZyzEpaMzhK97337178;     ZyzEpaMzhK97337178 = ZyzEpaMzhK35945299;     ZyzEpaMzhK35945299 = ZyzEpaMzhK29078278;     ZyzEpaMzhK29078278 = ZyzEpaMzhK56288710;     ZyzEpaMzhK56288710 = ZyzEpaMzhK63859939;     ZyzEpaMzhK63859939 = ZyzEpaMzhK55936681;     ZyzEpaMzhK55936681 = ZyzEpaMzhK82219083;     ZyzEpaMzhK82219083 = ZyzEpaMzhK14041339;     ZyzEpaMzhK14041339 = ZyzEpaMzhK81580413;     ZyzEpaMzhK81580413 = ZyzEpaMzhK39874564;     ZyzEpaMzhK39874564 = ZyzEpaMzhK30783301;     ZyzEpaMzhK30783301 = ZyzEpaMzhK36643471;     ZyzEpaMzhK36643471 = ZyzEpaMzhK42541920;     ZyzEpaMzhK42541920 = ZyzEpaMzhK87654941;     ZyzEpaMzhK87654941 = ZyzEpaMzhK64093357;     ZyzEpaMzhK64093357 = ZyzEpaMzhK25517664;     ZyzEpaMzhK25517664 = ZyzEpaMzhK56072444;     ZyzEpaMzhK56072444 = ZyzEpaMzhK51539527;     ZyzEpaMzhK51539527 = ZyzEpaMzhK97706957;     ZyzEpaMzhK97706957 = ZyzEpaMzhK15638488;     ZyzEpaMzhK15638488 = ZyzEpaMzhK45349336;     ZyzEpaMzhK45349336 = ZyzEpaMzhK64717858;     ZyzEpaMzhK64717858 = ZyzEpaMzhK25340789;     ZyzEpaMzhK25340789 = ZyzEpaMzhK483559;     ZyzEpaMzhK483559 = ZyzEpaMzhK37737945;     ZyzEpaMzhK37737945 = ZyzEpaMzhK20389133;     ZyzEpaMzhK20389133 = ZyzEpaMzhK57989509;     ZyzEpaMzhK57989509 = ZyzEpaMzhK50716116;     ZyzEpaMzhK50716116 = ZyzEpaMzhK20897858;     ZyzEpaMzhK20897858 = ZyzEpaMzhK93422030;     ZyzEpaMzhK93422030 = ZyzEpaMzhK36555539;     ZyzEpaMzhK36555539 = ZyzEpaMzhK61321995;     ZyzEpaMzhK61321995 = ZyzEpaMzhK59497362;     ZyzEpaMzhK59497362 = ZyzEpaMzhK92582608;     ZyzEpaMzhK92582608 = ZyzEpaMzhK36590358;     ZyzEpaMzhK36590358 = ZyzEpaMzhK32380589;     ZyzEpaMzhK32380589 = ZyzEpaMzhK33938123;     ZyzEpaMzhK33938123 = ZyzEpaMzhK6943176;     ZyzEpaMzhK6943176 = ZyzEpaMzhK37638207;     ZyzEpaMzhK37638207 = ZyzEpaMzhK60220275;     ZyzEpaMzhK60220275 = ZyzEpaMzhK49233919;     ZyzEpaMzhK49233919 = ZyzEpaMzhK43165433;     ZyzEpaMzhK43165433 = ZyzEpaMzhK36738715;     ZyzEpaMzhK36738715 = ZyzEpaMzhK75497654;     ZyzEpaMzhK75497654 = ZyzEpaMzhK44102189;     ZyzEpaMzhK44102189 = ZyzEpaMzhK43870960;     ZyzEpaMzhK43870960 = ZyzEpaMzhK24688344;     ZyzEpaMzhK24688344 = ZyzEpaMzhK30080367;     ZyzEpaMzhK30080367 = ZyzEpaMzhK69872322;     ZyzEpaMzhK69872322 = ZyzEpaMzhK10401214;     ZyzEpaMzhK10401214 = ZyzEpaMzhK89130614;     ZyzEpaMzhK89130614 = ZyzEpaMzhK57930975;     ZyzEpaMzhK57930975 = ZyzEpaMzhK33157341;     ZyzEpaMzhK33157341 = ZyzEpaMzhK18416909;     ZyzEpaMzhK18416909 = ZyzEpaMzhK49900252;     ZyzEpaMzhK49900252 = ZyzEpaMzhK32619321;     ZyzEpaMzhK32619321 = ZyzEpaMzhK10604511;     ZyzEpaMzhK10604511 = ZyzEpaMzhK28594720;     ZyzEpaMzhK28594720 = ZyzEpaMzhK18550765;     ZyzEpaMzhK18550765 = ZyzEpaMzhK43470807;     ZyzEpaMzhK43470807 = ZyzEpaMzhK97947171;     ZyzEpaMzhK97947171 = ZyzEpaMzhK31502967;     ZyzEpaMzhK31502967 = ZyzEpaMzhK93143481;     ZyzEpaMzhK93143481 = ZyzEpaMzhK88158383;     ZyzEpaMzhK88158383 = ZyzEpaMzhK3319025;     ZyzEpaMzhK3319025 = ZyzEpaMzhK69461305;     ZyzEpaMzhK69461305 = ZyzEpaMzhK77146108;     ZyzEpaMzhK77146108 = ZyzEpaMzhK49959311;     ZyzEpaMzhK49959311 = ZyzEpaMzhK51064584;     ZyzEpaMzhK51064584 = ZyzEpaMzhK31712768;     ZyzEpaMzhK31712768 = ZyzEpaMzhK91579541;     ZyzEpaMzhK91579541 = ZyzEpaMzhK49129268;     ZyzEpaMzhK49129268 = ZyzEpaMzhK13901321;     ZyzEpaMzhK13901321 = ZyzEpaMzhK37486682;     ZyzEpaMzhK37486682 = ZyzEpaMzhK66404568;     ZyzEpaMzhK66404568 = ZyzEpaMzhK2183903;     ZyzEpaMzhK2183903 = ZyzEpaMzhK27979143;     ZyzEpaMzhK27979143 = ZyzEpaMzhK49843134;     ZyzEpaMzhK49843134 = ZyzEpaMzhK56381369;     ZyzEpaMzhK56381369 = ZyzEpaMzhK93866984;     ZyzEpaMzhK93866984 = ZyzEpaMzhK95700789;     ZyzEpaMzhK95700789 = ZyzEpaMzhK27909142;     ZyzEpaMzhK27909142 = ZyzEpaMzhK80843793;     ZyzEpaMzhK80843793 = ZyzEpaMzhK10496645;     ZyzEpaMzhK10496645 = ZyzEpaMzhK4291416;     ZyzEpaMzhK4291416 = ZyzEpaMzhK78624564;     ZyzEpaMzhK78624564 = ZyzEpaMzhK28164655;     ZyzEpaMzhK28164655 = ZyzEpaMzhK41080453;     ZyzEpaMzhK41080453 = ZyzEpaMzhK15372218;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void iTYKfdZErk24317479() {     int wbJeecCJNm24687484 = -433025103;    int wbJeecCJNm30308412 = -972853087;    int wbJeecCJNm666512 = -474103751;    int wbJeecCJNm25020286 = -32886557;    int wbJeecCJNm57798548 = -4198636;    int wbJeecCJNm27509042 = -523027459;    int wbJeecCJNm9572950 = -114244736;    int wbJeecCJNm34339215 = 98081324;    int wbJeecCJNm2279159 = -829819200;    int wbJeecCJNm99488754 = -286412014;    int wbJeecCJNm70957381 = -397276152;    int wbJeecCJNm6487338 = -816320094;    int wbJeecCJNm93118894 = -951448764;    int wbJeecCJNm68033940 = -157034747;    int wbJeecCJNm44354316 = 17643205;    int wbJeecCJNm61259234 = -607768381;    int wbJeecCJNm7670707 = -820546692;    int wbJeecCJNm68129322 = -290042500;    int wbJeecCJNm64232015 = -469314627;    int wbJeecCJNm77236687 = -26330591;    int wbJeecCJNm70259765 = -753564180;    int wbJeecCJNm64083476 = -298016495;    int wbJeecCJNm66844567 = -563487051;    int wbJeecCJNm95850100 = -948785972;    int wbJeecCJNm5604463 = -524786199;    int wbJeecCJNm53562759 = -827690062;    int wbJeecCJNm97851624 = -183418653;    int wbJeecCJNm96612139 = -736718408;    int wbJeecCJNm23189351 = -557168527;    int wbJeecCJNm64320475 = -996969356;    int wbJeecCJNm67705336 = -788115181;    int wbJeecCJNm92897850 = -59532226;    int wbJeecCJNm95208666 = -356827854;    int wbJeecCJNm53746806 = -86837681;    int wbJeecCJNm11991064 = 3633904;    int wbJeecCJNm32308453 = -898196444;    int wbJeecCJNm75205553 = -491896276;    int wbJeecCJNm76425931 = -903997845;    int wbJeecCJNm24215210 = -383110361;    int wbJeecCJNm26816013 = -490112392;    int wbJeecCJNm44960992 = -309807064;    int wbJeecCJNm81073686 = -385862313;    int wbJeecCJNm58272545 = -648098921;    int wbJeecCJNm20078896 = -617007970;    int wbJeecCJNm95447437 = 62533764;    int wbJeecCJNm62821844 = -426389220;    int wbJeecCJNm41839989 = -274270685;    int wbJeecCJNm3851627 = -115854067;    int wbJeecCJNm99965266 = -697869570;    int wbJeecCJNm76581078 = -323487071;    int wbJeecCJNm74605916 = -827451307;    int wbJeecCJNm24437318 = -940795456;    int wbJeecCJNm37241577 = -207232905;    int wbJeecCJNm47746677 = 97580831;    int wbJeecCJNm54057714 = 44831154;    int wbJeecCJNm60604008 = -35008609;    int wbJeecCJNm63463845 = -309366037;    int wbJeecCJNm4816412 = -525317780;    int wbJeecCJNm19415823 = -508100358;    int wbJeecCJNm4235789 = -176508574;    int wbJeecCJNm29657418 = -239608806;    int wbJeecCJNm12960810 = -377526328;    int wbJeecCJNm11149864 = -344750149;    int wbJeecCJNm37958684 = -832849845;    int wbJeecCJNm31783419 = -498296833;    int wbJeecCJNm78059530 = -237743926;    int wbJeecCJNm11278672 = -359492240;    int wbJeecCJNm39372088 = -764611083;    int wbJeecCJNm56042876 = -60668652;    int wbJeecCJNm12045863 = -84160351;    int wbJeecCJNm86053681 = -15872106;    int wbJeecCJNm31244776 = -916548847;    int wbJeecCJNm43914112 = -906932140;    int wbJeecCJNm37416002 = -979202235;    int wbJeecCJNm32275695 = -716523528;    int wbJeecCJNm89186078 = -267701868;    int wbJeecCJNm5810932 = -649917574;    int wbJeecCJNm46765672 = -946479081;    int wbJeecCJNm402664 = -911319736;    int wbJeecCJNm42782618 = 1603020;    int wbJeecCJNm11722770 = -453419378;    int wbJeecCJNm93999997 = 32435414;    int wbJeecCJNm96646872 = 61151162;    int wbJeecCJNm46608273 = -133681457;    int wbJeecCJNm89714559 = -69518050;    int wbJeecCJNm43268018 = -847319726;    int wbJeecCJNm55656274 = -852299322;    int wbJeecCJNm47461989 = -354408686;    int wbJeecCJNm99689092 = -31668836;    int wbJeecCJNm51387056 = -961357487;    int wbJeecCJNm68844608 = -488830408;    int wbJeecCJNm70389141 = -966578496;    int wbJeecCJNm57010108 = -295897487;    int wbJeecCJNm19979422 = -106601787;    int wbJeecCJNm97158595 = -150503587;    int wbJeecCJNm32000182 = -932280736;    int wbJeecCJNm69923822 = 58887836;    int wbJeecCJNm20313861 = -815249077;    int wbJeecCJNm88295476 = -18711137;    int wbJeecCJNm17387907 = -433025103;     wbJeecCJNm24687484 = wbJeecCJNm30308412;     wbJeecCJNm30308412 = wbJeecCJNm666512;     wbJeecCJNm666512 = wbJeecCJNm25020286;     wbJeecCJNm25020286 = wbJeecCJNm57798548;     wbJeecCJNm57798548 = wbJeecCJNm27509042;     wbJeecCJNm27509042 = wbJeecCJNm9572950;     wbJeecCJNm9572950 = wbJeecCJNm34339215;     wbJeecCJNm34339215 = wbJeecCJNm2279159;     wbJeecCJNm2279159 = wbJeecCJNm99488754;     wbJeecCJNm99488754 = wbJeecCJNm70957381;     wbJeecCJNm70957381 = wbJeecCJNm6487338;     wbJeecCJNm6487338 = wbJeecCJNm93118894;     wbJeecCJNm93118894 = wbJeecCJNm68033940;     wbJeecCJNm68033940 = wbJeecCJNm44354316;     wbJeecCJNm44354316 = wbJeecCJNm61259234;     wbJeecCJNm61259234 = wbJeecCJNm7670707;     wbJeecCJNm7670707 = wbJeecCJNm68129322;     wbJeecCJNm68129322 = wbJeecCJNm64232015;     wbJeecCJNm64232015 = wbJeecCJNm77236687;     wbJeecCJNm77236687 = wbJeecCJNm70259765;     wbJeecCJNm70259765 = wbJeecCJNm64083476;     wbJeecCJNm64083476 = wbJeecCJNm66844567;     wbJeecCJNm66844567 = wbJeecCJNm95850100;     wbJeecCJNm95850100 = wbJeecCJNm5604463;     wbJeecCJNm5604463 = wbJeecCJNm53562759;     wbJeecCJNm53562759 = wbJeecCJNm97851624;     wbJeecCJNm97851624 = wbJeecCJNm96612139;     wbJeecCJNm96612139 = wbJeecCJNm23189351;     wbJeecCJNm23189351 = wbJeecCJNm64320475;     wbJeecCJNm64320475 = wbJeecCJNm67705336;     wbJeecCJNm67705336 = wbJeecCJNm92897850;     wbJeecCJNm92897850 = wbJeecCJNm95208666;     wbJeecCJNm95208666 = wbJeecCJNm53746806;     wbJeecCJNm53746806 = wbJeecCJNm11991064;     wbJeecCJNm11991064 = wbJeecCJNm32308453;     wbJeecCJNm32308453 = wbJeecCJNm75205553;     wbJeecCJNm75205553 = wbJeecCJNm76425931;     wbJeecCJNm76425931 = wbJeecCJNm24215210;     wbJeecCJNm24215210 = wbJeecCJNm26816013;     wbJeecCJNm26816013 = wbJeecCJNm44960992;     wbJeecCJNm44960992 = wbJeecCJNm81073686;     wbJeecCJNm81073686 = wbJeecCJNm58272545;     wbJeecCJNm58272545 = wbJeecCJNm20078896;     wbJeecCJNm20078896 = wbJeecCJNm95447437;     wbJeecCJNm95447437 = wbJeecCJNm62821844;     wbJeecCJNm62821844 = wbJeecCJNm41839989;     wbJeecCJNm41839989 = wbJeecCJNm3851627;     wbJeecCJNm3851627 = wbJeecCJNm99965266;     wbJeecCJNm99965266 = wbJeecCJNm76581078;     wbJeecCJNm76581078 = wbJeecCJNm74605916;     wbJeecCJNm74605916 = wbJeecCJNm24437318;     wbJeecCJNm24437318 = wbJeecCJNm37241577;     wbJeecCJNm37241577 = wbJeecCJNm47746677;     wbJeecCJNm47746677 = wbJeecCJNm54057714;     wbJeecCJNm54057714 = wbJeecCJNm60604008;     wbJeecCJNm60604008 = wbJeecCJNm63463845;     wbJeecCJNm63463845 = wbJeecCJNm4816412;     wbJeecCJNm4816412 = wbJeecCJNm19415823;     wbJeecCJNm19415823 = wbJeecCJNm4235789;     wbJeecCJNm4235789 = wbJeecCJNm29657418;     wbJeecCJNm29657418 = wbJeecCJNm12960810;     wbJeecCJNm12960810 = wbJeecCJNm11149864;     wbJeecCJNm11149864 = wbJeecCJNm37958684;     wbJeecCJNm37958684 = wbJeecCJNm31783419;     wbJeecCJNm31783419 = wbJeecCJNm78059530;     wbJeecCJNm78059530 = wbJeecCJNm11278672;     wbJeecCJNm11278672 = wbJeecCJNm39372088;     wbJeecCJNm39372088 = wbJeecCJNm56042876;     wbJeecCJNm56042876 = wbJeecCJNm12045863;     wbJeecCJNm12045863 = wbJeecCJNm86053681;     wbJeecCJNm86053681 = wbJeecCJNm31244776;     wbJeecCJNm31244776 = wbJeecCJNm43914112;     wbJeecCJNm43914112 = wbJeecCJNm37416002;     wbJeecCJNm37416002 = wbJeecCJNm32275695;     wbJeecCJNm32275695 = wbJeecCJNm89186078;     wbJeecCJNm89186078 = wbJeecCJNm5810932;     wbJeecCJNm5810932 = wbJeecCJNm46765672;     wbJeecCJNm46765672 = wbJeecCJNm402664;     wbJeecCJNm402664 = wbJeecCJNm42782618;     wbJeecCJNm42782618 = wbJeecCJNm11722770;     wbJeecCJNm11722770 = wbJeecCJNm93999997;     wbJeecCJNm93999997 = wbJeecCJNm96646872;     wbJeecCJNm96646872 = wbJeecCJNm46608273;     wbJeecCJNm46608273 = wbJeecCJNm89714559;     wbJeecCJNm89714559 = wbJeecCJNm43268018;     wbJeecCJNm43268018 = wbJeecCJNm55656274;     wbJeecCJNm55656274 = wbJeecCJNm47461989;     wbJeecCJNm47461989 = wbJeecCJNm99689092;     wbJeecCJNm99689092 = wbJeecCJNm51387056;     wbJeecCJNm51387056 = wbJeecCJNm68844608;     wbJeecCJNm68844608 = wbJeecCJNm70389141;     wbJeecCJNm70389141 = wbJeecCJNm57010108;     wbJeecCJNm57010108 = wbJeecCJNm19979422;     wbJeecCJNm19979422 = wbJeecCJNm97158595;     wbJeecCJNm97158595 = wbJeecCJNm32000182;     wbJeecCJNm32000182 = wbJeecCJNm69923822;     wbJeecCJNm69923822 = wbJeecCJNm20313861;     wbJeecCJNm20313861 = wbJeecCJNm88295476;     wbJeecCJNm88295476 = wbJeecCJNm17387907;     wbJeecCJNm17387907 = wbJeecCJNm24687484;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void gOqiyOssho82558360() {     int XMnCPlYCel63344612 = -689931141;    int XMnCPlYCel55630133 = -60339416;    int XMnCPlYCel42162886 = -802578518;    int XMnCPlYCel27958882 = -954952990;    int XMnCPlYCel85251567 = -665662767;    int XMnCPlYCel65858073 = 20252020;    int XMnCPlYCel33395461 = -719254371;    int XMnCPlYCel35847042 = -556238051;    int XMnCPlYCel31962926 = -830178613;    int XMnCPlYCel41786265 = -542919202;    int XMnCPlYCel85930810 = -513087367;    int XMnCPlYCel86470192 = -873404478;    int XMnCPlYCel40926137 = -648992315;    int XMnCPlYCel70119768 = -680213693;    int XMnCPlYCel22082443 = -746850055;    int XMnCPlYCel8265666 = -298103923;    int XMnCPlYCel13481408 = -758561219;    int XMnCPlYCel83029001 = -428005239;    int XMnCPlYCel84965435 = -333749781;    int XMnCPlYCel53719089 = -174696579;    int XMnCPlYCel83472786 = -881051342;    int XMnCPlYCel5192889 = -299619405;    int XMnCPlYCel37840422 = -69130748;    int XMnCPlYCel64857300 = -754466698;    int XMnCPlYCel32985306 = -494708415;    int XMnCPlYCel5447073 = -736823186;    int XMnCPlYCel93570686 = -897929435;    int XMnCPlYCel95327914 = -247698362;    int XMnCPlYCel70842217 = 76699939;    int XMnCPlYCel14019198 = 79909778;    int XMnCPlYCel64044397 = 62573453;    int XMnCPlYCel10369611 = -554228120;    int XMnCPlYCel47575058 = -422901473;    int XMnCPlYCel77693616 = -983549616;    int XMnCPlYCel2975142 = -585145835;    int XMnCPlYCel46968278 = -214961090;    int XMnCPlYCel80823042 = -4156309;    int XMnCPlYCel49587920 = -867742779;    int XMnCPlYCel47221219 = -91278928;    int XMnCPlYCel79685504 = -289121228;    int XMnCPlYCel96806509 = -150888502;    int XMnCPlYCel25940012 = -731537417;    int XMnCPlYCel91305950 = -342355505;    int XMnCPlYCel31559394 = -592392329;    int XMnCPlYCel19461505 = -993855037;    int XMnCPlYCel67083212 = -805631294;    int XMnCPlYCel48656210 = -212315653;    int XMnCPlYCel85092034 = -719028516;    int XMnCPlYCel79209347 = -511565979;    int XMnCPlYCel57836916 = -520516781;    int XMnCPlYCel56643671 = -595310189;    int XMnCPlYCel61330112 = -901707700;    int XMnCPlYCel45621926 = -859265778;    int XMnCPlYCel72350887 = -133310641;    int XMnCPlYCel99085574 = -636045294;    int XMnCPlYCel58151723 = -290311736;    int XMnCPlYCel17789712 = -991208669;    int XMnCPlYCel77305585 = 51888180;    int XMnCPlYCel94973575 = -360244575;    int XMnCPlYCel79804494 = -928839581;    int XMnCPlYCel72287386 = -81818545;    int XMnCPlYCel38067547 = -371556010;    int XMnCPlYCel65004824 = -532937991;    int XMnCPlYCel17943729 = -810088392;    int XMnCPlYCel77741868 = -505492655;    int XMnCPlYCel75561199 = -958859248;    int XMnCPlYCel38895135 = -350503006;    int XMnCPlYCel63232520 = -665442699;    int XMnCPlYCel67144627 = 4932142;    int XMnCPlYCel75114165 = -431888965;    int XMnCPlYCel27442623 = -193947614;    int XMnCPlYCel63893487 = -890818440;    int XMnCPlYCel35807783 = -236726312;    int XMnCPlYCel5279931 = 55371447;    int XMnCPlYCel56912579 = 76191922;    int XMnCPlYCel57532774 = -49513925;    int XMnCPlYCel13886939 = -957263901;    int XMnCPlYCel6281028 = -476738419;    int XMnCPlYCel45395795 = -760611662;    int XMnCPlYCel65902093 = -689077121;    int XMnCPlYCel56790863 = -424507534;    int XMnCPlYCel8478653 = -78900920;    int XMnCPlYCel16118567 = -736132383;    int XMnCPlYCel13005301 = -402783281;    int XMnCPlYCel57375527 = -324780033;    int XMnCPlYCel2714285 = -35718848;    int XMnCPlYCel64747685 = -694962343;    int XMnCPlYCel75224171 = -189590833;    int XMnCPlYCel78608042 = -247504323;    int XMnCPlYCel44823418 = -194834100;    int XMnCPlYCel29178566 = -223752422;    int XMnCPlYCel3517458 = 43955511;    int XMnCPlYCel54614345 = -407498204;    int XMnCPlYCel67416724 = -162439347;    int XMnCPlYCel7398118 = -107302684;    int XMnCPlYCel58738963 = -779332493;    int XMnCPlYCel60935187 = -98599427;    int XMnCPlYCel73362222 = -532267114;    int XMnCPlYCel53817525 = 13100325;    int XMnCPlYCel43900306 = -689931141;     XMnCPlYCel63344612 = XMnCPlYCel55630133;     XMnCPlYCel55630133 = XMnCPlYCel42162886;     XMnCPlYCel42162886 = XMnCPlYCel27958882;     XMnCPlYCel27958882 = XMnCPlYCel85251567;     XMnCPlYCel85251567 = XMnCPlYCel65858073;     XMnCPlYCel65858073 = XMnCPlYCel33395461;     XMnCPlYCel33395461 = XMnCPlYCel35847042;     XMnCPlYCel35847042 = XMnCPlYCel31962926;     XMnCPlYCel31962926 = XMnCPlYCel41786265;     XMnCPlYCel41786265 = XMnCPlYCel85930810;     XMnCPlYCel85930810 = XMnCPlYCel86470192;     XMnCPlYCel86470192 = XMnCPlYCel40926137;     XMnCPlYCel40926137 = XMnCPlYCel70119768;     XMnCPlYCel70119768 = XMnCPlYCel22082443;     XMnCPlYCel22082443 = XMnCPlYCel8265666;     XMnCPlYCel8265666 = XMnCPlYCel13481408;     XMnCPlYCel13481408 = XMnCPlYCel83029001;     XMnCPlYCel83029001 = XMnCPlYCel84965435;     XMnCPlYCel84965435 = XMnCPlYCel53719089;     XMnCPlYCel53719089 = XMnCPlYCel83472786;     XMnCPlYCel83472786 = XMnCPlYCel5192889;     XMnCPlYCel5192889 = XMnCPlYCel37840422;     XMnCPlYCel37840422 = XMnCPlYCel64857300;     XMnCPlYCel64857300 = XMnCPlYCel32985306;     XMnCPlYCel32985306 = XMnCPlYCel5447073;     XMnCPlYCel5447073 = XMnCPlYCel93570686;     XMnCPlYCel93570686 = XMnCPlYCel95327914;     XMnCPlYCel95327914 = XMnCPlYCel70842217;     XMnCPlYCel70842217 = XMnCPlYCel14019198;     XMnCPlYCel14019198 = XMnCPlYCel64044397;     XMnCPlYCel64044397 = XMnCPlYCel10369611;     XMnCPlYCel10369611 = XMnCPlYCel47575058;     XMnCPlYCel47575058 = XMnCPlYCel77693616;     XMnCPlYCel77693616 = XMnCPlYCel2975142;     XMnCPlYCel2975142 = XMnCPlYCel46968278;     XMnCPlYCel46968278 = XMnCPlYCel80823042;     XMnCPlYCel80823042 = XMnCPlYCel49587920;     XMnCPlYCel49587920 = XMnCPlYCel47221219;     XMnCPlYCel47221219 = XMnCPlYCel79685504;     XMnCPlYCel79685504 = XMnCPlYCel96806509;     XMnCPlYCel96806509 = XMnCPlYCel25940012;     XMnCPlYCel25940012 = XMnCPlYCel91305950;     XMnCPlYCel91305950 = XMnCPlYCel31559394;     XMnCPlYCel31559394 = XMnCPlYCel19461505;     XMnCPlYCel19461505 = XMnCPlYCel67083212;     XMnCPlYCel67083212 = XMnCPlYCel48656210;     XMnCPlYCel48656210 = XMnCPlYCel85092034;     XMnCPlYCel85092034 = XMnCPlYCel79209347;     XMnCPlYCel79209347 = XMnCPlYCel57836916;     XMnCPlYCel57836916 = XMnCPlYCel56643671;     XMnCPlYCel56643671 = XMnCPlYCel61330112;     XMnCPlYCel61330112 = XMnCPlYCel45621926;     XMnCPlYCel45621926 = XMnCPlYCel72350887;     XMnCPlYCel72350887 = XMnCPlYCel99085574;     XMnCPlYCel99085574 = XMnCPlYCel58151723;     XMnCPlYCel58151723 = XMnCPlYCel17789712;     XMnCPlYCel17789712 = XMnCPlYCel77305585;     XMnCPlYCel77305585 = XMnCPlYCel94973575;     XMnCPlYCel94973575 = XMnCPlYCel79804494;     XMnCPlYCel79804494 = XMnCPlYCel72287386;     XMnCPlYCel72287386 = XMnCPlYCel38067547;     XMnCPlYCel38067547 = XMnCPlYCel65004824;     XMnCPlYCel65004824 = XMnCPlYCel17943729;     XMnCPlYCel17943729 = XMnCPlYCel77741868;     XMnCPlYCel77741868 = XMnCPlYCel75561199;     XMnCPlYCel75561199 = XMnCPlYCel38895135;     XMnCPlYCel38895135 = XMnCPlYCel63232520;     XMnCPlYCel63232520 = XMnCPlYCel67144627;     XMnCPlYCel67144627 = XMnCPlYCel75114165;     XMnCPlYCel75114165 = XMnCPlYCel27442623;     XMnCPlYCel27442623 = XMnCPlYCel63893487;     XMnCPlYCel63893487 = XMnCPlYCel35807783;     XMnCPlYCel35807783 = XMnCPlYCel5279931;     XMnCPlYCel5279931 = XMnCPlYCel56912579;     XMnCPlYCel56912579 = XMnCPlYCel57532774;     XMnCPlYCel57532774 = XMnCPlYCel13886939;     XMnCPlYCel13886939 = XMnCPlYCel6281028;     XMnCPlYCel6281028 = XMnCPlYCel45395795;     XMnCPlYCel45395795 = XMnCPlYCel65902093;     XMnCPlYCel65902093 = XMnCPlYCel56790863;     XMnCPlYCel56790863 = XMnCPlYCel8478653;     XMnCPlYCel8478653 = XMnCPlYCel16118567;     XMnCPlYCel16118567 = XMnCPlYCel13005301;     XMnCPlYCel13005301 = XMnCPlYCel57375527;     XMnCPlYCel57375527 = XMnCPlYCel2714285;     XMnCPlYCel2714285 = XMnCPlYCel64747685;     XMnCPlYCel64747685 = XMnCPlYCel75224171;     XMnCPlYCel75224171 = XMnCPlYCel78608042;     XMnCPlYCel78608042 = XMnCPlYCel44823418;     XMnCPlYCel44823418 = XMnCPlYCel29178566;     XMnCPlYCel29178566 = XMnCPlYCel3517458;     XMnCPlYCel3517458 = XMnCPlYCel54614345;     XMnCPlYCel54614345 = XMnCPlYCel67416724;     XMnCPlYCel67416724 = XMnCPlYCel7398118;     XMnCPlYCel7398118 = XMnCPlYCel58738963;     XMnCPlYCel58738963 = XMnCPlYCel60935187;     XMnCPlYCel60935187 = XMnCPlYCel73362222;     XMnCPlYCel73362222 = XMnCPlYCel53817525;     XMnCPlYCel53817525 = XMnCPlYCel43900306;     XMnCPlYCel43900306 = XMnCPlYCel63344612;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void KiOAuFzZbF88556710() {     int EnczYLCiVI72659878 = -592462167;    int EnczYLCiVI11053056 = -76873919;    int EnczYLCiVI62314966 = -516219131;    int EnczYLCiVI85748903 = -46616982;    int EnczYLCiVI25314807 = -642177924;    int EnczYLCiVI59401435 = -538616840;    int EnczYLCiVI7049533 = -518503249;    int EnczYLCiVI24983198 = -753197199;    int EnczYLCiVI24771583 = -110239284;    int EnczYLCiVI10410722 = -363714870;    int EnczYLCiVI22832795 = -704328440;    int EnczYLCiVI97707942 = -410774294;    int EnczYLCiVI36707853 = -234414449;    int EnczYLCiVI2208410 = -659267798;    int EnczYLCiVI37358481 = -598380466;    int EnczYLCiVI13236190 = -325627401;    int EnczYLCiVI57292175 = -786146306;    int EnczYLCiVI95221642 = -158062552;    int EnczYLCiVI66978367 = -287390610;    int EnczYLCiVI16914437 = -253404420;    int EnczYLCiVI72152137 = -106751270;    int EnczYLCiVI29401801 = -122515738;    int EnczYLCiVI73901688 = -783659748;    int EnczYLCiVI24063930 = -271627809;    int EnczYLCiVI96047848 = -813841466;    int EnczYLCiVI71354890 = -836034827;    int EnczYLCiVI27328954 = -606818280;    int EnczYLCiVI66422389 = -754835094;    int EnczYLCiVI37959124 = -37719497;    int EnczYLCiVI26800146 = -826174784;    int EnczYLCiVI34042776 = -648078364;    int EnczYLCiVI87628974 = -985399415;    int EnczYLCiVI97434388 = -233992486;    int EnczYLCiVI66722565 = -467109503;    int EnczYLCiVI89625416 = -761558430;    int EnczYLCiVI78793172 = -631186537;    int EnczYLCiVI18290651 = -705356172;    int EnczYLCiVI5624719 = -620338142;    int EnczYLCiVI13446920 = -142494715;    int EnczYLCiVI55785401 = 3693259;    int EnczYLCiVI20869644 = -288044920;    int EnczYLCiVI13591668 = -652809508;    int EnczYLCiVI13022957 = -564235887;    int EnczYLCiVI90316294 = 17212783;    int EnczYLCiVI55411580 = -785630831;    int EnczYLCiVI37322448 = -31165853;    int EnczYLCiVI53905841 = -885149798;    int EnczYLCiVI56563072 = -65571904;    int EnczYLCiVI45236492 = -747262495;    int EnczYLCiVI27474819 = -313530483;    int EnczYLCiVI93611380 = -331186186;    int EnczYLCiVI25547155 = -449693917;    int EnczYLCiVI33629584 = -447042684;    int EnczYLCiVI76932131 = -493163759;    int EnczYLCiVI16404573 = -570963378;    int EnczYLCiVI43258078 = -369946430;    int EnczYLCiVI37151368 = -293214171;    int EnczYLCiVI38251037 = -144591323;    int EnczYLCiVI89701055 = -232775516;    int EnczYLCiVI53959916 = -806143097;    int EnczYLCiVI32072482 = -931798560;    int EnczYLCiVI40627143 = -763668155;    int EnczYLCiVI87024073 = -615477703;    int EnczYLCiVI97971437 = -284064500;    int EnczYLCiVI76367946 = -715636506;    int EnczYLCiVI35203821 = -718929025;    int EnczYLCiVI273554 = -76781808;    int EnczYLCiVI69985288 = -767304947;    int EnczYLCiVI12582993 = -897709369;    int EnczYLCiVI58565308 = -967193929;    int EnczYLCiVI94945538 = -620271230;    int EnczYLCiVI51667456 = -65808164;    int EnczYLCiVI81774722 = 84432163;    int EnczYLCiVI11192966 = -191083869;    int EnczYLCiVI96044793 = -965359501;    int EnczYLCiVI58560470 = -453941762;    int EnczYLCiVI16378845 = -558279852;    int EnczYLCiVI83585394 = -700872531;    int EnczYLCiVI68652350 = -485996978;    int EnczYLCiVI58725400 = -682675613;    int EnczYLCiVI17449050 = -950885030;    int EnczYLCiVI70765881 = -441246376;    int EnczYLCiVI21185898 = 92427400;    int EnczYLCiVI10484306 = -724189014;    int EnczYLCiVI33188766 = -394988599;    int EnczYLCiVI8495622 = -98384447;    int EnczYLCiVI53999390 = -438356731;    int EnczYLCiVI20502258 = -740828728;    int EnczYLCiVI50317992 = -896146125;    int EnczYLCiVI46367339 = -291612000;    int EnczYLCiVI41641805 = -237972366;    int EnczYLCiVI80039614 = -460764849;    int EnczYLCiVI15923664 = -287562626;    int EnczYLCiVI59487004 = -336351618;    int EnczYLCiVI23712920 = -64508181;    int EnczYLCiVI80242501 = -524376765;    int EnczYLCiVI26567594 = 62668194;    int EnczYLCiVI15051519 = -180171387;    int EnczYLCiVI13948348 = -267150712;    int EnczYLCiVI20207760 = -592462167;     EnczYLCiVI72659878 = EnczYLCiVI11053056;     EnczYLCiVI11053056 = EnczYLCiVI62314966;     EnczYLCiVI62314966 = EnczYLCiVI85748903;     EnczYLCiVI85748903 = EnczYLCiVI25314807;     EnczYLCiVI25314807 = EnczYLCiVI59401435;     EnczYLCiVI59401435 = EnczYLCiVI7049533;     EnczYLCiVI7049533 = EnczYLCiVI24983198;     EnczYLCiVI24983198 = EnczYLCiVI24771583;     EnczYLCiVI24771583 = EnczYLCiVI10410722;     EnczYLCiVI10410722 = EnczYLCiVI22832795;     EnczYLCiVI22832795 = EnczYLCiVI97707942;     EnczYLCiVI97707942 = EnczYLCiVI36707853;     EnczYLCiVI36707853 = EnczYLCiVI2208410;     EnczYLCiVI2208410 = EnczYLCiVI37358481;     EnczYLCiVI37358481 = EnczYLCiVI13236190;     EnczYLCiVI13236190 = EnczYLCiVI57292175;     EnczYLCiVI57292175 = EnczYLCiVI95221642;     EnczYLCiVI95221642 = EnczYLCiVI66978367;     EnczYLCiVI66978367 = EnczYLCiVI16914437;     EnczYLCiVI16914437 = EnczYLCiVI72152137;     EnczYLCiVI72152137 = EnczYLCiVI29401801;     EnczYLCiVI29401801 = EnczYLCiVI73901688;     EnczYLCiVI73901688 = EnczYLCiVI24063930;     EnczYLCiVI24063930 = EnczYLCiVI96047848;     EnczYLCiVI96047848 = EnczYLCiVI71354890;     EnczYLCiVI71354890 = EnczYLCiVI27328954;     EnczYLCiVI27328954 = EnczYLCiVI66422389;     EnczYLCiVI66422389 = EnczYLCiVI37959124;     EnczYLCiVI37959124 = EnczYLCiVI26800146;     EnczYLCiVI26800146 = EnczYLCiVI34042776;     EnczYLCiVI34042776 = EnczYLCiVI87628974;     EnczYLCiVI87628974 = EnczYLCiVI97434388;     EnczYLCiVI97434388 = EnczYLCiVI66722565;     EnczYLCiVI66722565 = EnczYLCiVI89625416;     EnczYLCiVI89625416 = EnczYLCiVI78793172;     EnczYLCiVI78793172 = EnczYLCiVI18290651;     EnczYLCiVI18290651 = EnczYLCiVI5624719;     EnczYLCiVI5624719 = EnczYLCiVI13446920;     EnczYLCiVI13446920 = EnczYLCiVI55785401;     EnczYLCiVI55785401 = EnczYLCiVI20869644;     EnczYLCiVI20869644 = EnczYLCiVI13591668;     EnczYLCiVI13591668 = EnczYLCiVI13022957;     EnczYLCiVI13022957 = EnczYLCiVI90316294;     EnczYLCiVI90316294 = EnczYLCiVI55411580;     EnczYLCiVI55411580 = EnczYLCiVI37322448;     EnczYLCiVI37322448 = EnczYLCiVI53905841;     EnczYLCiVI53905841 = EnczYLCiVI56563072;     EnczYLCiVI56563072 = EnczYLCiVI45236492;     EnczYLCiVI45236492 = EnczYLCiVI27474819;     EnczYLCiVI27474819 = EnczYLCiVI93611380;     EnczYLCiVI93611380 = EnczYLCiVI25547155;     EnczYLCiVI25547155 = EnczYLCiVI33629584;     EnczYLCiVI33629584 = EnczYLCiVI76932131;     EnczYLCiVI76932131 = EnczYLCiVI16404573;     EnczYLCiVI16404573 = EnczYLCiVI43258078;     EnczYLCiVI43258078 = EnczYLCiVI37151368;     EnczYLCiVI37151368 = EnczYLCiVI38251037;     EnczYLCiVI38251037 = EnczYLCiVI89701055;     EnczYLCiVI89701055 = EnczYLCiVI53959916;     EnczYLCiVI53959916 = EnczYLCiVI32072482;     EnczYLCiVI32072482 = EnczYLCiVI40627143;     EnczYLCiVI40627143 = EnczYLCiVI87024073;     EnczYLCiVI87024073 = EnczYLCiVI97971437;     EnczYLCiVI97971437 = EnczYLCiVI76367946;     EnczYLCiVI76367946 = EnczYLCiVI35203821;     EnczYLCiVI35203821 = EnczYLCiVI273554;     EnczYLCiVI273554 = EnczYLCiVI69985288;     EnczYLCiVI69985288 = EnczYLCiVI12582993;     EnczYLCiVI12582993 = EnczYLCiVI58565308;     EnczYLCiVI58565308 = EnczYLCiVI94945538;     EnczYLCiVI94945538 = EnczYLCiVI51667456;     EnczYLCiVI51667456 = EnczYLCiVI81774722;     EnczYLCiVI81774722 = EnczYLCiVI11192966;     EnczYLCiVI11192966 = EnczYLCiVI96044793;     EnczYLCiVI96044793 = EnczYLCiVI58560470;     EnczYLCiVI58560470 = EnczYLCiVI16378845;     EnczYLCiVI16378845 = EnczYLCiVI83585394;     EnczYLCiVI83585394 = EnczYLCiVI68652350;     EnczYLCiVI68652350 = EnczYLCiVI58725400;     EnczYLCiVI58725400 = EnczYLCiVI17449050;     EnczYLCiVI17449050 = EnczYLCiVI70765881;     EnczYLCiVI70765881 = EnczYLCiVI21185898;     EnczYLCiVI21185898 = EnczYLCiVI10484306;     EnczYLCiVI10484306 = EnczYLCiVI33188766;     EnczYLCiVI33188766 = EnczYLCiVI8495622;     EnczYLCiVI8495622 = EnczYLCiVI53999390;     EnczYLCiVI53999390 = EnczYLCiVI20502258;     EnczYLCiVI20502258 = EnczYLCiVI50317992;     EnczYLCiVI50317992 = EnczYLCiVI46367339;     EnczYLCiVI46367339 = EnczYLCiVI41641805;     EnczYLCiVI41641805 = EnczYLCiVI80039614;     EnczYLCiVI80039614 = EnczYLCiVI15923664;     EnczYLCiVI15923664 = EnczYLCiVI59487004;     EnczYLCiVI59487004 = EnczYLCiVI23712920;     EnczYLCiVI23712920 = EnczYLCiVI80242501;     EnczYLCiVI80242501 = EnczYLCiVI26567594;     EnczYLCiVI26567594 = EnczYLCiVI15051519;     EnczYLCiVI15051519 = EnczYLCiVI13948348;     EnczYLCiVI13948348 = EnczYLCiVI20207760;     EnczYLCiVI20207760 = EnczYLCiVI72659878;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void XTshppqnGg59334952() {     long ORXnlGJBAt3183620 = -294986132;    long ORXnlGJBAt31244588 = -684239829;    long ORXnlGJBAt22119490 = -536001283;    long ORXnlGJBAt48451581 = -280718756;    long ORXnlGJBAt35918418 = -51349660;    long ORXnlGJBAt77316151 = -272423086;    long ORXnlGJBAt72901824 = -530867603;    long ORXnlGJBAt96250527 = -839610880;    long ORXnlGJBAt17509991 = -399105492;    long ORXnlGJBAt28281391 = -729137413;    long ORXnlGJBAt94010287 = -770678230;    long ORXnlGJBAt12077926 = -630819542;    long ORXnlGJBAt36152336 = -662130266;    long ORXnlGJBAt36097645 = 1576614;    long ORXnlGJBAt83297155 = -253687739;    long ORXnlGJBAt15226225 = -553430030;    long ORXnlGJBAt21146011 = -938889837;    long ORXnlGJBAt74909557 = -628647361;    long ORXnlGJBAt67878825 = -132663682;    long ORXnlGJBAt76395339 = -850898528;    long ORXnlGJBAt59282845 = -788621911;    long ORXnlGJBAt37290050 = 26797621;    long ORXnlGJBAt51826678 = -784782432;    long ORXnlGJBAt10904897 = 63765530;    long ORXnlGJBAt95397721 = -227908673;    long ORXnlGJBAt12305026 = -485497020;    long ORXnlGJBAt6177800 = -217666990;    long ORXnlGJBAt59885121 = -802310551;    long ORXnlGJBAt62062226 = -556396244;    long ORXnlGJBAt12205629 = -329025307;    long ORXnlGJBAt46004539 = -716618815;    long ORXnlGJBAt28954486 = -360827599;    long ORXnlGJBAt42773814 = -756214989;    long ORXnlGJBAt8319605 = -833358462;    long ORXnlGJBAt2642629 = 77001970;    long ORXnlGJBAt96262472 = -702325111;    long ORXnlGJBAt39833910 = -28046820;    long ORXnlGJBAt1539344 = -537207675;    long ORXnlGJBAt40275591 = -843931660;    long ORXnlGJBAt99344781 = -336565252;    long ORXnlGJBAt64207171 = -713188497;    long ORXnlGJBAt83854610 = -656153385;    long ORXnlGJBAt92243915 = -765346907;    long ORXnlGJBAt5970629 = -79920111;    long ORXnlGJBAt30405734 = -825082120;    long ORXnlGJBAt33396281 = -83890270;    long ORXnlGJBAt56538202 = 76942747;    long ORXnlGJBAt75636718 = -368236285;    long ORXnlGJBAt52423887 = -463028084;    long ORXnlGJBAt61633255 = -36299246;    long ORXnlGJBAt85750023 = -498015014;    long ORXnlGJBAt77282366 = -825023243;    long ORXnlGJBAt83114873 = -911001233;    long ORXnlGJBAt66814941 = -888469937;    long ORXnlGJBAt52107 = -492528841;    long ORXnlGJBAt65893569 = -221783754;    long ORXnlGJBAt79417909 = -899457398;    long ORXnlGJBAt11214593 = -499766814;    long ORXnlGJBAt53053859 = 47189916;    long ORXnlGJBAt23613393 = -565852641;    long ORXnlGJBAt71138351 = 45243903;    long ORXnlGJBAt13016703 = -728557053;    long ORXnlGJBAt34188302 = -183214636;    long ORXnlGJBAt5304362 = 29919814;    long ORXnlGJBAt82276852 = 87481401;    long ORXnlGJBAt65055802 = -309850631;    long ORXnlGJBAt69304111 = -874604554;    long ORXnlGJBAt27832732 = -828771804;    long ORXnlGJBAt33455017 = 24574643;    long ORXnlGJBAt87034683 = -551362629;    long ORXnlGJBAt75392315 = -425383211;    long ORXnlGJBAt19606668 = -301682162;    long ORXnlGJBAt34633966 = -784715702;    long ORXnlGJBAt68534044 = -796098431;    long ORXnlGJBAt12188168 = -37710032;    long ORXnlGJBAt75428235 = -32468527;    long ORXnlGJBAt45046135 = -207855472;    long ORXnlGJBAt45856050 = -604862321;    long ORXnlGJBAt80499162 = -111152350;    long ORXnlGJBAt62001440 = -44018403;    long ORXnlGJBAt55766824 = -462439767;    long ORXnlGJBAt30541082 = -849430705;    long ORXnlGJBAt7461234 = -239282468;    long ORXnlGJBAt428971 = -420096999;    long ORXnlGJBAt26455606 = -831010293;    long ORXnlGJBAt68722173 = -891595572;    long ORXnlGJBAt45839612 = -449826366;    long ORXnlGJBAt75958873 = -867745053;    long ORXnlGJBAt8267498 = -240829622;    long ORXnlGJBAt36749059 = -701214276;    long ORXnlGJBAt16844563 = -802867714;    long ORXnlGJBAt28619317 = -528280006;    long ORXnlGJBAt48485484 = -484397592;    long ORXnlGJBAt16662198 = -178079019;    long ORXnlGJBAt28206430 = -281809155;    long ORXnlGJBAt51190468 = -984631445;    long ORXnlGJBAt49666309 = -372938750;    long ORXnlGJBAt86939553 = -695266721;    long ORXnlGJBAt23693776 = -67401513;    long ORXnlGJBAt65349932 = -294986132;     ORXnlGJBAt3183620 = ORXnlGJBAt31244588;     ORXnlGJBAt31244588 = ORXnlGJBAt22119490;     ORXnlGJBAt22119490 = ORXnlGJBAt48451581;     ORXnlGJBAt48451581 = ORXnlGJBAt35918418;     ORXnlGJBAt35918418 = ORXnlGJBAt77316151;     ORXnlGJBAt77316151 = ORXnlGJBAt72901824;     ORXnlGJBAt72901824 = ORXnlGJBAt96250527;     ORXnlGJBAt96250527 = ORXnlGJBAt17509991;     ORXnlGJBAt17509991 = ORXnlGJBAt28281391;     ORXnlGJBAt28281391 = ORXnlGJBAt94010287;     ORXnlGJBAt94010287 = ORXnlGJBAt12077926;     ORXnlGJBAt12077926 = ORXnlGJBAt36152336;     ORXnlGJBAt36152336 = ORXnlGJBAt36097645;     ORXnlGJBAt36097645 = ORXnlGJBAt83297155;     ORXnlGJBAt83297155 = ORXnlGJBAt15226225;     ORXnlGJBAt15226225 = ORXnlGJBAt21146011;     ORXnlGJBAt21146011 = ORXnlGJBAt74909557;     ORXnlGJBAt74909557 = ORXnlGJBAt67878825;     ORXnlGJBAt67878825 = ORXnlGJBAt76395339;     ORXnlGJBAt76395339 = ORXnlGJBAt59282845;     ORXnlGJBAt59282845 = ORXnlGJBAt37290050;     ORXnlGJBAt37290050 = ORXnlGJBAt51826678;     ORXnlGJBAt51826678 = ORXnlGJBAt10904897;     ORXnlGJBAt10904897 = ORXnlGJBAt95397721;     ORXnlGJBAt95397721 = ORXnlGJBAt12305026;     ORXnlGJBAt12305026 = ORXnlGJBAt6177800;     ORXnlGJBAt6177800 = ORXnlGJBAt59885121;     ORXnlGJBAt59885121 = ORXnlGJBAt62062226;     ORXnlGJBAt62062226 = ORXnlGJBAt12205629;     ORXnlGJBAt12205629 = ORXnlGJBAt46004539;     ORXnlGJBAt46004539 = ORXnlGJBAt28954486;     ORXnlGJBAt28954486 = ORXnlGJBAt42773814;     ORXnlGJBAt42773814 = ORXnlGJBAt8319605;     ORXnlGJBAt8319605 = ORXnlGJBAt2642629;     ORXnlGJBAt2642629 = ORXnlGJBAt96262472;     ORXnlGJBAt96262472 = ORXnlGJBAt39833910;     ORXnlGJBAt39833910 = ORXnlGJBAt1539344;     ORXnlGJBAt1539344 = ORXnlGJBAt40275591;     ORXnlGJBAt40275591 = ORXnlGJBAt99344781;     ORXnlGJBAt99344781 = ORXnlGJBAt64207171;     ORXnlGJBAt64207171 = ORXnlGJBAt83854610;     ORXnlGJBAt83854610 = ORXnlGJBAt92243915;     ORXnlGJBAt92243915 = ORXnlGJBAt5970629;     ORXnlGJBAt5970629 = ORXnlGJBAt30405734;     ORXnlGJBAt30405734 = ORXnlGJBAt33396281;     ORXnlGJBAt33396281 = ORXnlGJBAt56538202;     ORXnlGJBAt56538202 = ORXnlGJBAt75636718;     ORXnlGJBAt75636718 = ORXnlGJBAt52423887;     ORXnlGJBAt52423887 = ORXnlGJBAt61633255;     ORXnlGJBAt61633255 = ORXnlGJBAt85750023;     ORXnlGJBAt85750023 = ORXnlGJBAt77282366;     ORXnlGJBAt77282366 = ORXnlGJBAt83114873;     ORXnlGJBAt83114873 = ORXnlGJBAt66814941;     ORXnlGJBAt66814941 = ORXnlGJBAt52107;     ORXnlGJBAt52107 = ORXnlGJBAt65893569;     ORXnlGJBAt65893569 = ORXnlGJBAt79417909;     ORXnlGJBAt79417909 = ORXnlGJBAt11214593;     ORXnlGJBAt11214593 = ORXnlGJBAt53053859;     ORXnlGJBAt53053859 = ORXnlGJBAt23613393;     ORXnlGJBAt23613393 = ORXnlGJBAt71138351;     ORXnlGJBAt71138351 = ORXnlGJBAt13016703;     ORXnlGJBAt13016703 = ORXnlGJBAt34188302;     ORXnlGJBAt34188302 = ORXnlGJBAt5304362;     ORXnlGJBAt5304362 = ORXnlGJBAt82276852;     ORXnlGJBAt82276852 = ORXnlGJBAt65055802;     ORXnlGJBAt65055802 = ORXnlGJBAt69304111;     ORXnlGJBAt69304111 = ORXnlGJBAt27832732;     ORXnlGJBAt27832732 = ORXnlGJBAt33455017;     ORXnlGJBAt33455017 = ORXnlGJBAt87034683;     ORXnlGJBAt87034683 = ORXnlGJBAt75392315;     ORXnlGJBAt75392315 = ORXnlGJBAt19606668;     ORXnlGJBAt19606668 = ORXnlGJBAt34633966;     ORXnlGJBAt34633966 = ORXnlGJBAt68534044;     ORXnlGJBAt68534044 = ORXnlGJBAt12188168;     ORXnlGJBAt12188168 = ORXnlGJBAt75428235;     ORXnlGJBAt75428235 = ORXnlGJBAt45046135;     ORXnlGJBAt45046135 = ORXnlGJBAt45856050;     ORXnlGJBAt45856050 = ORXnlGJBAt80499162;     ORXnlGJBAt80499162 = ORXnlGJBAt62001440;     ORXnlGJBAt62001440 = ORXnlGJBAt55766824;     ORXnlGJBAt55766824 = ORXnlGJBAt30541082;     ORXnlGJBAt30541082 = ORXnlGJBAt7461234;     ORXnlGJBAt7461234 = ORXnlGJBAt428971;     ORXnlGJBAt428971 = ORXnlGJBAt26455606;     ORXnlGJBAt26455606 = ORXnlGJBAt68722173;     ORXnlGJBAt68722173 = ORXnlGJBAt45839612;     ORXnlGJBAt45839612 = ORXnlGJBAt75958873;     ORXnlGJBAt75958873 = ORXnlGJBAt8267498;     ORXnlGJBAt8267498 = ORXnlGJBAt36749059;     ORXnlGJBAt36749059 = ORXnlGJBAt16844563;     ORXnlGJBAt16844563 = ORXnlGJBAt28619317;     ORXnlGJBAt28619317 = ORXnlGJBAt48485484;     ORXnlGJBAt48485484 = ORXnlGJBAt16662198;     ORXnlGJBAt16662198 = ORXnlGJBAt28206430;     ORXnlGJBAt28206430 = ORXnlGJBAt51190468;     ORXnlGJBAt51190468 = ORXnlGJBAt49666309;     ORXnlGJBAt49666309 = ORXnlGJBAt86939553;     ORXnlGJBAt86939553 = ORXnlGJBAt23693776;     ORXnlGJBAt23693776 = ORXnlGJBAt65349932;     ORXnlGJBAt65349932 = ORXnlGJBAt3183620;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void tenQEfSkrv17575834() {     long cbSMTZEwNF41840747 = -551892169;    long cbSMTZEwNF56566309 = -871726158;    long cbSMTZEwNF63615863 = -864476050;    long cbSMTZEwNF51390177 = -102785189;    long cbSMTZEwNF63371438 = -712813792;    long cbSMTZEwNF15665183 = -829143607;    long cbSMTZEwNF96724335 = -35877238;    long cbSMTZEwNF97758354 = -393930255;    long cbSMTZEwNF47193757 = -399464905;    long cbSMTZEwNF70578901 = -985644601;    long cbSMTZEwNF8983717 = -886489445;    long cbSMTZEwNF92060780 = -687903927;    long cbSMTZEwNF83959578 = -359673816;    long cbSMTZEwNF38183473 = -521602332;    long cbSMTZEwNF61025283 = 81819001;    long cbSMTZEwNF62232655 = -243765572;    long cbSMTZEwNF26956712 = -876904363;    long cbSMTZEwNF89809236 = -766610099;    long cbSMTZEwNF88612245 = 2901164;    long cbSMTZEwNF52877741 = -999264516;    long cbSMTZEwNF72495866 = -916109073;    long cbSMTZEwNF78399463 = 25194711;    long cbSMTZEwNF22822533 = -290426129;    long cbSMTZEwNF79912097 = -841915197;    long cbSMTZEwNF22778565 = -197830889;    long cbSMTZEwNF64189339 = -394630144;    long cbSMTZEwNF1896863 = -932177772;    long cbSMTZEwNF58600896 = -313290504;    long cbSMTZEwNF9715092 = 77472222;    long cbSMTZEwNF61904351 = -352146173;    long cbSMTZEwNF42343600 = -965930180;    long cbSMTZEwNF46426245 = -855523492;    long cbSMTZEwNF95140206 = -822288609;    long cbSMTZEwNF32266415 = -630070397;    long cbSMTZEwNF93626705 = -511777769;    long cbSMTZEwNF10922298 = -19089756;    long cbSMTZEwNF45451399 = -640306853;    long cbSMTZEwNF74701333 = -500952610;    long cbSMTZEwNF63281600 = -552100226;    long cbSMTZEwNF52214273 = -135574088;    long cbSMTZEwNF16052689 = -554269935;    long cbSMTZEwNF28720936 = 98171511;    long cbSMTZEwNF25277321 = -459603490;    long cbSMTZEwNF17451127 = -55304471;    long cbSMTZEwNF54419802 = -781470921;    long cbSMTZEwNF37657650 = -463132344;    long cbSMTZEwNF63354422 = -961102221;    long cbSMTZEwNF56877126 = -971410735;    long cbSMTZEwNF31667969 = -276724492;    long cbSMTZEwNF42889094 = -233328956;    long cbSMTZEwNF67787778 = -265873897;    long cbSMTZEwNF14175161 = -785935487;    long cbSMTZEwNF91495222 = -463034106;    long cbSMTZEwNF91419151 = -19361409;    long cbSMTZEwNF45079967 = -73405289;    long cbSMTZEwNF63441284 = -477086881;    long cbSMTZEwNF33743777 = -481300029;    long cbSMTZEwNF83703766 = 77439146;    long cbSMTZEwNF28611612 = -904954301;    long cbSMTZEwNF99182098 = -218183648;    long cbSMTZEwNF13768321 = -896965835;    long cbSMTZEwNF38123440 = -722586734;    long cbSMTZEwNF88043262 = -371402477;    long cbSMTZEwNF85289406 = 52681267;    long cbSMTZEwNF28235301 = 80285579;    long cbSMTZEwNF62557471 = 69034047;    long cbSMTZEwNF96920574 = -865615319;    long cbSMTZEwNF51693164 = -729603419;    long cbSMTZEwNF44556767 = 90175436;    long cbSMTZEwNF50102986 = -899091243;    long cbSMTZEwNF16781257 = -603458720;    long cbSMTZEwNF52255378 = -275951754;    long cbSMTZEwNF26527637 = -114509874;    long cbSMTZEwNF36397972 = -861524749;    long cbSMTZEwNF36825052 = -344994582;    long cbSMTZEwNF43774930 = -914280584;    long cbSMTZEwNF53122142 = -515201799;    long cbSMTZEwNF5371407 = -135121659;    long cbSMTZEwNF25492295 = 39555724;    long cbSMTZEwNF85120914 = -734698545;    long cbSMTZEwNF834917 = -433527924;    long cbSMTZEwNF45019736 = -960767038;    long cbSMTZEwNF26932928 = 63433987;    long cbSMTZEwNF66825998 = -689198823;    long cbSMTZEwNF94116573 = 13727723;    long cbSMTZEwNF28168439 = -79994694;    long cbSMTZEwNF54931023 = -292489387;    long cbSMTZEwNF3721056 = -702927200;    long cbSMTZEwNF87186448 = -456665109;    long cbSMTZEwNF30185422 = 65309111;    long cbSMTZEwNF77178521 = -537789728;    long cbSMTZEwNF61747633 = -617745999;    long cbSMTZEwNF46089721 = -595998309;    long cbSMTZEwNF64099501 = -233916579;    long cbSMTZEwNF38445952 = -238608253;    long cbSMTZEwNF77929249 = -831683201;    long cbSMTZEwNF40677674 = -530426012;    long cbSMTZEwNF39987915 = -412284758;    long cbSMTZEwNF89215825 = -35590050;    long cbSMTZEwNF91862330 = -551892169;     cbSMTZEwNF41840747 = cbSMTZEwNF56566309;     cbSMTZEwNF56566309 = cbSMTZEwNF63615863;     cbSMTZEwNF63615863 = cbSMTZEwNF51390177;     cbSMTZEwNF51390177 = cbSMTZEwNF63371438;     cbSMTZEwNF63371438 = cbSMTZEwNF15665183;     cbSMTZEwNF15665183 = cbSMTZEwNF96724335;     cbSMTZEwNF96724335 = cbSMTZEwNF97758354;     cbSMTZEwNF97758354 = cbSMTZEwNF47193757;     cbSMTZEwNF47193757 = cbSMTZEwNF70578901;     cbSMTZEwNF70578901 = cbSMTZEwNF8983717;     cbSMTZEwNF8983717 = cbSMTZEwNF92060780;     cbSMTZEwNF92060780 = cbSMTZEwNF83959578;     cbSMTZEwNF83959578 = cbSMTZEwNF38183473;     cbSMTZEwNF38183473 = cbSMTZEwNF61025283;     cbSMTZEwNF61025283 = cbSMTZEwNF62232655;     cbSMTZEwNF62232655 = cbSMTZEwNF26956712;     cbSMTZEwNF26956712 = cbSMTZEwNF89809236;     cbSMTZEwNF89809236 = cbSMTZEwNF88612245;     cbSMTZEwNF88612245 = cbSMTZEwNF52877741;     cbSMTZEwNF52877741 = cbSMTZEwNF72495866;     cbSMTZEwNF72495866 = cbSMTZEwNF78399463;     cbSMTZEwNF78399463 = cbSMTZEwNF22822533;     cbSMTZEwNF22822533 = cbSMTZEwNF79912097;     cbSMTZEwNF79912097 = cbSMTZEwNF22778565;     cbSMTZEwNF22778565 = cbSMTZEwNF64189339;     cbSMTZEwNF64189339 = cbSMTZEwNF1896863;     cbSMTZEwNF1896863 = cbSMTZEwNF58600896;     cbSMTZEwNF58600896 = cbSMTZEwNF9715092;     cbSMTZEwNF9715092 = cbSMTZEwNF61904351;     cbSMTZEwNF61904351 = cbSMTZEwNF42343600;     cbSMTZEwNF42343600 = cbSMTZEwNF46426245;     cbSMTZEwNF46426245 = cbSMTZEwNF95140206;     cbSMTZEwNF95140206 = cbSMTZEwNF32266415;     cbSMTZEwNF32266415 = cbSMTZEwNF93626705;     cbSMTZEwNF93626705 = cbSMTZEwNF10922298;     cbSMTZEwNF10922298 = cbSMTZEwNF45451399;     cbSMTZEwNF45451399 = cbSMTZEwNF74701333;     cbSMTZEwNF74701333 = cbSMTZEwNF63281600;     cbSMTZEwNF63281600 = cbSMTZEwNF52214273;     cbSMTZEwNF52214273 = cbSMTZEwNF16052689;     cbSMTZEwNF16052689 = cbSMTZEwNF28720936;     cbSMTZEwNF28720936 = cbSMTZEwNF25277321;     cbSMTZEwNF25277321 = cbSMTZEwNF17451127;     cbSMTZEwNF17451127 = cbSMTZEwNF54419802;     cbSMTZEwNF54419802 = cbSMTZEwNF37657650;     cbSMTZEwNF37657650 = cbSMTZEwNF63354422;     cbSMTZEwNF63354422 = cbSMTZEwNF56877126;     cbSMTZEwNF56877126 = cbSMTZEwNF31667969;     cbSMTZEwNF31667969 = cbSMTZEwNF42889094;     cbSMTZEwNF42889094 = cbSMTZEwNF67787778;     cbSMTZEwNF67787778 = cbSMTZEwNF14175161;     cbSMTZEwNF14175161 = cbSMTZEwNF91495222;     cbSMTZEwNF91495222 = cbSMTZEwNF91419151;     cbSMTZEwNF91419151 = cbSMTZEwNF45079967;     cbSMTZEwNF45079967 = cbSMTZEwNF63441284;     cbSMTZEwNF63441284 = cbSMTZEwNF33743777;     cbSMTZEwNF33743777 = cbSMTZEwNF83703766;     cbSMTZEwNF83703766 = cbSMTZEwNF28611612;     cbSMTZEwNF28611612 = cbSMTZEwNF99182098;     cbSMTZEwNF99182098 = cbSMTZEwNF13768321;     cbSMTZEwNF13768321 = cbSMTZEwNF38123440;     cbSMTZEwNF38123440 = cbSMTZEwNF88043262;     cbSMTZEwNF88043262 = cbSMTZEwNF85289406;     cbSMTZEwNF85289406 = cbSMTZEwNF28235301;     cbSMTZEwNF28235301 = cbSMTZEwNF62557471;     cbSMTZEwNF62557471 = cbSMTZEwNF96920574;     cbSMTZEwNF96920574 = cbSMTZEwNF51693164;     cbSMTZEwNF51693164 = cbSMTZEwNF44556767;     cbSMTZEwNF44556767 = cbSMTZEwNF50102986;     cbSMTZEwNF50102986 = cbSMTZEwNF16781257;     cbSMTZEwNF16781257 = cbSMTZEwNF52255378;     cbSMTZEwNF52255378 = cbSMTZEwNF26527637;     cbSMTZEwNF26527637 = cbSMTZEwNF36397972;     cbSMTZEwNF36397972 = cbSMTZEwNF36825052;     cbSMTZEwNF36825052 = cbSMTZEwNF43774930;     cbSMTZEwNF43774930 = cbSMTZEwNF53122142;     cbSMTZEwNF53122142 = cbSMTZEwNF5371407;     cbSMTZEwNF5371407 = cbSMTZEwNF25492295;     cbSMTZEwNF25492295 = cbSMTZEwNF85120914;     cbSMTZEwNF85120914 = cbSMTZEwNF834917;     cbSMTZEwNF834917 = cbSMTZEwNF45019736;     cbSMTZEwNF45019736 = cbSMTZEwNF26932928;     cbSMTZEwNF26932928 = cbSMTZEwNF66825998;     cbSMTZEwNF66825998 = cbSMTZEwNF94116573;     cbSMTZEwNF94116573 = cbSMTZEwNF28168439;     cbSMTZEwNF28168439 = cbSMTZEwNF54931023;     cbSMTZEwNF54931023 = cbSMTZEwNF3721056;     cbSMTZEwNF3721056 = cbSMTZEwNF87186448;     cbSMTZEwNF87186448 = cbSMTZEwNF30185422;     cbSMTZEwNF30185422 = cbSMTZEwNF77178521;     cbSMTZEwNF77178521 = cbSMTZEwNF61747633;     cbSMTZEwNF61747633 = cbSMTZEwNF46089721;     cbSMTZEwNF46089721 = cbSMTZEwNF64099501;     cbSMTZEwNF64099501 = cbSMTZEwNF38445952;     cbSMTZEwNF38445952 = cbSMTZEwNF77929249;     cbSMTZEwNF77929249 = cbSMTZEwNF40677674;     cbSMTZEwNF40677674 = cbSMTZEwNF39987915;     cbSMTZEwNF39987915 = cbSMTZEwNF89215825;     cbSMTZEwNF89215825 = cbSMTZEwNF91862330;     cbSMTZEwNF91862330 = cbSMTZEwNF41840747;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void eqQmReutAy23574184() {     long QmORSEhVwh51156014 = -454423196;    long QmORSEhVwh11989232 = -888260660;    long QmORSEhVwh83767943 = -578116664;    long QmORSEhVwh9180199 = -294449181;    long QmORSEhVwh3434678 = -689328949;    long QmORSEhVwh9208545 = -288012468;    long QmORSEhVwh70378407 = -935126116;    long QmORSEhVwh86894510 = -590889403;    long QmORSEhVwh40002415 = -779525576;    long QmORSEhVwh39203358 = -806440269;    long QmORSEhVwh45885701 = 22269483;    long QmORSEhVwh3298531 = -225273742;    long QmORSEhVwh79741294 = 54904049;    long QmORSEhVwh70272114 = -500656437;    long QmORSEhVwh76301320 = -869711410;    long QmORSEhVwh67203180 = -271289050;    long QmORSEhVwh70767479 = -904489451;    long QmORSEhVwh2001878 = -496667412;    long QmORSEhVwh70625177 = 49260335;    long QmORSEhVwh16073089 = 22027642;    long QmORSEhVwh61175218 = -141809001;    long QmORSEhVwh2608376 = -897701621;    long QmORSEhVwh58883799 = 95044871;    long QmORSEhVwh39118726 = -359076307;    long QmORSEhVwh85841107 = -516963940;    long QmORSEhVwh30097157 = -493841785;    long QmORSEhVwh35655129 = -641066617;    long QmORSEhVwh29695371 = -820427237;    long QmORSEhVwh76831999 = -36947214;    long QmORSEhVwh74685299 = -158230735;    long QmORSEhVwh12341979 = -576581997;    long QmORSEhVwh23685609 = -186694787;    long QmORSEhVwh44999536 = -633379621;    long QmORSEhVwh21295363 = -113630284;    long QmORSEhVwh80276981 = -688190363;    long QmORSEhVwh42747192 = -435315203;    long QmORSEhVwh82919007 = -241506716;    long QmORSEhVwh30738132 = -253547972;    long QmORSEhVwh29507301 = -603316013;    long QmORSEhVwh28314170 = -942759600;    long QmORSEhVwh40115823 = -691426353;    long QmORSEhVwh16372592 = -923100580;    long QmORSEhVwh46994327 = -681483872;    long QmORSEhVwh76208026 = -545699359;    long QmORSEhVwh90369876 = -573246715;    long QmORSEhVwh7896886 = -788666903;    long QmORSEhVwh68604053 = -533936366;    long QmORSEhVwh28348164 = -317954123;    long QmORSEhVwh97695112 = -512421008;    long QmORSEhVwh12526996 = -26342658;    long QmORSEhVwh4755487 = -1749893;    long QmORSEhVwh78392202 = -333921705;    long QmORSEhVwh79502879 = -50811012;    long QmORSEhVwh96000395 = -379214527;    long QmORSEhVwh62398965 = -8323373;    long QmORSEhVwh48547638 = -556721575;    long QmORSEhVwh53105432 = -883305532;    long QmORSEhVwh44649218 = -119040357;    long QmORSEhVwh23339092 = -777485242;    long QmORSEhVwh73337520 = -95487164;    long QmORSEhVwh73553415 = -646945851;    long QmORSEhVwh40683036 = -14698879;    long QmORSEhVwh10062512 = -453942190;    long QmORSEhVwh65317115 = -521294841;    long QmORSEhVwh26861380 = -129858272;    long QmORSEhVwh22200093 = -791035730;    long QmORSEhVwh58298994 = -591894122;    long QmORSEhVwh58445931 = -831465667;    long QmORSEhVwh89995133 = -812466074;    long QmORSEhVwh33554129 = -334396207;    long QmORSEhVwh84284172 = 70217665;    long QmORSEhVwh40029348 = -550941479;    long QmORSEhVwh72494577 = -893351399;    long QmORSEhVwh42311007 = -7980065;    long QmORSEhVwh75957265 = -286546005;    long QmORSEhVwh44802626 = -218708421;    long QmORSEhVwh55614049 = -116217750;    long QmORSEhVwh82675772 = -359255771;    long QmORSEhVwh48748849 = -785829592;    long QmORSEhVwh77944222 = -728297037;    long QmORSEhVwh61493103 = -959905419;    long QmORSEhVwh7306966 = -223112495;    long QmORSEhVwh32000259 = -208006229;    long QmORSEhVwh64305003 = 89395443;    long QmORSEhVwh69929812 = -56480843;    long QmORSEhVwh33949776 = -142660293;    long QmORSEhVwh44182729 = -35883776;    long QmORSEhVwh48999141 = -154165095;    long QmORSEhVwh58896397 = -5306911;    long QmORSEhVwh31729343 = -31468789;    long QmORSEhVwh89641759 = -552009672;    long QmORSEhVwh38269790 = -22466359;    long QmORSEhVwh7399041 = -476062730;    long QmORSEhVwh56169780 = -407828850;    long QmORSEhVwh54760754 = -195813750;    long QmORSEhVwh99432787 = -576727474;    long QmORSEhVwh6310081 = -369158391;    long QmORSEhVwh81677211 = -60189031;    long QmORSEhVwh49346647 = -315841087;    long QmORSEhVwh68169784 = -454423196;     QmORSEhVwh51156014 = QmORSEhVwh11989232;     QmORSEhVwh11989232 = QmORSEhVwh83767943;     QmORSEhVwh83767943 = QmORSEhVwh9180199;     QmORSEhVwh9180199 = QmORSEhVwh3434678;     QmORSEhVwh3434678 = QmORSEhVwh9208545;     QmORSEhVwh9208545 = QmORSEhVwh70378407;     QmORSEhVwh70378407 = QmORSEhVwh86894510;     QmORSEhVwh86894510 = QmORSEhVwh40002415;     QmORSEhVwh40002415 = QmORSEhVwh39203358;     QmORSEhVwh39203358 = QmORSEhVwh45885701;     QmORSEhVwh45885701 = QmORSEhVwh3298531;     QmORSEhVwh3298531 = QmORSEhVwh79741294;     QmORSEhVwh79741294 = QmORSEhVwh70272114;     QmORSEhVwh70272114 = QmORSEhVwh76301320;     QmORSEhVwh76301320 = QmORSEhVwh67203180;     QmORSEhVwh67203180 = QmORSEhVwh70767479;     QmORSEhVwh70767479 = QmORSEhVwh2001878;     QmORSEhVwh2001878 = QmORSEhVwh70625177;     QmORSEhVwh70625177 = QmORSEhVwh16073089;     QmORSEhVwh16073089 = QmORSEhVwh61175218;     QmORSEhVwh61175218 = QmORSEhVwh2608376;     QmORSEhVwh2608376 = QmORSEhVwh58883799;     QmORSEhVwh58883799 = QmORSEhVwh39118726;     QmORSEhVwh39118726 = QmORSEhVwh85841107;     QmORSEhVwh85841107 = QmORSEhVwh30097157;     QmORSEhVwh30097157 = QmORSEhVwh35655129;     QmORSEhVwh35655129 = QmORSEhVwh29695371;     QmORSEhVwh29695371 = QmORSEhVwh76831999;     QmORSEhVwh76831999 = QmORSEhVwh74685299;     QmORSEhVwh74685299 = QmORSEhVwh12341979;     QmORSEhVwh12341979 = QmORSEhVwh23685609;     QmORSEhVwh23685609 = QmORSEhVwh44999536;     QmORSEhVwh44999536 = QmORSEhVwh21295363;     QmORSEhVwh21295363 = QmORSEhVwh80276981;     QmORSEhVwh80276981 = QmORSEhVwh42747192;     QmORSEhVwh42747192 = QmORSEhVwh82919007;     QmORSEhVwh82919007 = QmORSEhVwh30738132;     QmORSEhVwh30738132 = QmORSEhVwh29507301;     QmORSEhVwh29507301 = QmORSEhVwh28314170;     QmORSEhVwh28314170 = QmORSEhVwh40115823;     QmORSEhVwh40115823 = QmORSEhVwh16372592;     QmORSEhVwh16372592 = QmORSEhVwh46994327;     QmORSEhVwh46994327 = QmORSEhVwh76208026;     QmORSEhVwh76208026 = QmORSEhVwh90369876;     QmORSEhVwh90369876 = QmORSEhVwh7896886;     QmORSEhVwh7896886 = QmORSEhVwh68604053;     QmORSEhVwh68604053 = QmORSEhVwh28348164;     QmORSEhVwh28348164 = QmORSEhVwh97695112;     QmORSEhVwh97695112 = QmORSEhVwh12526996;     QmORSEhVwh12526996 = QmORSEhVwh4755487;     QmORSEhVwh4755487 = QmORSEhVwh78392202;     QmORSEhVwh78392202 = QmORSEhVwh79502879;     QmORSEhVwh79502879 = QmORSEhVwh96000395;     QmORSEhVwh96000395 = QmORSEhVwh62398965;     QmORSEhVwh62398965 = QmORSEhVwh48547638;     QmORSEhVwh48547638 = QmORSEhVwh53105432;     QmORSEhVwh53105432 = QmORSEhVwh44649218;     QmORSEhVwh44649218 = QmORSEhVwh23339092;     QmORSEhVwh23339092 = QmORSEhVwh73337520;     QmORSEhVwh73337520 = QmORSEhVwh73553415;     QmORSEhVwh73553415 = QmORSEhVwh40683036;     QmORSEhVwh40683036 = QmORSEhVwh10062512;     QmORSEhVwh10062512 = QmORSEhVwh65317115;     QmORSEhVwh65317115 = QmORSEhVwh26861380;     QmORSEhVwh26861380 = QmORSEhVwh22200093;     QmORSEhVwh22200093 = QmORSEhVwh58298994;     QmORSEhVwh58298994 = QmORSEhVwh58445931;     QmORSEhVwh58445931 = QmORSEhVwh89995133;     QmORSEhVwh89995133 = QmORSEhVwh33554129;     QmORSEhVwh33554129 = QmORSEhVwh84284172;     QmORSEhVwh84284172 = QmORSEhVwh40029348;     QmORSEhVwh40029348 = QmORSEhVwh72494577;     QmORSEhVwh72494577 = QmORSEhVwh42311007;     QmORSEhVwh42311007 = QmORSEhVwh75957265;     QmORSEhVwh75957265 = QmORSEhVwh44802626;     QmORSEhVwh44802626 = QmORSEhVwh55614049;     QmORSEhVwh55614049 = QmORSEhVwh82675772;     QmORSEhVwh82675772 = QmORSEhVwh48748849;     QmORSEhVwh48748849 = QmORSEhVwh77944222;     QmORSEhVwh77944222 = QmORSEhVwh61493103;     QmORSEhVwh61493103 = QmORSEhVwh7306966;     QmORSEhVwh7306966 = QmORSEhVwh32000259;     QmORSEhVwh32000259 = QmORSEhVwh64305003;     QmORSEhVwh64305003 = QmORSEhVwh69929812;     QmORSEhVwh69929812 = QmORSEhVwh33949776;     QmORSEhVwh33949776 = QmORSEhVwh44182729;     QmORSEhVwh44182729 = QmORSEhVwh48999141;     QmORSEhVwh48999141 = QmORSEhVwh58896397;     QmORSEhVwh58896397 = QmORSEhVwh31729343;     QmORSEhVwh31729343 = QmORSEhVwh89641759;     QmORSEhVwh89641759 = QmORSEhVwh38269790;     QmORSEhVwh38269790 = QmORSEhVwh7399041;     QmORSEhVwh7399041 = QmORSEhVwh56169780;     QmORSEhVwh56169780 = QmORSEhVwh54760754;     QmORSEhVwh54760754 = QmORSEhVwh99432787;     QmORSEhVwh99432787 = QmORSEhVwh6310081;     QmORSEhVwh6310081 = QmORSEhVwh81677211;     QmORSEhVwh81677211 = QmORSEhVwh49346647;     QmORSEhVwh49346647 = QmORSEhVwh68169784;     QmORSEhVwh68169784 = QmORSEhVwh51156014;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IiaCJYgKXO81815064() {     long VdYwNFjxqT89813141 = -711329233;    long VdYwNFjxqT37310953 = 24253011;    long VdYwNFjxqT25264318 = -906591431;    long VdYwNFjxqT12118795 = -116515614;    long VdYwNFjxqT30887697 = -250793080;    long VdYwNFjxqT47557577 = -844732988;    long VdYwNFjxqT94200919 = -440135751;    long VdYwNFjxqT88402337 = -145208778;    long VdYwNFjxqT69686181 = -779884989;    long VdYwNFjxqT81500868 = 37052542;    long VdYwNFjxqT60859130 = -93541732;    long VdYwNFjxqT83281385 = -282358127;    long VdYwNFjxqT27548537 = -742639501;    long VdYwNFjxqT72357941 = 76164617;    long VdYwNFjxqT54029448 = -534204670;    long VdYwNFjxqT14209611 = 38375409;    long VdYwNFjxqT76578179 = -842503977;    long VdYwNFjxqT16901558 = -634630151;    long VdYwNFjxqT91358597 = -915174819;    long VdYwNFjxqT92555490 = -126338345;    long VdYwNFjxqT74388239 = -269296162;    long VdYwNFjxqT43717789 = -899304531;    long VdYwNFjxqT29879654 = -510598827;    long VdYwNFjxqT8125927 = -164757034;    long VdYwNFjxqT13221951 = -486886156;    long VdYwNFjxqT81981470 = -402974910;    long VdYwNFjxqT31374192 = -255577400;    long VdYwNFjxqT28411146 = -331407191;    long VdYwNFjxqT24484866 = -503078748;    long VdYwNFjxqT24384022 = -181351601;    long VdYwNFjxqT8681040 = -825893363;    long VdYwNFjxqT41157369 = -681390681;    long VdYwNFjxqT97365928 = -699453240;    long VdYwNFjxqT45242173 = 89657781;    long VdYwNFjxqT71261058 = -176970103;    long VdYwNFjxqT57407017 = -852079849;    long VdYwNFjxqT88536496 = -853766749;    long VdYwNFjxqT3900121 = -217292907;    long VdYwNFjxqT52513310 = -311484580;    long VdYwNFjxqT81183661 = -741768436;    long VdYwNFjxqT91961341 = -532507791;    long VdYwNFjxqT61238917 = -168775684;    long VdYwNFjxqT80027732 = -375740455;    long VdYwNFjxqT87688524 = -521083719;    long VdYwNFjxqT14383945 = -529635516;    long VdYwNFjxqT12158254 = -67908977;    long VdYwNFjxqT75420273 = -471981334;    long VdYwNFjxqT9588572 = -921128572;    long VdYwNFjxqT76939193 = -326117417;    long VdYwNFjxqT93782834 = -223372368;    long VdYwNFjxqT86793241 = -869608776;    long VdYwNFjxqT15284998 = -294833949;    long VdYwNFjxqT87883228 = -702843885;    long VdYwNFjxqT20604606 = -610105999;    long VdYwNFjxqT7426826 = -689199821;    long VdYwNFjxqT46095353 = -812024702;    long VdYwNFjxqT7431300 = -465148163;    long VdYwNFjxqT17138391 = -641834397;    long VdYwNFjxqT98896843 = -629629459;    long VdYwNFjxqT48906227 = -847818171;    long VdYwNFjxqT16183385 = -489155589;    long VdYwNFjxqT65789773 = -8728561;    long VdYwNFjxqT63917472 = -642130031;    long VdYwNFjxqT45302160 = -498533388;    long VdYwNFjxqT72819828 = -137054095;    long VdYwNFjxqT19701762 = -412151052;    long VdYwNFjxqT85915457 = -582904887;    long VdYwNFjxqT82306363 = -732297283;    long VdYwNFjxqT1096884 = -746865280;    long VdYwNFjxqT96622431 = -682124821;    long VdYwNFjxqT25673114 = -107857843;    long VdYwNFjxqT72678059 = -525211071;    long VdYwNFjxqT64388248 = -223145571;    long VdYwNFjxqT10174936 = -73406383;    long VdYwNFjxqT594150 = -593830555;    long VdYwNFjxqT13149322 = -520479;    long VdYwNFjxqT63690056 = -423564076;    long VdYwNFjxqT42191129 = -989515108;    long VdYwNFjxqT93741981 = -635121518;    long VdYwNFjxqT1063697 = -318977179;    long VdYwNFjxqT6561197 = -930993576;    long VdYwNFjxqT21785620 = -334448828;    long VdYwNFjxqT51471953 = 94710226;    long VdYwNFjxqT30702031 = -179706380;    long VdYwNFjxqT37590780 = -311742826;    long VdYwNFjxqT93396041 = -431059415;    long VdYwNFjxqT53274140 = -978546797;    long VdYwNFjxqT76761323 = 10652758;    long VdYwNFjxqT37815348 = -221142398;    long VdYwNFjxqT25165705 = -364945402;    long VdYwNFjxqT49975718 = -286931686;    long VdYwNFjxqT71398106 = -111932352;    long VdYwNFjxqT5003277 = -587663448;    long VdYwNFjxqT3607084 = -463666410;    long VdYwNFjxqT65000276 = -152612848;    long VdYwNFjxqT26171568 = -423779230;    long VdYwNFjxqT97321445 = -526645653;    long VdYwNFjxqT34725573 = -877207068;    long VdYwNFjxqT14868696 = -284029624;    long VdYwNFjxqT94682183 = -711329233;     VdYwNFjxqT89813141 = VdYwNFjxqT37310953;     VdYwNFjxqT37310953 = VdYwNFjxqT25264318;     VdYwNFjxqT25264318 = VdYwNFjxqT12118795;     VdYwNFjxqT12118795 = VdYwNFjxqT30887697;     VdYwNFjxqT30887697 = VdYwNFjxqT47557577;     VdYwNFjxqT47557577 = VdYwNFjxqT94200919;     VdYwNFjxqT94200919 = VdYwNFjxqT88402337;     VdYwNFjxqT88402337 = VdYwNFjxqT69686181;     VdYwNFjxqT69686181 = VdYwNFjxqT81500868;     VdYwNFjxqT81500868 = VdYwNFjxqT60859130;     VdYwNFjxqT60859130 = VdYwNFjxqT83281385;     VdYwNFjxqT83281385 = VdYwNFjxqT27548537;     VdYwNFjxqT27548537 = VdYwNFjxqT72357941;     VdYwNFjxqT72357941 = VdYwNFjxqT54029448;     VdYwNFjxqT54029448 = VdYwNFjxqT14209611;     VdYwNFjxqT14209611 = VdYwNFjxqT76578179;     VdYwNFjxqT76578179 = VdYwNFjxqT16901558;     VdYwNFjxqT16901558 = VdYwNFjxqT91358597;     VdYwNFjxqT91358597 = VdYwNFjxqT92555490;     VdYwNFjxqT92555490 = VdYwNFjxqT74388239;     VdYwNFjxqT74388239 = VdYwNFjxqT43717789;     VdYwNFjxqT43717789 = VdYwNFjxqT29879654;     VdYwNFjxqT29879654 = VdYwNFjxqT8125927;     VdYwNFjxqT8125927 = VdYwNFjxqT13221951;     VdYwNFjxqT13221951 = VdYwNFjxqT81981470;     VdYwNFjxqT81981470 = VdYwNFjxqT31374192;     VdYwNFjxqT31374192 = VdYwNFjxqT28411146;     VdYwNFjxqT28411146 = VdYwNFjxqT24484866;     VdYwNFjxqT24484866 = VdYwNFjxqT24384022;     VdYwNFjxqT24384022 = VdYwNFjxqT8681040;     VdYwNFjxqT8681040 = VdYwNFjxqT41157369;     VdYwNFjxqT41157369 = VdYwNFjxqT97365928;     VdYwNFjxqT97365928 = VdYwNFjxqT45242173;     VdYwNFjxqT45242173 = VdYwNFjxqT71261058;     VdYwNFjxqT71261058 = VdYwNFjxqT57407017;     VdYwNFjxqT57407017 = VdYwNFjxqT88536496;     VdYwNFjxqT88536496 = VdYwNFjxqT3900121;     VdYwNFjxqT3900121 = VdYwNFjxqT52513310;     VdYwNFjxqT52513310 = VdYwNFjxqT81183661;     VdYwNFjxqT81183661 = VdYwNFjxqT91961341;     VdYwNFjxqT91961341 = VdYwNFjxqT61238917;     VdYwNFjxqT61238917 = VdYwNFjxqT80027732;     VdYwNFjxqT80027732 = VdYwNFjxqT87688524;     VdYwNFjxqT87688524 = VdYwNFjxqT14383945;     VdYwNFjxqT14383945 = VdYwNFjxqT12158254;     VdYwNFjxqT12158254 = VdYwNFjxqT75420273;     VdYwNFjxqT75420273 = VdYwNFjxqT9588572;     VdYwNFjxqT9588572 = VdYwNFjxqT76939193;     VdYwNFjxqT76939193 = VdYwNFjxqT93782834;     VdYwNFjxqT93782834 = VdYwNFjxqT86793241;     VdYwNFjxqT86793241 = VdYwNFjxqT15284998;     VdYwNFjxqT15284998 = VdYwNFjxqT87883228;     VdYwNFjxqT87883228 = VdYwNFjxqT20604606;     VdYwNFjxqT20604606 = VdYwNFjxqT7426826;     VdYwNFjxqT7426826 = VdYwNFjxqT46095353;     VdYwNFjxqT46095353 = VdYwNFjxqT7431300;     VdYwNFjxqT7431300 = VdYwNFjxqT17138391;     VdYwNFjxqT17138391 = VdYwNFjxqT98896843;     VdYwNFjxqT98896843 = VdYwNFjxqT48906227;     VdYwNFjxqT48906227 = VdYwNFjxqT16183385;     VdYwNFjxqT16183385 = VdYwNFjxqT65789773;     VdYwNFjxqT65789773 = VdYwNFjxqT63917472;     VdYwNFjxqT63917472 = VdYwNFjxqT45302160;     VdYwNFjxqT45302160 = VdYwNFjxqT72819828;     VdYwNFjxqT72819828 = VdYwNFjxqT19701762;     VdYwNFjxqT19701762 = VdYwNFjxqT85915457;     VdYwNFjxqT85915457 = VdYwNFjxqT82306363;     VdYwNFjxqT82306363 = VdYwNFjxqT1096884;     VdYwNFjxqT1096884 = VdYwNFjxqT96622431;     VdYwNFjxqT96622431 = VdYwNFjxqT25673114;     VdYwNFjxqT25673114 = VdYwNFjxqT72678059;     VdYwNFjxqT72678059 = VdYwNFjxqT64388248;     VdYwNFjxqT64388248 = VdYwNFjxqT10174936;     VdYwNFjxqT10174936 = VdYwNFjxqT594150;     VdYwNFjxqT594150 = VdYwNFjxqT13149322;     VdYwNFjxqT13149322 = VdYwNFjxqT63690056;     VdYwNFjxqT63690056 = VdYwNFjxqT42191129;     VdYwNFjxqT42191129 = VdYwNFjxqT93741981;     VdYwNFjxqT93741981 = VdYwNFjxqT1063697;     VdYwNFjxqT1063697 = VdYwNFjxqT6561197;     VdYwNFjxqT6561197 = VdYwNFjxqT21785620;     VdYwNFjxqT21785620 = VdYwNFjxqT51471953;     VdYwNFjxqT51471953 = VdYwNFjxqT30702031;     VdYwNFjxqT30702031 = VdYwNFjxqT37590780;     VdYwNFjxqT37590780 = VdYwNFjxqT93396041;     VdYwNFjxqT93396041 = VdYwNFjxqT53274140;     VdYwNFjxqT53274140 = VdYwNFjxqT76761323;     VdYwNFjxqT76761323 = VdYwNFjxqT37815348;     VdYwNFjxqT37815348 = VdYwNFjxqT25165705;     VdYwNFjxqT25165705 = VdYwNFjxqT49975718;     VdYwNFjxqT49975718 = VdYwNFjxqT71398106;     VdYwNFjxqT71398106 = VdYwNFjxqT5003277;     VdYwNFjxqT5003277 = VdYwNFjxqT3607084;     VdYwNFjxqT3607084 = VdYwNFjxqT65000276;     VdYwNFjxqT65000276 = VdYwNFjxqT26171568;     VdYwNFjxqT26171568 = VdYwNFjxqT97321445;     VdYwNFjxqT97321445 = VdYwNFjxqT34725573;     VdYwNFjxqT34725573 = VdYwNFjxqT14868696;     VdYwNFjxqT14868696 = VdYwNFjxqT94682183;     VdYwNFjxqT94682183 = VdYwNFjxqT89813141;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void toNjejyOCv39725749() {     long mBJYnYtJYs83131138 = -433238713;    long mBJYnYtJYs71057977 = -700203007;    long mBJYnYtJYs26180126 = -563322197;    long mBJYnYtJYs1412472 = -124143628;    long mBJYnYtJYs23952286 = -116337129;    long mBJYnYtJYs65275573 = -731171533;    long mBJYnYtJYs70576799 = -542501592;    long mBJYnYtJYs49871217 = -495919069;    long mBJYnYtJYs4404195 = -13451702;    long mBJYnYtJYs9790850 = -861449044;    long mBJYnYtJYs34123249 = -875237447;    long mBJYnYtJYs11737278 = -790388238;    long mBJYnYtJYs7320181 = -222064882;    long mBJYnYtJYs13565980 = -813964856;    long mBJYnYtJYs16809540 = -143106709;    long mBJYnYtJYs76419030 = -49324047;    long mBJYnYtJYs26367884 = -334503763;    long mBJYnYtJYs76397291 = -439085735;    long mBJYnYtJYs92884348 = -447439253;    long mBJYnYtJYs14598685 = -8046028;    long mBJYnYtJYs42106224 = -154400101;    long mBJYnYtJYs57783525 = -557359666;    long mBJYnYtJYs466943 = -144028103;    long mBJYnYtJYs34911388 = -888558054;    long mBJYnYtJYs7912721 = -403027971;    long mBJYnYtJYs58532654 = -407610890;    long mBJYnYtJYs58861597 = -124132748;    long mBJYnYtJYs44972396 = -341472016;    long mBJYnYtJYs99356961 = -703384842;    long mBJYnYtJYs92428282 = -819799061;    long mBJYnYtJYs23312951 = -136984021;    long mBJYnYtJYs4896882 = -95761341;    long mBJYnYtJYs31935775 = -20100258;    long mBJYnYtJYs63562039 = -610493231;    long mBJYnYtJYs14391254 = -724299177;    long mBJYnYtJYs16565195 = -337074345;    long mBJYnYtJYs56917106 = -116800024;    long mBJYnYtJYs20121670 = -59704183;    long mBJYnYtJYs90975370 = -788920332;    long mBJYnYtJYs86166654 = -589654186;    long mBJYnYtJYs11910592 = -398195489;    long mBJYnYtJYs57082240 = -928190792;    long mBJYnYtJYs43777961 = -451372103;    long mBJYnYtJYs48931524 = -413183301;    long mBJYnYtJYs14364025 = -145282513;    long mBJYnYtJYs31325256 = -703895996;    long mBJYnYtJYs71012413 = 44196936;    long mBJYnYtJYs38872708 = -893194037;    long mBJYnYtJYs79867651 = -475780153;    long mBJYnYtJYs99834912 = 26603514;    long mBJYnYtJYs30685166 = -716128153;    long mBJYnYtJYs27012685 = -388666427;    long mBJYnYtJYs52543233 = -102738206;    long mBJYnYtJYs92374302 = -204964105;    long mBJYnYtJYs97619524 = -909085673;    long mBJYnYtJYs25347614 = -875879047;    long mBJYnYtJYs70591034 = -456174904;    long mBJYnYtJYs91268737 = -674764144;    long mBJYnYtJYs93499750 = -721115658;    long mBJYnYtJYs65419631 = -708726239;    long mBJYnYtJYs6413976 = -507038786;    long mBJYnYtJYs25604403 = -101029576;    long mBJYnYtJYs50514255 = -792534228;    long mBJYnYtJYs11975912 = -193652641;    long mBJYnYtJYs86477899 = -624465024;    long mBJYnYtJYs29226367 = -679476107;    long mBJYnYtJYs79801502 = -670287980;    long mBJYnYtJYs43758141 = -611571651;    long mBJYnYtJYs99174726 = 10334321;    long mBJYnYtJYs244346 = -806032365;    long mBJYnYtJYs19501924 = -932524023;    long mBJYnYtJYs6246215 = -174799581;    long mBJYnYtJYs85421920 = -650165404;    long mBJYnYtJYs6717694 = -857785068;    long mBJYnYtJYs2688094 = -609850540;    long mBJYnYtJYs85023983 = -226209309;    long mBJYnYtJYs14005564 = -5987564;    long mBJYnYtJYs51535419 = -730844803;    long mBJYnYtJYs20547364 = -643275541;    long mBJYnYtJYs76587464 = -699131975;    long mBJYnYtJYs87520241 = -351807827;    long mBJYnYtJYs19988889 = -230938711;    long mBJYnYtJYs65104744 = -865691864;    long mBJYnYtJYs99522049 = -629988357;    long mBJYnYtJYs61743116 = -3670908;    long mBJYnYtJYs96300265 = -748317594;    long mBJYnYtJYs52353649 = -993023135;    long mBJYnYtJYs39561472 = -815136154;    long mBJYnYtJYs65942514 = -701407559;    long mBJYnYtJYs89043640 = -848420131;    long mBJYnYtJYs45974161 = -880899441;    long mBJYnYtJYs65648369 = -442035881;    long mBJYnYtJYs26621919 = -338588525;    long mBJYnYtJYs25555740 = 19805907;    long mBJYnYtJYs79752679 = 17384600;    long mBJYnYtJYs86306189 = -197165913;    long mBJYnYtJYs6567986 = -35656565;    long mBJYnYtJYs31802049 = -157719462;    long mBJYnYtJYs62453624 = -788718277;    long mBJYnYtJYs85137657 = -433238713;     mBJYnYtJYs83131138 = mBJYnYtJYs71057977;     mBJYnYtJYs71057977 = mBJYnYtJYs26180126;     mBJYnYtJYs26180126 = mBJYnYtJYs1412472;     mBJYnYtJYs1412472 = mBJYnYtJYs23952286;     mBJYnYtJYs23952286 = mBJYnYtJYs65275573;     mBJYnYtJYs65275573 = mBJYnYtJYs70576799;     mBJYnYtJYs70576799 = mBJYnYtJYs49871217;     mBJYnYtJYs49871217 = mBJYnYtJYs4404195;     mBJYnYtJYs4404195 = mBJYnYtJYs9790850;     mBJYnYtJYs9790850 = mBJYnYtJYs34123249;     mBJYnYtJYs34123249 = mBJYnYtJYs11737278;     mBJYnYtJYs11737278 = mBJYnYtJYs7320181;     mBJYnYtJYs7320181 = mBJYnYtJYs13565980;     mBJYnYtJYs13565980 = mBJYnYtJYs16809540;     mBJYnYtJYs16809540 = mBJYnYtJYs76419030;     mBJYnYtJYs76419030 = mBJYnYtJYs26367884;     mBJYnYtJYs26367884 = mBJYnYtJYs76397291;     mBJYnYtJYs76397291 = mBJYnYtJYs92884348;     mBJYnYtJYs92884348 = mBJYnYtJYs14598685;     mBJYnYtJYs14598685 = mBJYnYtJYs42106224;     mBJYnYtJYs42106224 = mBJYnYtJYs57783525;     mBJYnYtJYs57783525 = mBJYnYtJYs466943;     mBJYnYtJYs466943 = mBJYnYtJYs34911388;     mBJYnYtJYs34911388 = mBJYnYtJYs7912721;     mBJYnYtJYs7912721 = mBJYnYtJYs58532654;     mBJYnYtJYs58532654 = mBJYnYtJYs58861597;     mBJYnYtJYs58861597 = mBJYnYtJYs44972396;     mBJYnYtJYs44972396 = mBJYnYtJYs99356961;     mBJYnYtJYs99356961 = mBJYnYtJYs92428282;     mBJYnYtJYs92428282 = mBJYnYtJYs23312951;     mBJYnYtJYs23312951 = mBJYnYtJYs4896882;     mBJYnYtJYs4896882 = mBJYnYtJYs31935775;     mBJYnYtJYs31935775 = mBJYnYtJYs63562039;     mBJYnYtJYs63562039 = mBJYnYtJYs14391254;     mBJYnYtJYs14391254 = mBJYnYtJYs16565195;     mBJYnYtJYs16565195 = mBJYnYtJYs56917106;     mBJYnYtJYs56917106 = mBJYnYtJYs20121670;     mBJYnYtJYs20121670 = mBJYnYtJYs90975370;     mBJYnYtJYs90975370 = mBJYnYtJYs86166654;     mBJYnYtJYs86166654 = mBJYnYtJYs11910592;     mBJYnYtJYs11910592 = mBJYnYtJYs57082240;     mBJYnYtJYs57082240 = mBJYnYtJYs43777961;     mBJYnYtJYs43777961 = mBJYnYtJYs48931524;     mBJYnYtJYs48931524 = mBJYnYtJYs14364025;     mBJYnYtJYs14364025 = mBJYnYtJYs31325256;     mBJYnYtJYs31325256 = mBJYnYtJYs71012413;     mBJYnYtJYs71012413 = mBJYnYtJYs38872708;     mBJYnYtJYs38872708 = mBJYnYtJYs79867651;     mBJYnYtJYs79867651 = mBJYnYtJYs99834912;     mBJYnYtJYs99834912 = mBJYnYtJYs30685166;     mBJYnYtJYs30685166 = mBJYnYtJYs27012685;     mBJYnYtJYs27012685 = mBJYnYtJYs52543233;     mBJYnYtJYs52543233 = mBJYnYtJYs92374302;     mBJYnYtJYs92374302 = mBJYnYtJYs97619524;     mBJYnYtJYs97619524 = mBJYnYtJYs25347614;     mBJYnYtJYs25347614 = mBJYnYtJYs70591034;     mBJYnYtJYs70591034 = mBJYnYtJYs91268737;     mBJYnYtJYs91268737 = mBJYnYtJYs93499750;     mBJYnYtJYs93499750 = mBJYnYtJYs65419631;     mBJYnYtJYs65419631 = mBJYnYtJYs6413976;     mBJYnYtJYs6413976 = mBJYnYtJYs25604403;     mBJYnYtJYs25604403 = mBJYnYtJYs50514255;     mBJYnYtJYs50514255 = mBJYnYtJYs11975912;     mBJYnYtJYs11975912 = mBJYnYtJYs86477899;     mBJYnYtJYs86477899 = mBJYnYtJYs29226367;     mBJYnYtJYs29226367 = mBJYnYtJYs79801502;     mBJYnYtJYs79801502 = mBJYnYtJYs43758141;     mBJYnYtJYs43758141 = mBJYnYtJYs99174726;     mBJYnYtJYs99174726 = mBJYnYtJYs244346;     mBJYnYtJYs244346 = mBJYnYtJYs19501924;     mBJYnYtJYs19501924 = mBJYnYtJYs6246215;     mBJYnYtJYs6246215 = mBJYnYtJYs85421920;     mBJYnYtJYs85421920 = mBJYnYtJYs6717694;     mBJYnYtJYs6717694 = mBJYnYtJYs2688094;     mBJYnYtJYs2688094 = mBJYnYtJYs85023983;     mBJYnYtJYs85023983 = mBJYnYtJYs14005564;     mBJYnYtJYs14005564 = mBJYnYtJYs51535419;     mBJYnYtJYs51535419 = mBJYnYtJYs20547364;     mBJYnYtJYs20547364 = mBJYnYtJYs76587464;     mBJYnYtJYs76587464 = mBJYnYtJYs87520241;     mBJYnYtJYs87520241 = mBJYnYtJYs19988889;     mBJYnYtJYs19988889 = mBJYnYtJYs65104744;     mBJYnYtJYs65104744 = mBJYnYtJYs99522049;     mBJYnYtJYs99522049 = mBJYnYtJYs61743116;     mBJYnYtJYs61743116 = mBJYnYtJYs96300265;     mBJYnYtJYs96300265 = mBJYnYtJYs52353649;     mBJYnYtJYs52353649 = mBJYnYtJYs39561472;     mBJYnYtJYs39561472 = mBJYnYtJYs65942514;     mBJYnYtJYs65942514 = mBJYnYtJYs89043640;     mBJYnYtJYs89043640 = mBJYnYtJYs45974161;     mBJYnYtJYs45974161 = mBJYnYtJYs65648369;     mBJYnYtJYs65648369 = mBJYnYtJYs26621919;     mBJYnYtJYs26621919 = mBJYnYtJYs25555740;     mBJYnYtJYs25555740 = mBJYnYtJYs79752679;     mBJYnYtJYs79752679 = mBJYnYtJYs86306189;     mBJYnYtJYs86306189 = mBJYnYtJYs6567986;     mBJYnYtJYs6567986 = mBJYnYtJYs31802049;     mBJYnYtJYs31802049 = mBJYnYtJYs62453624;     mBJYnYtJYs62453624 = mBJYnYtJYs85137657;     mBJYnYtJYs85137657 = mBJYnYtJYs83131138;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void wmiyQkkFgg76040526() {     long ynRpOWkiVl60179125 = -632646118;    long ynRpOWkiVl63830780 = -85715750;    long ynRpOWkiVl14368839 = -131232041;    long ynRpOWkiVl2774241 = -316112741;    long ynRpOWkiVl87738108 = 88525952;    long ynRpOWkiVl59527655 = 78502064;    long ynRpOWkiVl15285906 = -961845103;    long ynRpOWkiVl85466128 = -662906629;    long ynRpOWkiVl6601572 = -230855042;    long ynRpOWkiVl87546906 = -146184776;    long ynRpOWkiVl29955798 = -437746348;    long ynRpOWkiVl16113263 = -392079258;    long ynRpOWkiVl6292762 = -622664031;    long ynRpOWkiVl95302942 = -608624139;    long ynRpOWkiVl38596781 = -814993202;    long ynRpOWkiVl35877932 = -828355503;    long ynRpOWkiVl20170240 = -165768841;    long ynRpOWkiVl26969762 = -557321271;    long ynRpOWkiVl14958310 = -250370660;    long ynRpOWkiVl38675761 = 5977823;    long ynRpOWkiVl97494294 = 96495813;    long ynRpOWkiVl94555066 = -718578204;    long ynRpOWkiVl3351701 = -447894274;    long ynRpOWkiVl19189435 = -170671205;    long ynRpOWkiVl10762895 = 29193306;    long ynRpOWkiVl71502519 = -947007971;    long ynRpOWkiVl37719360 = -135763807;    long ynRpOWkiVl68729322 = -629011342;    long ynRpOWkiVl33468753 = -781816521;    long ynRpOWkiVl19931001 = -255421522;    long ynRpOWkiVl85896605 = -380079464;    long ynRpOWkiVl8705826 = -767507462;    long ynRpOWkiVl95177898 = -904017151;    long ynRpOWkiVl17323782 = -738059158;    long ynRpOWkiVl42766737 = -746604935;    long ynRpOWkiVl2756417 = -820699571;    long ynRpOWkiVl13119939 = -700521218;    long ynRpOWkiVl16807330 = -905995996;    long ynRpOWkiVl54739554 = -859233549;    long ynRpOWkiVl58465871 = -774755128;    long ynRpOWkiVl8771697 = -925979414;    long ynRpOWkiVl96567628 = 160512;    long ynRpOWkiVl80044975 = -720277750;    long ynRpOWkiVl98138144 = -327262172;    long ynRpOWkiVl58313302 = -713684187;    long ynRpOWkiVl54331172 = -42870035;    long ynRpOWkiVl72085730 = -79990078;    long ynRpOWkiVl31515111 = -18620044;    long ynRpOWkiVl98011934 = -761463179;    long ynRpOWkiVl21714898 = -768411153;    long ynRpOWkiVl1408553 = -49864925;    long ynRpOWkiVl75698834 = -952405944;    long ynRpOWkiVl87137290 = -722510886;    long ynRpOWkiVl99826333 = -944611547;    long ynRpOWkiVl78546231 = -588799191;    long ynRpOWkiVl65624059 = -914067915;    long ynRpOWkiVl60479079 = -637821477;    long ynRpOWkiVl95179403 = -960560836;    long ynRpOWkiVl92011346 = -245306047;    long ynRpOWkiVl16235589 = 35533922;    long ynRpOWkiVl21808295 = -785734129;    long ynRpOWkiVl46556584 = -232833762;    long ynRpOWkiVl51997376 = -881090108;    long ynRpOWkiVl86670570 = -975433520;    long ynRpOWkiVl1650301 = -766105313;    long ynRpOWkiVl21249973 = -670238887;    long ynRpOWkiVl20935364 = -488062107;    long ynRpOWkiVl88968980 = -884604874;    long ynRpOWkiVl52536205 = -862019205;    long ynRpOWkiVl35840365 = -994293631;    long ynRpOWkiVl22757993 = -27834285;    long ynRpOWkiVl3362911 = -259772846;    long ynRpOWkiVl72230207 = -698087723;    long ynRpOWkiVl56492439 = -475615532;    long ynRpOWkiVl29904065 = -68042763;    long ynRpOWkiVl926666 = -903664699;    long ynRpOWkiVl14510091 = -998300455;    long ynRpOWkiVl5213557 = -20632102;    long ynRpOWkiVl60876133 = -456987018;    long ynRpOWkiVl56431722 = -927936659;    long ynRpOWkiVl99416789 = -767017893;    long ynRpOWkiVl6204250 = -17143763;    long ynRpOWkiVl70717387 = -867548163;    long ynRpOWkiVl11753855 = 86594631;    long ynRpOWkiVl18522449 = -105556598;    long ynRpOWkiVl10197772 = -427673520;    long ynRpOWkiVl21568535 = 55003423;    long ynRpOWkiVl95351564 = -959405605;    long ynRpOWkiVl38777550 = -49259967;    long ynRpOWkiVl77142678 = -832537021;    long ynRpOWkiVl42277337 = -82878095;    long ynRpOWkiVl17940536 = -739960382;    long ynRpOWkiVl24795984 = -560689950;    long ynRpOWkiVl38503966 = -794767472;    long ynRpOWkiVl36657577 = -989021000;    long ynRpOWkiVl62215112 = -593145653;    long ynRpOWkiVl44570253 = -118749381;    long ynRpOWkiVl93374405 = -744844231;    long ynRpOWkiVl96487843 = -561156860;    long ynRpOWkiVl37063329 = -632646118;     ynRpOWkiVl60179125 = ynRpOWkiVl63830780;     ynRpOWkiVl63830780 = ynRpOWkiVl14368839;     ynRpOWkiVl14368839 = ynRpOWkiVl2774241;     ynRpOWkiVl2774241 = ynRpOWkiVl87738108;     ynRpOWkiVl87738108 = ynRpOWkiVl59527655;     ynRpOWkiVl59527655 = ynRpOWkiVl15285906;     ynRpOWkiVl15285906 = ynRpOWkiVl85466128;     ynRpOWkiVl85466128 = ynRpOWkiVl6601572;     ynRpOWkiVl6601572 = ynRpOWkiVl87546906;     ynRpOWkiVl87546906 = ynRpOWkiVl29955798;     ynRpOWkiVl29955798 = ynRpOWkiVl16113263;     ynRpOWkiVl16113263 = ynRpOWkiVl6292762;     ynRpOWkiVl6292762 = ynRpOWkiVl95302942;     ynRpOWkiVl95302942 = ynRpOWkiVl38596781;     ynRpOWkiVl38596781 = ynRpOWkiVl35877932;     ynRpOWkiVl35877932 = ynRpOWkiVl20170240;     ynRpOWkiVl20170240 = ynRpOWkiVl26969762;     ynRpOWkiVl26969762 = ynRpOWkiVl14958310;     ynRpOWkiVl14958310 = ynRpOWkiVl38675761;     ynRpOWkiVl38675761 = ynRpOWkiVl97494294;     ynRpOWkiVl97494294 = ynRpOWkiVl94555066;     ynRpOWkiVl94555066 = ynRpOWkiVl3351701;     ynRpOWkiVl3351701 = ynRpOWkiVl19189435;     ynRpOWkiVl19189435 = ynRpOWkiVl10762895;     ynRpOWkiVl10762895 = ynRpOWkiVl71502519;     ynRpOWkiVl71502519 = ynRpOWkiVl37719360;     ynRpOWkiVl37719360 = ynRpOWkiVl68729322;     ynRpOWkiVl68729322 = ynRpOWkiVl33468753;     ynRpOWkiVl33468753 = ynRpOWkiVl19931001;     ynRpOWkiVl19931001 = ynRpOWkiVl85896605;     ynRpOWkiVl85896605 = ynRpOWkiVl8705826;     ynRpOWkiVl8705826 = ynRpOWkiVl95177898;     ynRpOWkiVl95177898 = ynRpOWkiVl17323782;     ynRpOWkiVl17323782 = ynRpOWkiVl42766737;     ynRpOWkiVl42766737 = ynRpOWkiVl2756417;     ynRpOWkiVl2756417 = ynRpOWkiVl13119939;     ynRpOWkiVl13119939 = ynRpOWkiVl16807330;     ynRpOWkiVl16807330 = ynRpOWkiVl54739554;     ynRpOWkiVl54739554 = ynRpOWkiVl58465871;     ynRpOWkiVl58465871 = ynRpOWkiVl8771697;     ynRpOWkiVl8771697 = ynRpOWkiVl96567628;     ynRpOWkiVl96567628 = ynRpOWkiVl80044975;     ynRpOWkiVl80044975 = ynRpOWkiVl98138144;     ynRpOWkiVl98138144 = ynRpOWkiVl58313302;     ynRpOWkiVl58313302 = ynRpOWkiVl54331172;     ynRpOWkiVl54331172 = ynRpOWkiVl72085730;     ynRpOWkiVl72085730 = ynRpOWkiVl31515111;     ynRpOWkiVl31515111 = ynRpOWkiVl98011934;     ynRpOWkiVl98011934 = ynRpOWkiVl21714898;     ynRpOWkiVl21714898 = ynRpOWkiVl1408553;     ynRpOWkiVl1408553 = ynRpOWkiVl75698834;     ynRpOWkiVl75698834 = ynRpOWkiVl87137290;     ynRpOWkiVl87137290 = ynRpOWkiVl99826333;     ynRpOWkiVl99826333 = ynRpOWkiVl78546231;     ynRpOWkiVl78546231 = ynRpOWkiVl65624059;     ynRpOWkiVl65624059 = ynRpOWkiVl60479079;     ynRpOWkiVl60479079 = ynRpOWkiVl95179403;     ynRpOWkiVl95179403 = ynRpOWkiVl92011346;     ynRpOWkiVl92011346 = ynRpOWkiVl16235589;     ynRpOWkiVl16235589 = ynRpOWkiVl21808295;     ynRpOWkiVl21808295 = ynRpOWkiVl46556584;     ynRpOWkiVl46556584 = ynRpOWkiVl51997376;     ynRpOWkiVl51997376 = ynRpOWkiVl86670570;     ynRpOWkiVl86670570 = ynRpOWkiVl1650301;     ynRpOWkiVl1650301 = ynRpOWkiVl21249973;     ynRpOWkiVl21249973 = ynRpOWkiVl20935364;     ynRpOWkiVl20935364 = ynRpOWkiVl88968980;     ynRpOWkiVl88968980 = ynRpOWkiVl52536205;     ynRpOWkiVl52536205 = ynRpOWkiVl35840365;     ynRpOWkiVl35840365 = ynRpOWkiVl22757993;     ynRpOWkiVl22757993 = ynRpOWkiVl3362911;     ynRpOWkiVl3362911 = ynRpOWkiVl72230207;     ynRpOWkiVl72230207 = ynRpOWkiVl56492439;     ynRpOWkiVl56492439 = ynRpOWkiVl29904065;     ynRpOWkiVl29904065 = ynRpOWkiVl926666;     ynRpOWkiVl926666 = ynRpOWkiVl14510091;     ynRpOWkiVl14510091 = ynRpOWkiVl5213557;     ynRpOWkiVl5213557 = ynRpOWkiVl60876133;     ynRpOWkiVl60876133 = ynRpOWkiVl56431722;     ynRpOWkiVl56431722 = ynRpOWkiVl99416789;     ynRpOWkiVl99416789 = ynRpOWkiVl6204250;     ynRpOWkiVl6204250 = ynRpOWkiVl70717387;     ynRpOWkiVl70717387 = ynRpOWkiVl11753855;     ynRpOWkiVl11753855 = ynRpOWkiVl18522449;     ynRpOWkiVl18522449 = ynRpOWkiVl10197772;     ynRpOWkiVl10197772 = ynRpOWkiVl21568535;     ynRpOWkiVl21568535 = ynRpOWkiVl95351564;     ynRpOWkiVl95351564 = ynRpOWkiVl38777550;     ynRpOWkiVl38777550 = ynRpOWkiVl77142678;     ynRpOWkiVl77142678 = ynRpOWkiVl42277337;     ynRpOWkiVl42277337 = ynRpOWkiVl17940536;     ynRpOWkiVl17940536 = ynRpOWkiVl24795984;     ynRpOWkiVl24795984 = ynRpOWkiVl38503966;     ynRpOWkiVl38503966 = ynRpOWkiVl36657577;     ynRpOWkiVl36657577 = ynRpOWkiVl62215112;     ynRpOWkiVl62215112 = ynRpOWkiVl44570253;     ynRpOWkiVl44570253 = ynRpOWkiVl93374405;     ynRpOWkiVl93374405 = ynRpOWkiVl96487843;     ynRpOWkiVl96487843 = ynRpOWkiVl37063329;     ynRpOWkiVl37063329 = ynRpOWkiVl60179125;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void kZEUacdeso60450798() {     float velkcmyZkp80825938 = -880188355;    float velkcmyZkp36433535 = 10694607;    float velkcmyZkp20322667 = -816372961;    float velkcmyZkp31515423 = -96656753;    float velkcmyZkp15818506 = -596146887;    float velkcmyZkp75631491 = -497653696;    float velkcmyZkp60075303 = 85976837;    float velkcmyZkp44219047 = -237856706;    float velkcmyZkp64521749 = -934436923;    float velkcmyZkp7993002 = -449885280;    float velkcmyZkp87445413 = -992252332;    float velkcmyZkp72378591 = 40548177;    float velkcmyZkp60009834 = -823444946;    float velkcmyZkp44533142 = -118517138;    float velkcmyZkp5195883 = -936777844;    float velkcmyZkp49329982 = -372935828;    float velkcmyZkp55912636 = -489664899;    float velkcmyZkp89513655 = -19291184;    float velkcmyZkp36987294 = -871045302;    float velkcmyZkp1517793 = -445406820;    float velkcmyZkp12382118 = -145033107;    float velkcmyZkp89673030 = -607357422;    float velkcmyZkp32954307 = -534955800;    float velkcmyZkp35776554 = -223762503;    float velkcmyZkp21219300 = -791731772;    float velkcmyZkp89530657 = -426446862;    float velkcmyZkp23646332 = -756541367;    float velkcmyZkp3064191 = 59139649;    float velkcmyZkp25120076 = -735727475;    float velkcmyZkp41170500 = -570390123;    float velkcmyZkp18028111 = -968833075;    float velkcmyZkp41760179 = -839670947;    float velkcmyZkp92212576 = -177436922;    float velkcmyZkp82900884 = -484100142;    float velkcmyZkp32559502 = -788037158;    float velkcmyZkp94870817 = -684750429;    float velkcmyZkp90867450 = -138854459;    float velkcmyZkp72038078 = -686556113;    float velkcmyZkp9758041 = 25526752;    float velkcmyZkp32473839 = -274437255;    float velkcmyZkp59736731 = -550956217;    float velkcmyZkp14323866 = 85427381;    float velkcmyZkp99224455 = -576379493;    float velkcmyZkp24070368 = -66960476;    float velkcmyZkp67280900 = -552275133;    float velkcmyZkp91057982 = 64759307;    float velkcmyZkp68990277 = -7020344;    float velkcmyZkp28667007 = -102321357;    float velkcmyZkp92447178 = -145050044;    float velkcmyZkp95176451 = -741688696;    float velkcmyZkp29542404 = -380353302;    float velkcmyZkp78480782 = -933234977;    float velkcmyZkp73799209 = -294349434;    float velkcmyZkp47741341 = -79432932;    float velkcmyZkp48068681 = -517414564;    float velkcmyZkp91152908 = -172830933;    float velkcmyZkp3479228 = -454349594;    float velkcmyZkp84546113 = -492610458;    float velkcmyZkp10296123 = -304924981;    float velkcmyZkp26287849 = -69700026;    float velkcmyZkp51985159 = -741112329;    float velkcmyZkp57011112 = -973162813;    float velkcmyZkp19098971 = -502129232;    float velkcmyZkp23351250 = -264046800;    float velkcmyZkp89964891 = -481052205;    float velkcmyZkp45685234 = -52581386;    float velkcmyZkp80166015 = -782014901;    float velkcmyZkp77108949 = -239344804;    float velkcmyZkp11973640 = -330479981;    float velkcmyZkp10325065 = -152027415;    float velkcmyZkp58462532 = -134081369;    float velkcmyZkp83874558 = -803108786;    float velkcmyZkp79755614 = 55182064;    float velkcmyZkp4513455 = -496608047;    float velkcmyZkp41781062 = -894450604;    float velkcmyZkp98058251 = -130460489;    float velkcmyZkp90448574 = 69022070;    float velkcmyZkp8883939 = -367995324;    float velkcmyZkp68495653 = -671487371;    float velkcmyZkp30161317 = -756491079;    float velkcmyZkp20540380 = -319426518;    float velkcmyZkp94979325 = -554220011;    float velkcmyZkp10617013 = -795810307;    float velkcmyZkp29943624 = -994038779;    float velkcmyZkp11628096 = -90036822;    float velkcmyZkp39547329 = 64401901;    float velkcmyZkp67960970 = -445321513;    float velkcmyZkp44471235 = 1996009;    float velkcmyZkp34832204 = -966685578;    float velkcmyZkp41406594 = -515206225;    float velkcmyZkp91391589 = -130400836;    float velkcmyZkp6321338 = -646244001;    float velkcmyZkp61741955 = -281631132;    float velkcmyZkp83470192 = -904773223;    float velkcmyZkp80488679 = -533324926;    float velkcmyZkp2725619 = -577793404;    float velkcmyZkp95224894 = -412443387;    float velkcmyZkp75873206 = -212332693;    float velkcmyZkp34105477 = -585908272;    float velkcmyZkp21595667 = -880188355;     velkcmyZkp80825938 = velkcmyZkp36433535;     velkcmyZkp36433535 = velkcmyZkp20322667;     velkcmyZkp20322667 = velkcmyZkp31515423;     velkcmyZkp31515423 = velkcmyZkp15818506;     velkcmyZkp15818506 = velkcmyZkp75631491;     velkcmyZkp75631491 = velkcmyZkp60075303;     velkcmyZkp60075303 = velkcmyZkp44219047;     velkcmyZkp44219047 = velkcmyZkp64521749;     velkcmyZkp64521749 = velkcmyZkp7993002;     velkcmyZkp7993002 = velkcmyZkp87445413;     velkcmyZkp87445413 = velkcmyZkp72378591;     velkcmyZkp72378591 = velkcmyZkp60009834;     velkcmyZkp60009834 = velkcmyZkp44533142;     velkcmyZkp44533142 = velkcmyZkp5195883;     velkcmyZkp5195883 = velkcmyZkp49329982;     velkcmyZkp49329982 = velkcmyZkp55912636;     velkcmyZkp55912636 = velkcmyZkp89513655;     velkcmyZkp89513655 = velkcmyZkp36987294;     velkcmyZkp36987294 = velkcmyZkp1517793;     velkcmyZkp1517793 = velkcmyZkp12382118;     velkcmyZkp12382118 = velkcmyZkp89673030;     velkcmyZkp89673030 = velkcmyZkp32954307;     velkcmyZkp32954307 = velkcmyZkp35776554;     velkcmyZkp35776554 = velkcmyZkp21219300;     velkcmyZkp21219300 = velkcmyZkp89530657;     velkcmyZkp89530657 = velkcmyZkp23646332;     velkcmyZkp23646332 = velkcmyZkp3064191;     velkcmyZkp3064191 = velkcmyZkp25120076;     velkcmyZkp25120076 = velkcmyZkp41170500;     velkcmyZkp41170500 = velkcmyZkp18028111;     velkcmyZkp18028111 = velkcmyZkp41760179;     velkcmyZkp41760179 = velkcmyZkp92212576;     velkcmyZkp92212576 = velkcmyZkp82900884;     velkcmyZkp82900884 = velkcmyZkp32559502;     velkcmyZkp32559502 = velkcmyZkp94870817;     velkcmyZkp94870817 = velkcmyZkp90867450;     velkcmyZkp90867450 = velkcmyZkp72038078;     velkcmyZkp72038078 = velkcmyZkp9758041;     velkcmyZkp9758041 = velkcmyZkp32473839;     velkcmyZkp32473839 = velkcmyZkp59736731;     velkcmyZkp59736731 = velkcmyZkp14323866;     velkcmyZkp14323866 = velkcmyZkp99224455;     velkcmyZkp99224455 = velkcmyZkp24070368;     velkcmyZkp24070368 = velkcmyZkp67280900;     velkcmyZkp67280900 = velkcmyZkp91057982;     velkcmyZkp91057982 = velkcmyZkp68990277;     velkcmyZkp68990277 = velkcmyZkp28667007;     velkcmyZkp28667007 = velkcmyZkp92447178;     velkcmyZkp92447178 = velkcmyZkp95176451;     velkcmyZkp95176451 = velkcmyZkp29542404;     velkcmyZkp29542404 = velkcmyZkp78480782;     velkcmyZkp78480782 = velkcmyZkp73799209;     velkcmyZkp73799209 = velkcmyZkp47741341;     velkcmyZkp47741341 = velkcmyZkp48068681;     velkcmyZkp48068681 = velkcmyZkp91152908;     velkcmyZkp91152908 = velkcmyZkp3479228;     velkcmyZkp3479228 = velkcmyZkp84546113;     velkcmyZkp84546113 = velkcmyZkp10296123;     velkcmyZkp10296123 = velkcmyZkp26287849;     velkcmyZkp26287849 = velkcmyZkp51985159;     velkcmyZkp51985159 = velkcmyZkp57011112;     velkcmyZkp57011112 = velkcmyZkp19098971;     velkcmyZkp19098971 = velkcmyZkp23351250;     velkcmyZkp23351250 = velkcmyZkp89964891;     velkcmyZkp89964891 = velkcmyZkp45685234;     velkcmyZkp45685234 = velkcmyZkp80166015;     velkcmyZkp80166015 = velkcmyZkp77108949;     velkcmyZkp77108949 = velkcmyZkp11973640;     velkcmyZkp11973640 = velkcmyZkp10325065;     velkcmyZkp10325065 = velkcmyZkp58462532;     velkcmyZkp58462532 = velkcmyZkp83874558;     velkcmyZkp83874558 = velkcmyZkp79755614;     velkcmyZkp79755614 = velkcmyZkp4513455;     velkcmyZkp4513455 = velkcmyZkp41781062;     velkcmyZkp41781062 = velkcmyZkp98058251;     velkcmyZkp98058251 = velkcmyZkp90448574;     velkcmyZkp90448574 = velkcmyZkp8883939;     velkcmyZkp8883939 = velkcmyZkp68495653;     velkcmyZkp68495653 = velkcmyZkp30161317;     velkcmyZkp30161317 = velkcmyZkp20540380;     velkcmyZkp20540380 = velkcmyZkp94979325;     velkcmyZkp94979325 = velkcmyZkp10617013;     velkcmyZkp10617013 = velkcmyZkp29943624;     velkcmyZkp29943624 = velkcmyZkp11628096;     velkcmyZkp11628096 = velkcmyZkp39547329;     velkcmyZkp39547329 = velkcmyZkp67960970;     velkcmyZkp67960970 = velkcmyZkp44471235;     velkcmyZkp44471235 = velkcmyZkp34832204;     velkcmyZkp34832204 = velkcmyZkp41406594;     velkcmyZkp41406594 = velkcmyZkp91391589;     velkcmyZkp91391589 = velkcmyZkp6321338;     velkcmyZkp6321338 = velkcmyZkp61741955;     velkcmyZkp61741955 = velkcmyZkp83470192;     velkcmyZkp83470192 = velkcmyZkp80488679;     velkcmyZkp80488679 = velkcmyZkp2725619;     velkcmyZkp2725619 = velkcmyZkp95224894;     velkcmyZkp95224894 = velkcmyZkp75873206;     velkcmyZkp75873206 = velkcmyZkp34105477;     velkcmyZkp34105477 = velkcmyZkp21595667;     velkcmyZkp21595667 = velkcmyZkp80825938;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void MiICLjscjr57728627() {     float nHJjxqENKf38678496 = -8345076;    float nHJjxqENKf95480797 = -875804929;    float nHJjxqENKf85165209 = -764565267;    float nHJjxqENKf33665605 = -103674525;    float nHJjxqENKf61437927 = -824447412;    float nHJjxqENKf91932048 = -921177157;    float nHJjxqENKf94341112 = -976199737;    float nHJjxqENKf12770416 = -648510174;    float nHJjxqENKf80462321 = -493318299;    float nHJjxqENKf18019786 = -220506740;    float nHJjxqENKf42848402 = -831412390;    float nHJjxqENKf14558012 = -338839525;    float nHJjxqENKf33399747 = -872516296;    float nHJjxqENKf86444537 = -277436253;    float nHJjxqENKf54953567 = -4967720;    float nHJjxqENKf2562649 = -57619326;    float nHJjxqENKf5719165 = -374304702;    float nHJjxqENKf72249730 = -147390321;    float nHJjxqENKf58390985 = -704728582;    float nHJjxqENKf1797532 = -512577888;    float nHJjxqENKf46682663 = -83328731;    float nHJjxqENKf78613507 = -688768146;    float nHJjxqENKf69894613 = -989710734;    float nHJjxqENKf12419178 = -317659442;    float nHJjxqENKf36334808 = -10582241;    float nHJjxqENKf71957746 = -650711964;    float nHJjxqENKf60934745 = -19612288;    float nHJjxqENKf14300541 = -390119990;    float nHJjxqENKf66002404 = 91990919;    float nHJjxqENKf79771220 = -849761787;    float nHJjxqENKf47489469 = -115036480;    float nHJjxqENKf52400531 = -872891954;    float nHJjxqENKf16835 = -652432178;    float nHJjxqENKf71755161 = -996239073;    float nHJjxqENKf92239282 = -543579906;    float nHJjxqENKf45296341 = -34945365;    float nHJjxqENKf21777612 = -736845073;    float nHJjxqENKf6961903 = -541574487;    float nHJjxqENKf53143137 = -413714140;    float nHJjxqENKf45058193 = -266492144;    float nHJjxqENKf34090042 = -735388898;    float nHJjxqENKf6499723 = -173234519;    float nHJjxqENKf33874666 = -557960608;    float nHJjxqENKf4413928 = -11692092;    float nHJjxqENKf51262573 = -814670371;    float nHJjxqENKf4691625 = -344348750;    float nHJjxqENKf72935046 = -588136335;    float nHJjxqENKf15608412 = -516621585;    float nHJjxqENKf91141360 = -194739761;    float nHJjxqENKf96744363 = -687710884;    float nHJjxqENKf5922975 = 68848871;    float nHJjxqENKf21270254 = -95560857;    float nHJjxqENKf45286412 = -930252210;    float nHJjxqENKf13769463 = -14702389;    float nHJjxqENKf11045964 = -147709547;    float nHJjxqENKf60064988 = -319576931;    float nHJjxqENKf25586184 = -886094196;    float nHJjxqENKf72746032 = -346905825;    float nHJjxqENKf97330796 = 6907716;    float nHJjxqENKf89480180 = -73735448;    float nHJjxqENKf30997303 = -801564870;    float nHJjxqENKf80040571 = -486079747;    float nHJjxqENKf46768012 = -640501093;    float nHJjxqENKf691102 = -643556513;    float nHJjxqENKf70530316 = -5470260;    float nHJjxqENKf90447870 = -958520436;    float nHJjxqENKf14541177 = -686407347;    float nHJjxqENKf61644585 = -876277223;    float nHJjxqENKf94205254 = -733856347;    float nHJjxqENKf9657226 = -970022356;    float nHJjxqENKf80785037 = -320774254;    float nHJjxqENKf98757261 = -832730215;    float nHJjxqENKf19106594 = -733676182;    float nHJjxqENKf13332792 = -338236438;    float nHJjxqENKf67707489 = -777188990;    float nHJjxqENKf40182940 = -910094213;    float nHJjxqENKf44738842 = -30807538;    float nHJjxqENKf65480686 = -878018643;    float nHJjxqENKf61156604 = -502989072;    float nHJjxqENKf31643184 = -666233492;    float nHJjxqENKf99022700 = 37424371;    float nHJjxqENKf45326333 = -502990704;    float nHJjxqENKf23159181 = -95380230;    float nHJjxqENKf69258041 = -220298198;    float nHJjxqENKf73848245 = -818610658;    float nHJjxqENKf26219215 = 80524377;    float nHJjxqENKf7114119 = -942639745;    float nHJjxqENKf86247372 = -537729790;    float nHJjxqENKf60709197 = -748529526;    float nHJjxqENKf32174295 = -124002976;    float nHJjxqENKf19710157 = -148851170;    float nHJjxqENKf49031579 = -289939248;    float nHJjxqENKf9631106 = -448482203;    float nHJjxqENKf63662956 = -239978692;    float nHJjxqENKf14060890 = -464927275;    float nHJjxqENKf54049470 = -149309152;    float nHJjxqENKf59731711 = -532733426;    float nHJjxqENKf33183565 = -914404096;    float nHJjxqENKf33883611 = 93778168;    float nHJjxqENKf60814702 = -8345076;     nHJjxqENKf38678496 = nHJjxqENKf95480797;     nHJjxqENKf95480797 = nHJjxqENKf85165209;     nHJjxqENKf85165209 = nHJjxqENKf33665605;     nHJjxqENKf33665605 = nHJjxqENKf61437927;     nHJjxqENKf61437927 = nHJjxqENKf91932048;     nHJjxqENKf91932048 = nHJjxqENKf94341112;     nHJjxqENKf94341112 = nHJjxqENKf12770416;     nHJjxqENKf12770416 = nHJjxqENKf80462321;     nHJjxqENKf80462321 = nHJjxqENKf18019786;     nHJjxqENKf18019786 = nHJjxqENKf42848402;     nHJjxqENKf42848402 = nHJjxqENKf14558012;     nHJjxqENKf14558012 = nHJjxqENKf33399747;     nHJjxqENKf33399747 = nHJjxqENKf86444537;     nHJjxqENKf86444537 = nHJjxqENKf54953567;     nHJjxqENKf54953567 = nHJjxqENKf2562649;     nHJjxqENKf2562649 = nHJjxqENKf5719165;     nHJjxqENKf5719165 = nHJjxqENKf72249730;     nHJjxqENKf72249730 = nHJjxqENKf58390985;     nHJjxqENKf58390985 = nHJjxqENKf1797532;     nHJjxqENKf1797532 = nHJjxqENKf46682663;     nHJjxqENKf46682663 = nHJjxqENKf78613507;     nHJjxqENKf78613507 = nHJjxqENKf69894613;     nHJjxqENKf69894613 = nHJjxqENKf12419178;     nHJjxqENKf12419178 = nHJjxqENKf36334808;     nHJjxqENKf36334808 = nHJjxqENKf71957746;     nHJjxqENKf71957746 = nHJjxqENKf60934745;     nHJjxqENKf60934745 = nHJjxqENKf14300541;     nHJjxqENKf14300541 = nHJjxqENKf66002404;     nHJjxqENKf66002404 = nHJjxqENKf79771220;     nHJjxqENKf79771220 = nHJjxqENKf47489469;     nHJjxqENKf47489469 = nHJjxqENKf52400531;     nHJjxqENKf52400531 = nHJjxqENKf16835;     nHJjxqENKf16835 = nHJjxqENKf71755161;     nHJjxqENKf71755161 = nHJjxqENKf92239282;     nHJjxqENKf92239282 = nHJjxqENKf45296341;     nHJjxqENKf45296341 = nHJjxqENKf21777612;     nHJjxqENKf21777612 = nHJjxqENKf6961903;     nHJjxqENKf6961903 = nHJjxqENKf53143137;     nHJjxqENKf53143137 = nHJjxqENKf45058193;     nHJjxqENKf45058193 = nHJjxqENKf34090042;     nHJjxqENKf34090042 = nHJjxqENKf6499723;     nHJjxqENKf6499723 = nHJjxqENKf33874666;     nHJjxqENKf33874666 = nHJjxqENKf4413928;     nHJjxqENKf4413928 = nHJjxqENKf51262573;     nHJjxqENKf51262573 = nHJjxqENKf4691625;     nHJjxqENKf4691625 = nHJjxqENKf72935046;     nHJjxqENKf72935046 = nHJjxqENKf15608412;     nHJjxqENKf15608412 = nHJjxqENKf91141360;     nHJjxqENKf91141360 = nHJjxqENKf96744363;     nHJjxqENKf96744363 = nHJjxqENKf5922975;     nHJjxqENKf5922975 = nHJjxqENKf21270254;     nHJjxqENKf21270254 = nHJjxqENKf45286412;     nHJjxqENKf45286412 = nHJjxqENKf13769463;     nHJjxqENKf13769463 = nHJjxqENKf11045964;     nHJjxqENKf11045964 = nHJjxqENKf60064988;     nHJjxqENKf60064988 = nHJjxqENKf25586184;     nHJjxqENKf25586184 = nHJjxqENKf72746032;     nHJjxqENKf72746032 = nHJjxqENKf97330796;     nHJjxqENKf97330796 = nHJjxqENKf89480180;     nHJjxqENKf89480180 = nHJjxqENKf30997303;     nHJjxqENKf30997303 = nHJjxqENKf80040571;     nHJjxqENKf80040571 = nHJjxqENKf46768012;     nHJjxqENKf46768012 = nHJjxqENKf691102;     nHJjxqENKf691102 = nHJjxqENKf70530316;     nHJjxqENKf70530316 = nHJjxqENKf90447870;     nHJjxqENKf90447870 = nHJjxqENKf14541177;     nHJjxqENKf14541177 = nHJjxqENKf61644585;     nHJjxqENKf61644585 = nHJjxqENKf94205254;     nHJjxqENKf94205254 = nHJjxqENKf9657226;     nHJjxqENKf9657226 = nHJjxqENKf80785037;     nHJjxqENKf80785037 = nHJjxqENKf98757261;     nHJjxqENKf98757261 = nHJjxqENKf19106594;     nHJjxqENKf19106594 = nHJjxqENKf13332792;     nHJjxqENKf13332792 = nHJjxqENKf67707489;     nHJjxqENKf67707489 = nHJjxqENKf40182940;     nHJjxqENKf40182940 = nHJjxqENKf44738842;     nHJjxqENKf44738842 = nHJjxqENKf65480686;     nHJjxqENKf65480686 = nHJjxqENKf61156604;     nHJjxqENKf61156604 = nHJjxqENKf31643184;     nHJjxqENKf31643184 = nHJjxqENKf99022700;     nHJjxqENKf99022700 = nHJjxqENKf45326333;     nHJjxqENKf45326333 = nHJjxqENKf23159181;     nHJjxqENKf23159181 = nHJjxqENKf69258041;     nHJjxqENKf69258041 = nHJjxqENKf73848245;     nHJjxqENKf73848245 = nHJjxqENKf26219215;     nHJjxqENKf26219215 = nHJjxqENKf7114119;     nHJjxqENKf7114119 = nHJjxqENKf86247372;     nHJjxqENKf86247372 = nHJjxqENKf60709197;     nHJjxqENKf60709197 = nHJjxqENKf32174295;     nHJjxqENKf32174295 = nHJjxqENKf19710157;     nHJjxqENKf19710157 = nHJjxqENKf49031579;     nHJjxqENKf49031579 = nHJjxqENKf9631106;     nHJjxqENKf9631106 = nHJjxqENKf63662956;     nHJjxqENKf63662956 = nHJjxqENKf14060890;     nHJjxqENKf14060890 = nHJjxqENKf54049470;     nHJjxqENKf54049470 = nHJjxqENKf59731711;     nHJjxqENKf59731711 = nHJjxqENKf33183565;     nHJjxqENKf33183565 = nHJjxqENKf33883611;     nHJjxqENKf33883611 = nHJjxqENKf60814702;     nHJjxqENKf60814702 = nHJjxqENKf38678496;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void BKYhpzSJjf15969509() {     float JyCYFdiNnK77335623 = -265251114;    float JyCYFdiNnK20802519 = 36708742;    float JyCYFdiNnK26661584 = 6959966;    float JyCYFdiNnK36604201 = 74259042;    float JyCYFdiNnK88890947 = -385911543;    float JyCYFdiNnK30281080 = -377897678;    float JyCYFdiNnK18163625 = -481209372;    float JyCYFdiNnK14278243 = -202829549;    float JyCYFdiNnK10146089 = -493677711;    float JyCYFdiNnK60317295 = -477013928;    float JyCYFdiNnK57821831 = -947223605;    float JyCYFdiNnK94540867 = -395923910;    float JyCYFdiNnK81206989 = -570059846;    float JyCYFdiNnK88530364 = -800615199;    float JyCYFdiNnK32681694 = -769460980;    float JyCYFdiNnK49569080 = -847954868;    float JyCYFdiNnK11529865 = -312319228;    float JyCYFdiNnK87149410 = -285353060;    float JyCYFdiNnK79124405 = -569163736;    float JyCYFdiNnK78279933 = -660943876;    float JyCYFdiNnK59895684 = -210815892;    float JyCYFdiNnK19722921 = -690371056;    float JyCYFdiNnK40890468 = -495354432;    float JyCYFdiNnK81426378 = -123340169;    float JyCYFdiNnK63715652 = 19495543;    float JyCYFdiNnK23842061 = -559845088;    float JyCYFdiNnK56653808 = -734123070;    float JyCYFdiNnK13016316 = 98900056;    float JyCYFdiNnK13655271 = -374140615;    float JyCYFdiNnK29469942 = -872882652;    float JyCYFdiNnK43828530 = -364347846;    float JyCYFdiNnK69872291 = -267587848;    float JyCYFdiNnK52383227 = -718505798;    float JyCYFdiNnK95701971 = -792951008;    float JyCYFdiNnK83223359 = -32359646;    float JyCYFdiNnK59956166 = -451710011;    float JyCYFdiNnK27395101 = -249105106;    float JyCYFdiNnK80123892 = -505319421;    float JyCYFdiNnK76149146 = -121882707;    float JyCYFdiNnK97927684 = -65500980;    float JyCYFdiNnK85935559 = -576470336;    float JyCYFdiNnK51366048 = -518909623;    float JyCYFdiNnK66908072 = -252217192;    float JyCYFdiNnK15894426 = 12923548;    float JyCYFdiNnK75276641 = -771059172;    float JyCYFdiNnK8952994 = -723590824;    float JyCYFdiNnK79751266 = -526181303;    float JyCYFdiNnK96848820 = -19796034;    float JyCYFdiNnK70385441 = -8436170;    float JyCYFdiNnK78000202 = -884740594;    float JyCYFdiNnK87960729 = -799010011;    float JyCYFdiNnK58163049 = -56473101;    float JyCYFdiNnK53666761 = -482285082;    float JyCYFdiNnK38373673 = -245593862;    float JyCYFdiNnK56073824 = -828585995;    float JyCYFdiNnK57612703 = -574880058;    float JyCYFdiNnK79912050 = -467936827;    float JyCYFdiNnK45235206 = -869699865;    float JyCYFdiNnK72888549 = -945236501;    float JyCYFdiNnK65048886 = -826066455;    float JyCYFdiNnK73627272 = -643774608;    float JyCYFdiNnK5147309 = -480109428;    float JyCYFdiNnK622973 = -828688935;    float JyCYFdiNnK80676146 = -620795059;    float JyCYFdiNnK16488766 = -12666083;    float JyCYFdiNnK87949539 = -579635758;    float JyCYFdiNnK42157640 = -677418112;    float JyCYFdiNnK85505017 = -777108839;    float JyCYFdiNnK5307006 = -668255553;    float JyCYFdiNnK72725528 = -217750970;    float JyCYFdiNnK22173979 = -498849762;    float JyCYFdiNnK31405973 = -806999807;    float JyCYFdiNnK11000265 = -63470354;    float JyCYFdiNnK81196720 = -403662756;    float JyCYFdiNnK92344373 = 15526460;    float JyCYFdiNnK8529636 = -691906270;    float JyCYFdiNnK52814849 = -338153865;    float JyCYFdiNnK24996043 = -408277981;    float JyCYFdiNnK6149737 = -352280998;    float JyCYFdiNnK54762658 = -256913634;    float JyCYFdiNnK44090794 = 66336214;    float JyCYFdiNnK59804987 = -614327037;    float JyCYFdiNnK42630875 = -892663774;    float JyCYFdiNnK35655068 = -489400021;    float JyCYFdiNnK41509213 = 26127359;    float JyCYFdiNnK85665481 = -207874745;    float JyCYFdiNnK16205530 = -785302766;    float JyCYFdiNnK14009555 = -372911937;    float JyCYFdiNnK39628148 = -964365013;    float JyCYFdiNnK25610657 = -457479589;    float JyCYFdiNnK80044115 = -983773184;    float JyCYFdiNnK82159895 = -379405241;    float JyCYFdiNnK7235343 = -560082921;    float JyCYFdiNnK11100260 = -295816252;    float JyCYFdiNnK24300413 = -421726373;    float JyCYFdiNnK80788251 = 3639092;    float JyCYFdiNnK50743076 = -690220688;    float JyCYFdiNnK86231925 = -631422133;    float JyCYFdiNnK99405660 = -974410369;    float JyCYFdiNnK87327101 = -265251114;     JyCYFdiNnK77335623 = JyCYFdiNnK20802519;     JyCYFdiNnK20802519 = JyCYFdiNnK26661584;     JyCYFdiNnK26661584 = JyCYFdiNnK36604201;     JyCYFdiNnK36604201 = JyCYFdiNnK88890947;     JyCYFdiNnK88890947 = JyCYFdiNnK30281080;     JyCYFdiNnK30281080 = JyCYFdiNnK18163625;     JyCYFdiNnK18163625 = JyCYFdiNnK14278243;     JyCYFdiNnK14278243 = JyCYFdiNnK10146089;     JyCYFdiNnK10146089 = JyCYFdiNnK60317295;     JyCYFdiNnK60317295 = JyCYFdiNnK57821831;     JyCYFdiNnK57821831 = JyCYFdiNnK94540867;     JyCYFdiNnK94540867 = JyCYFdiNnK81206989;     JyCYFdiNnK81206989 = JyCYFdiNnK88530364;     JyCYFdiNnK88530364 = JyCYFdiNnK32681694;     JyCYFdiNnK32681694 = JyCYFdiNnK49569080;     JyCYFdiNnK49569080 = JyCYFdiNnK11529865;     JyCYFdiNnK11529865 = JyCYFdiNnK87149410;     JyCYFdiNnK87149410 = JyCYFdiNnK79124405;     JyCYFdiNnK79124405 = JyCYFdiNnK78279933;     JyCYFdiNnK78279933 = JyCYFdiNnK59895684;     JyCYFdiNnK59895684 = JyCYFdiNnK19722921;     JyCYFdiNnK19722921 = JyCYFdiNnK40890468;     JyCYFdiNnK40890468 = JyCYFdiNnK81426378;     JyCYFdiNnK81426378 = JyCYFdiNnK63715652;     JyCYFdiNnK63715652 = JyCYFdiNnK23842061;     JyCYFdiNnK23842061 = JyCYFdiNnK56653808;     JyCYFdiNnK56653808 = JyCYFdiNnK13016316;     JyCYFdiNnK13016316 = JyCYFdiNnK13655271;     JyCYFdiNnK13655271 = JyCYFdiNnK29469942;     JyCYFdiNnK29469942 = JyCYFdiNnK43828530;     JyCYFdiNnK43828530 = JyCYFdiNnK69872291;     JyCYFdiNnK69872291 = JyCYFdiNnK52383227;     JyCYFdiNnK52383227 = JyCYFdiNnK95701971;     JyCYFdiNnK95701971 = JyCYFdiNnK83223359;     JyCYFdiNnK83223359 = JyCYFdiNnK59956166;     JyCYFdiNnK59956166 = JyCYFdiNnK27395101;     JyCYFdiNnK27395101 = JyCYFdiNnK80123892;     JyCYFdiNnK80123892 = JyCYFdiNnK76149146;     JyCYFdiNnK76149146 = JyCYFdiNnK97927684;     JyCYFdiNnK97927684 = JyCYFdiNnK85935559;     JyCYFdiNnK85935559 = JyCYFdiNnK51366048;     JyCYFdiNnK51366048 = JyCYFdiNnK66908072;     JyCYFdiNnK66908072 = JyCYFdiNnK15894426;     JyCYFdiNnK15894426 = JyCYFdiNnK75276641;     JyCYFdiNnK75276641 = JyCYFdiNnK8952994;     JyCYFdiNnK8952994 = JyCYFdiNnK79751266;     JyCYFdiNnK79751266 = JyCYFdiNnK96848820;     JyCYFdiNnK96848820 = JyCYFdiNnK70385441;     JyCYFdiNnK70385441 = JyCYFdiNnK78000202;     JyCYFdiNnK78000202 = JyCYFdiNnK87960729;     JyCYFdiNnK87960729 = JyCYFdiNnK58163049;     JyCYFdiNnK58163049 = JyCYFdiNnK53666761;     JyCYFdiNnK53666761 = JyCYFdiNnK38373673;     JyCYFdiNnK38373673 = JyCYFdiNnK56073824;     JyCYFdiNnK56073824 = JyCYFdiNnK57612703;     JyCYFdiNnK57612703 = JyCYFdiNnK79912050;     JyCYFdiNnK79912050 = JyCYFdiNnK45235206;     JyCYFdiNnK45235206 = JyCYFdiNnK72888549;     JyCYFdiNnK72888549 = JyCYFdiNnK65048886;     JyCYFdiNnK65048886 = JyCYFdiNnK73627272;     JyCYFdiNnK73627272 = JyCYFdiNnK5147309;     JyCYFdiNnK5147309 = JyCYFdiNnK622973;     JyCYFdiNnK622973 = JyCYFdiNnK80676146;     JyCYFdiNnK80676146 = JyCYFdiNnK16488766;     JyCYFdiNnK16488766 = JyCYFdiNnK87949539;     JyCYFdiNnK87949539 = JyCYFdiNnK42157640;     JyCYFdiNnK42157640 = JyCYFdiNnK85505017;     JyCYFdiNnK85505017 = JyCYFdiNnK5307006;     JyCYFdiNnK5307006 = JyCYFdiNnK72725528;     JyCYFdiNnK72725528 = JyCYFdiNnK22173979;     JyCYFdiNnK22173979 = JyCYFdiNnK31405973;     JyCYFdiNnK31405973 = JyCYFdiNnK11000265;     JyCYFdiNnK11000265 = JyCYFdiNnK81196720;     JyCYFdiNnK81196720 = JyCYFdiNnK92344373;     JyCYFdiNnK92344373 = JyCYFdiNnK8529636;     JyCYFdiNnK8529636 = JyCYFdiNnK52814849;     JyCYFdiNnK52814849 = JyCYFdiNnK24996043;     JyCYFdiNnK24996043 = JyCYFdiNnK6149737;     JyCYFdiNnK6149737 = JyCYFdiNnK54762658;     JyCYFdiNnK54762658 = JyCYFdiNnK44090794;     JyCYFdiNnK44090794 = JyCYFdiNnK59804987;     JyCYFdiNnK59804987 = JyCYFdiNnK42630875;     JyCYFdiNnK42630875 = JyCYFdiNnK35655068;     JyCYFdiNnK35655068 = JyCYFdiNnK41509213;     JyCYFdiNnK41509213 = JyCYFdiNnK85665481;     JyCYFdiNnK85665481 = JyCYFdiNnK16205530;     JyCYFdiNnK16205530 = JyCYFdiNnK14009555;     JyCYFdiNnK14009555 = JyCYFdiNnK39628148;     JyCYFdiNnK39628148 = JyCYFdiNnK25610657;     JyCYFdiNnK25610657 = JyCYFdiNnK80044115;     JyCYFdiNnK80044115 = JyCYFdiNnK82159895;     JyCYFdiNnK82159895 = JyCYFdiNnK7235343;     JyCYFdiNnK7235343 = JyCYFdiNnK11100260;     JyCYFdiNnK11100260 = JyCYFdiNnK24300413;     JyCYFdiNnK24300413 = JyCYFdiNnK80788251;     JyCYFdiNnK80788251 = JyCYFdiNnK50743076;     JyCYFdiNnK50743076 = JyCYFdiNnK86231925;     JyCYFdiNnK86231925 = JyCYFdiNnK99405660;     JyCYFdiNnK99405660 = JyCYFdiNnK87327101;     JyCYFdiNnK87327101 = JyCYFdiNnK77335623;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void WHlrbWHbuJ13247338() {     float IMEbaIoGqT35188181 = -493407835;    float IMEbaIoGqT79849780 = -849790794;    float IMEbaIoGqT91504126 = 58767661;    float IMEbaIoGqT38754384 = 67241269;    float IMEbaIoGqT34510369 = -614212068;    float IMEbaIoGqT46581637 = -801421140;    float IMEbaIoGqT52429434 = -443385945;    float IMEbaIoGqT82829611 = -613483017;    float IMEbaIoGqT26086661 = -52559088;    float IMEbaIoGqT70344078 = -247635388;    float IMEbaIoGqT13224821 = -786383663;    float IMEbaIoGqT36720287 = -775311612;    float IMEbaIoGqT54596901 = -619131196;    float IMEbaIoGqT30441760 = -959534313;    float IMEbaIoGqT82439378 = -937650856;    float IMEbaIoGqT2801746 = -532638367;    float IMEbaIoGqT61336393 = -196959031;    float IMEbaIoGqT69885485 = -413452197;    float IMEbaIoGqT528097 = -402847016;    float IMEbaIoGqT78559672 = -728114944;    float IMEbaIoGqT94196230 = -149111516;    float IMEbaIoGqT8663398 = -771781780;    float IMEbaIoGqT77830774 = -950109366;    float IMEbaIoGqT58069002 = -217237108;    float IMEbaIoGqT78831160 = -299354927;    float IMEbaIoGqT6269150 = -784110191;    float IMEbaIoGqT93942220 = 2806009;    float IMEbaIoGqT24252666 = -350359583;    float IMEbaIoGqT54537599 = -646422222;    float IMEbaIoGqT68070662 = -52254316;    float IMEbaIoGqT73289888 = -610551250;    float IMEbaIoGqT80512643 = -300808855;    float IMEbaIoGqT60187485 = -93501054;    float IMEbaIoGqT84556248 = -205089939;    float IMEbaIoGqT42903140 = -887902394;    float IMEbaIoGqT10381690 = -901904947;    float IMEbaIoGqT58305262 = -847095720;    float IMEbaIoGqT15047717 = -360337796;    float IMEbaIoGqT19534242 = -561123598;    float IMEbaIoGqT10512039 = -57555870;    float IMEbaIoGqT60288870 = -760903018;    float IMEbaIoGqT43541906 = -777571522;    float IMEbaIoGqT1558283 = -233798308;    float IMEbaIoGqT96237984 = 68191933;    float IMEbaIoGqT59258314 = 66545591;    float IMEbaIoGqT22586636 = -32698881;    float IMEbaIoGqT83696035 = -7297295;    float IMEbaIoGqT83790225 = -434096262;    float IMEbaIoGqT69079623 = -58125887;    float IMEbaIoGqT79568114 = -830762783;    float IMEbaIoGqT64341299 = -349807839;    float IMEbaIoGqT952521 = -318798982;    float IMEbaIoGqT25153965 = -18187858;    float IMEbaIoGqT4401794 = -180863319;    float IMEbaIoGqT19051108 = -458880979;    float IMEbaIoGqT26524783 = -721626055;    float IMEbaIoGqT2019007 = -899681429;    float IMEbaIoGqT33435125 = -723995232;    float IMEbaIoGqT59923223 = -633403804;    float IMEbaIoGqT28241219 = -830101878;    float IMEbaIoGqT52639416 = -704227149;    float IMEbaIoGqT28176768 = 6973638;    float IMEbaIoGqT28292013 = -967060795;    float IMEbaIoGqT58015998 = 99695228;    float IMEbaIoGqT97054190 = -637084138;    float IMEbaIoGqT32712177 = -385574809;    float IMEbaIoGqT76532802 = -581810558;    float IMEbaIoGqT70040653 = -314041258;    float IMEbaIoGqT87538620 = 28368080;    float IMEbaIoGqT72057689 = 64254090;    float IMEbaIoGqT44496484 = -685542648;    float IMEbaIoGqT46288676 = -836621236;    float IMEbaIoGqT50351243 = -852328599;    float IMEbaIoGqT90016057 = -245291146;    float IMEbaIoGqT18270802 = -967211927;    float IMEbaIoGqT50654325 = -371539994;    float IMEbaIoGqT7105116 = -437983473;    float IMEbaIoGqT81592789 = -918301299;    float IMEbaIoGqT98810688 = -183782699;    float IMEbaIoGqT56244525 = -166656047;    float IMEbaIoGqT22573115 = -676812897;    float IMEbaIoGqT10151995 = -563097730;    float IMEbaIoGqT55173043 = -192233697;    float IMEbaIoGqT74969485 = -815659440;    float IMEbaIoGqT3729363 = -702446478;    float IMEbaIoGqT72337367 = -191752269;    float IMEbaIoGqT55358678 = -182620997;    float IMEbaIoGqT55785691 = -912637736;    float IMEbaIoGqT65505140 = -746208960;    float IMEbaIoGqT16378358 = -66276340;    float IMEbaIoGqT8362683 = 97776482;    float IMEbaIoGqT24870138 = -23100488;    float IMEbaIoGqT55124493 = -726933992;    float IMEbaIoGqT91293023 = -731021721;    float IMEbaIoGqT57872623 = -353328721;    float IMEbaIoGqT32112103 = -667876657;    float IMEbaIoGqT15249893 = -810510727;    float IMEbaIoGqT43542284 = -233493536;    float IMEbaIoGqT99183794 = -294723929;    float IMEbaIoGqT26546137 = -493407835;     IMEbaIoGqT35188181 = IMEbaIoGqT79849780;     IMEbaIoGqT79849780 = IMEbaIoGqT91504126;     IMEbaIoGqT91504126 = IMEbaIoGqT38754384;     IMEbaIoGqT38754384 = IMEbaIoGqT34510369;     IMEbaIoGqT34510369 = IMEbaIoGqT46581637;     IMEbaIoGqT46581637 = IMEbaIoGqT52429434;     IMEbaIoGqT52429434 = IMEbaIoGqT82829611;     IMEbaIoGqT82829611 = IMEbaIoGqT26086661;     IMEbaIoGqT26086661 = IMEbaIoGqT70344078;     IMEbaIoGqT70344078 = IMEbaIoGqT13224821;     IMEbaIoGqT13224821 = IMEbaIoGqT36720287;     IMEbaIoGqT36720287 = IMEbaIoGqT54596901;     IMEbaIoGqT54596901 = IMEbaIoGqT30441760;     IMEbaIoGqT30441760 = IMEbaIoGqT82439378;     IMEbaIoGqT82439378 = IMEbaIoGqT2801746;     IMEbaIoGqT2801746 = IMEbaIoGqT61336393;     IMEbaIoGqT61336393 = IMEbaIoGqT69885485;     IMEbaIoGqT69885485 = IMEbaIoGqT528097;     IMEbaIoGqT528097 = IMEbaIoGqT78559672;     IMEbaIoGqT78559672 = IMEbaIoGqT94196230;     IMEbaIoGqT94196230 = IMEbaIoGqT8663398;     IMEbaIoGqT8663398 = IMEbaIoGqT77830774;     IMEbaIoGqT77830774 = IMEbaIoGqT58069002;     IMEbaIoGqT58069002 = IMEbaIoGqT78831160;     IMEbaIoGqT78831160 = IMEbaIoGqT6269150;     IMEbaIoGqT6269150 = IMEbaIoGqT93942220;     IMEbaIoGqT93942220 = IMEbaIoGqT24252666;     IMEbaIoGqT24252666 = IMEbaIoGqT54537599;     IMEbaIoGqT54537599 = IMEbaIoGqT68070662;     IMEbaIoGqT68070662 = IMEbaIoGqT73289888;     IMEbaIoGqT73289888 = IMEbaIoGqT80512643;     IMEbaIoGqT80512643 = IMEbaIoGqT60187485;     IMEbaIoGqT60187485 = IMEbaIoGqT84556248;     IMEbaIoGqT84556248 = IMEbaIoGqT42903140;     IMEbaIoGqT42903140 = IMEbaIoGqT10381690;     IMEbaIoGqT10381690 = IMEbaIoGqT58305262;     IMEbaIoGqT58305262 = IMEbaIoGqT15047717;     IMEbaIoGqT15047717 = IMEbaIoGqT19534242;     IMEbaIoGqT19534242 = IMEbaIoGqT10512039;     IMEbaIoGqT10512039 = IMEbaIoGqT60288870;     IMEbaIoGqT60288870 = IMEbaIoGqT43541906;     IMEbaIoGqT43541906 = IMEbaIoGqT1558283;     IMEbaIoGqT1558283 = IMEbaIoGqT96237984;     IMEbaIoGqT96237984 = IMEbaIoGqT59258314;     IMEbaIoGqT59258314 = IMEbaIoGqT22586636;     IMEbaIoGqT22586636 = IMEbaIoGqT83696035;     IMEbaIoGqT83696035 = IMEbaIoGqT83790225;     IMEbaIoGqT83790225 = IMEbaIoGqT69079623;     IMEbaIoGqT69079623 = IMEbaIoGqT79568114;     IMEbaIoGqT79568114 = IMEbaIoGqT64341299;     IMEbaIoGqT64341299 = IMEbaIoGqT952521;     IMEbaIoGqT952521 = IMEbaIoGqT25153965;     IMEbaIoGqT25153965 = IMEbaIoGqT4401794;     IMEbaIoGqT4401794 = IMEbaIoGqT19051108;     IMEbaIoGqT19051108 = IMEbaIoGqT26524783;     IMEbaIoGqT26524783 = IMEbaIoGqT2019007;     IMEbaIoGqT2019007 = IMEbaIoGqT33435125;     IMEbaIoGqT33435125 = IMEbaIoGqT59923223;     IMEbaIoGqT59923223 = IMEbaIoGqT28241219;     IMEbaIoGqT28241219 = IMEbaIoGqT52639416;     IMEbaIoGqT52639416 = IMEbaIoGqT28176768;     IMEbaIoGqT28176768 = IMEbaIoGqT28292013;     IMEbaIoGqT28292013 = IMEbaIoGqT58015998;     IMEbaIoGqT58015998 = IMEbaIoGqT97054190;     IMEbaIoGqT97054190 = IMEbaIoGqT32712177;     IMEbaIoGqT32712177 = IMEbaIoGqT76532802;     IMEbaIoGqT76532802 = IMEbaIoGqT70040653;     IMEbaIoGqT70040653 = IMEbaIoGqT87538620;     IMEbaIoGqT87538620 = IMEbaIoGqT72057689;     IMEbaIoGqT72057689 = IMEbaIoGqT44496484;     IMEbaIoGqT44496484 = IMEbaIoGqT46288676;     IMEbaIoGqT46288676 = IMEbaIoGqT50351243;     IMEbaIoGqT50351243 = IMEbaIoGqT90016057;     IMEbaIoGqT90016057 = IMEbaIoGqT18270802;     IMEbaIoGqT18270802 = IMEbaIoGqT50654325;     IMEbaIoGqT50654325 = IMEbaIoGqT7105116;     IMEbaIoGqT7105116 = IMEbaIoGqT81592789;     IMEbaIoGqT81592789 = IMEbaIoGqT98810688;     IMEbaIoGqT98810688 = IMEbaIoGqT56244525;     IMEbaIoGqT56244525 = IMEbaIoGqT22573115;     IMEbaIoGqT22573115 = IMEbaIoGqT10151995;     IMEbaIoGqT10151995 = IMEbaIoGqT55173043;     IMEbaIoGqT55173043 = IMEbaIoGqT74969485;     IMEbaIoGqT74969485 = IMEbaIoGqT3729363;     IMEbaIoGqT3729363 = IMEbaIoGqT72337367;     IMEbaIoGqT72337367 = IMEbaIoGqT55358678;     IMEbaIoGqT55358678 = IMEbaIoGqT55785691;     IMEbaIoGqT55785691 = IMEbaIoGqT65505140;     IMEbaIoGqT65505140 = IMEbaIoGqT16378358;     IMEbaIoGqT16378358 = IMEbaIoGqT8362683;     IMEbaIoGqT8362683 = IMEbaIoGqT24870138;     IMEbaIoGqT24870138 = IMEbaIoGqT55124493;     IMEbaIoGqT55124493 = IMEbaIoGqT91293023;     IMEbaIoGqT91293023 = IMEbaIoGqT57872623;     IMEbaIoGqT57872623 = IMEbaIoGqT32112103;     IMEbaIoGqT32112103 = IMEbaIoGqT15249893;     IMEbaIoGqT15249893 = IMEbaIoGqT43542284;     IMEbaIoGqT43542284 = IMEbaIoGqT99183794;     IMEbaIoGqT99183794 = IMEbaIoGqT26546137;     IMEbaIoGqT26546137 = IMEbaIoGqT35188181;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void dUeCWAcKnn57412() {     double kBKGlBuExd80244863 = -945310077;    double kBKGlBuExd59984630 = -529849004;    double kBKGlBuExd90563688 = 33241817;    double kBKGlBuExd10583532 = -396385472;    double kBKGlBuExd99878838 = 46770889;    double kBKGlBuExd71780271 = -997170505;    double kBKGlBuExd18308489 = 33304851;    double kBKGlBuExd28482944 = -135884203;    double kBKGlBuExd70732668 = -870151476;    double kBKGlBuExd69111427 = -219379522;    double kBKGlBuExd71621335 = -450065814;    double kBKGlBuExd68386718 = -250584042;    double kBKGlBuExd5622882 = -246907601;    double kBKGlBuExd53495407 = -203767807;    double kBKGlBuExd76648673 = -42924180;    double kBKGlBuExd89456164 = -715623953;    double kBKGlBuExd39170243 = -147246222;    double kBKGlBuExd53563874 = 68051535;    double kBKGlBuExd1413562 = -154034500;    double kBKGlBuExd84295559 = -14078551;    double kBKGlBuExd67826855 = -261790436;    double kBKGlBuExd36000455 = -898321981;    double kBKGlBuExd31328380 = -512297168;    double kBKGlBuExd55679659 = -872169818;    double kBKGlBuExd80716444 = -497804252;    double kBKGlBuExd82238709 = -80252987;    double kBKGlBuExd75147469 = -177758201;    double kBKGlBuExd21241379 = -439271601;    double kBKGlBuExd97820544 = -23592061;    double kBKGlBuExd18055073 = -214886885;    double kBKGlBuExd8434269 = -60977757;    double kBKGlBuExd64919958 = -943042826;    double kBKGlBuExd50124429 = -445557850;    double kBKGlBuExd96758407 = -77497250;    double kBKGlBuExd43059445 = -422384149;    double kBKGlBuExd29825382 = -33185398;    double kBKGlBuExd20363415 = -154657050;    double kBKGlBuExd97144037 = -288630097;    double kBKGlBuExd10114348 = -577536037;    double kBKGlBuExd54641002 = -169341442;    double kBKGlBuExd54994375 = -151777555;    double kBKGlBuExd6561798 = -328610211;    double kBKGlBuExd41750063 = 69358640;    double kBKGlBuExd70800853 = 29185895;    double kBKGlBuExd89258575 = -462968789;    double kBKGlBuExd23234101 = -636555505;    double kBKGlBuExd51605473 = -812819167;    double kBKGlBuExd4367037 = 43814255;    double kBKGlBuExd1697340 = -939859422;    double kBKGlBuExd64253740 = -646285838;    double kBKGlBuExd42283431 = -115553868;    double kBKGlBuExd37386332 = -133158146;    double kBKGlBuExd25328541 = -866168364;    double kBKGlBuExd41105596 = -774560811;    double kBKGlBuExd32230556 = -830080392;    double kBKGlBuExd44244409 = 53011904;    double kBKGlBuExd28656250 = 82448163;    double kBKGlBuExd34884030 = -94588366;    double kBKGlBuExd29867088 = -898581220;    double kBKGlBuExd17640129 = -872976125;    double kBKGlBuExd96632801 = -719412305;    double kBKGlBuExd97067110 = -527423548;    double kBKGlBuExd30662399 = -12292143;    double kBKGlBuExd52677596 = -555264592;    double kBKGlBuExd60677159 = -58401766;    double kBKGlBuExd6701378 = -507022988;    double kBKGlBuExd18262290 = -805026193;    double kBKGlBuExd8864474 = -69410351;    double kBKGlBuExd10435962 = -781383658;    double kBKGlBuExd46823291 = 90261218;    double kBKGlBuExd69092750 = -460966903;    double kBKGlBuExd42026205 = -858616126;    double kBKGlBuExd43449527 = -354412428;    double kBKGlBuExd46772559 = -984693058;    double kBKGlBuExd29301184 = -862300996;    double kBKGlBuExd61265057 = -933180225;    double kBKGlBuExd94250391 = -867680622;    double kBKGlBuExd60527526 = -441483064;    double kBKGlBuExd66421084 = -309201030;    double kBKGlBuExd57482343 = -861248748;    double kBKGlBuExd30633236 = -267433820;    double kBKGlBuExd70780433 = -121572457;    double kBKGlBuExd19544040 = -499412180;    double kBKGlBuExd33566805 = -377306224;    double kBKGlBuExd75771641 = 666983;    double kBKGlBuExd71047936 = -927819611;    double kBKGlBuExd39591417 = 23125537;    double kBKGlBuExd9018834 = -670997039;    double kBKGlBuExd64527852 = -247416858;    double kBKGlBuExd98815036 = -375396054;    double kBKGlBuExd1169133 = -15633562;    double kBKGlBuExd85479384 = 39931315;    double kBKGlBuExd67276950 = -390048877;    double kBKGlBuExd92474218 = -704559913;    double kBKGlBuExd58008201 = -449929138;    double kBKGlBuExd57927265 = -624354007;    double kBKGlBuExd75899399 = -216318069;    double kBKGlBuExd89072467 = -375376768;    double kBKGlBuExd10123695 = -912412340;    double kBKGlBuExd82557197 = -945310077;     kBKGlBuExd80244863 = kBKGlBuExd59984630;     kBKGlBuExd59984630 = kBKGlBuExd90563688;     kBKGlBuExd90563688 = kBKGlBuExd10583532;     kBKGlBuExd10583532 = kBKGlBuExd99878838;     kBKGlBuExd99878838 = kBKGlBuExd71780271;     kBKGlBuExd71780271 = kBKGlBuExd18308489;     kBKGlBuExd18308489 = kBKGlBuExd28482944;     kBKGlBuExd28482944 = kBKGlBuExd70732668;     kBKGlBuExd70732668 = kBKGlBuExd69111427;     kBKGlBuExd69111427 = kBKGlBuExd71621335;     kBKGlBuExd71621335 = kBKGlBuExd68386718;     kBKGlBuExd68386718 = kBKGlBuExd5622882;     kBKGlBuExd5622882 = kBKGlBuExd53495407;     kBKGlBuExd53495407 = kBKGlBuExd76648673;     kBKGlBuExd76648673 = kBKGlBuExd89456164;     kBKGlBuExd89456164 = kBKGlBuExd39170243;     kBKGlBuExd39170243 = kBKGlBuExd53563874;     kBKGlBuExd53563874 = kBKGlBuExd1413562;     kBKGlBuExd1413562 = kBKGlBuExd84295559;     kBKGlBuExd84295559 = kBKGlBuExd67826855;     kBKGlBuExd67826855 = kBKGlBuExd36000455;     kBKGlBuExd36000455 = kBKGlBuExd31328380;     kBKGlBuExd31328380 = kBKGlBuExd55679659;     kBKGlBuExd55679659 = kBKGlBuExd80716444;     kBKGlBuExd80716444 = kBKGlBuExd82238709;     kBKGlBuExd82238709 = kBKGlBuExd75147469;     kBKGlBuExd75147469 = kBKGlBuExd21241379;     kBKGlBuExd21241379 = kBKGlBuExd97820544;     kBKGlBuExd97820544 = kBKGlBuExd18055073;     kBKGlBuExd18055073 = kBKGlBuExd8434269;     kBKGlBuExd8434269 = kBKGlBuExd64919958;     kBKGlBuExd64919958 = kBKGlBuExd50124429;     kBKGlBuExd50124429 = kBKGlBuExd96758407;     kBKGlBuExd96758407 = kBKGlBuExd43059445;     kBKGlBuExd43059445 = kBKGlBuExd29825382;     kBKGlBuExd29825382 = kBKGlBuExd20363415;     kBKGlBuExd20363415 = kBKGlBuExd97144037;     kBKGlBuExd97144037 = kBKGlBuExd10114348;     kBKGlBuExd10114348 = kBKGlBuExd54641002;     kBKGlBuExd54641002 = kBKGlBuExd54994375;     kBKGlBuExd54994375 = kBKGlBuExd6561798;     kBKGlBuExd6561798 = kBKGlBuExd41750063;     kBKGlBuExd41750063 = kBKGlBuExd70800853;     kBKGlBuExd70800853 = kBKGlBuExd89258575;     kBKGlBuExd89258575 = kBKGlBuExd23234101;     kBKGlBuExd23234101 = kBKGlBuExd51605473;     kBKGlBuExd51605473 = kBKGlBuExd4367037;     kBKGlBuExd4367037 = kBKGlBuExd1697340;     kBKGlBuExd1697340 = kBKGlBuExd64253740;     kBKGlBuExd64253740 = kBKGlBuExd42283431;     kBKGlBuExd42283431 = kBKGlBuExd37386332;     kBKGlBuExd37386332 = kBKGlBuExd25328541;     kBKGlBuExd25328541 = kBKGlBuExd41105596;     kBKGlBuExd41105596 = kBKGlBuExd32230556;     kBKGlBuExd32230556 = kBKGlBuExd44244409;     kBKGlBuExd44244409 = kBKGlBuExd28656250;     kBKGlBuExd28656250 = kBKGlBuExd34884030;     kBKGlBuExd34884030 = kBKGlBuExd29867088;     kBKGlBuExd29867088 = kBKGlBuExd17640129;     kBKGlBuExd17640129 = kBKGlBuExd96632801;     kBKGlBuExd96632801 = kBKGlBuExd97067110;     kBKGlBuExd97067110 = kBKGlBuExd30662399;     kBKGlBuExd30662399 = kBKGlBuExd52677596;     kBKGlBuExd52677596 = kBKGlBuExd60677159;     kBKGlBuExd60677159 = kBKGlBuExd6701378;     kBKGlBuExd6701378 = kBKGlBuExd18262290;     kBKGlBuExd18262290 = kBKGlBuExd8864474;     kBKGlBuExd8864474 = kBKGlBuExd10435962;     kBKGlBuExd10435962 = kBKGlBuExd46823291;     kBKGlBuExd46823291 = kBKGlBuExd69092750;     kBKGlBuExd69092750 = kBKGlBuExd42026205;     kBKGlBuExd42026205 = kBKGlBuExd43449527;     kBKGlBuExd43449527 = kBKGlBuExd46772559;     kBKGlBuExd46772559 = kBKGlBuExd29301184;     kBKGlBuExd29301184 = kBKGlBuExd61265057;     kBKGlBuExd61265057 = kBKGlBuExd94250391;     kBKGlBuExd94250391 = kBKGlBuExd60527526;     kBKGlBuExd60527526 = kBKGlBuExd66421084;     kBKGlBuExd66421084 = kBKGlBuExd57482343;     kBKGlBuExd57482343 = kBKGlBuExd30633236;     kBKGlBuExd30633236 = kBKGlBuExd70780433;     kBKGlBuExd70780433 = kBKGlBuExd19544040;     kBKGlBuExd19544040 = kBKGlBuExd33566805;     kBKGlBuExd33566805 = kBKGlBuExd75771641;     kBKGlBuExd75771641 = kBKGlBuExd71047936;     kBKGlBuExd71047936 = kBKGlBuExd39591417;     kBKGlBuExd39591417 = kBKGlBuExd9018834;     kBKGlBuExd9018834 = kBKGlBuExd64527852;     kBKGlBuExd64527852 = kBKGlBuExd98815036;     kBKGlBuExd98815036 = kBKGlBuExd1169133;     kBKGlBuExd1169133 = kBKGlBuExd85479384;     kBKGlBuExd85479384 = kBKGlBuExd67276950;     kBKGlBuExd67276950 = kBKGlBuExd92474218;     kBKGlBuExd92474218 = kBKGlBuExd58008201;     kBKGlBuExd58008201 = kBKGlBuExd57927265;     kBKGlBuExd57927265 = kBKGlBuExd75899399;     kBKGlBuExd75899399 = kBKGlBuExd89072467;     kBKGlBuExd89072467 = kBKGlBuExd10123695;     kBKGlBuExd10123695 = kBKGlBuExd82557197;     kBKGlBuExd82557197 = kBKGlBuExd80244863;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void hksOLbBKnt97335240() {     double ZCDhkZVRnD38097421 = -73466798;    double ZCDhkZVRnD19031892 = -316348540;    double ZCDhkZVRnD55406232 = 85049511;    double ZCDhkZVRnD12733715 = -403403245;    double ZCDhkZVRnD45498260 = -181529636;    double ZCDhkZVRnD88080827 = -320693967;    double ZCDhkZVRnD52574298 = 71128278;    double ZCDhkZVRnD97034312 = -546537671;    double ZCDhkZVRnD86673240 = -429032853;    double ZCDhkZVRnD79138210 = 9999018;    double ZCDhkZVRnD27024324 = -289225872;    double ZCDhkZVRnD10566139 = -629971744;    double ZCDhkZVRnD79012793 = -295978951;    double ZCDhkZVRnD95406802 = -362686922;    double ZCDhkZVRnD26406358 = -211114056;    double ZCDhkZVRnD42688830 = -400307451;    double ZCDhkZVRnD88976770 = -31886024;    double ZCDhkZVRnD36299950 = -60047602;    double ZCDhkZVRnD22817253 = 12282220;    double ZCDhkZVRnD84575297 = -81249619;    double ZCDhkZVRnD2127402 = -200086059;    double ZCDhkZVRnD24940932 = -979732705;    double ZCDhkZVRnD68268686 = -967052102;    double ZCDhkZVRnD32322283 = -966066757;    double ZCDhkZVRnD95831952 = -816654722;    double ZCDhkZVRnD64665798 = -304518089;    double ZCDhkZVRnD12435883 = -540829122;    double ZCDhkZVRnD32477729 = -888531240;    double ZCDhkZVRnD38702873 = -295873667;    double ZCDhkZVRnD56655793 = -494258549;    double ZCDhkZVRnD37895626 = -307181161;    double ZCDhkZVRnD75560309 = -976263834;    double ZCDhkZVRnD57928687 = -920553106;    double ZCDhkZVRnD85612684 = -589636181;    double ZCDhkZVRnD2739226 = -177926898;    double ZCDhkZVRnD80250905 = -483380334;    double ZCDhkZVRnD51273575 = -752647664;    double ZCDhkZVRnD32067863 = -143648471;    double ZCDhkZVRnD53499443 = 83223071;    double ZCDhkZVRnD67225356 = -161396331;    double ZCDhkZVRnD29347686 = -336210236;    double ZCDhkZVRnD98737655 = -587272111;    double ZCDhkZVRnD76400273 = 87777525;    double ZCDhkZVRnD51144413 = 84454280;    double ZCDhkZVRnD73240248 = -725364026;    double ZCDhkZVRnD36867743 = 54336438;    double ZCDhkZVRnD55550241 = -293935158;    double ZCDhkZVRnD91308441 = -370485973;    double ZCDhkZVRnD391521 = -989549139;    double ZCDhkZVRnD65821651 = -592308026;    double ZCDhkZVRnD18664002 = -766351696;    double ZCDhkZVRnD80175804 = -395484027;    double ZCDhkZVRnD96815744 = -402071140;    double ZCDhkZVRnD7133717 = -709830268;    double ZCDhkZVRnD95207839 = -460375376;    double ZCDhkZVRnD13156489 = -93734094;    double ZCDhkZVRnD50763206 = -349296439;    double ZCDhkZVRnD23083949 = 51116268;    double ZCDhkZVRnD16901762 = -586748523;    double ZCDhkZVRnD80832461 = -877011548;    double ZCDhkZVRnD75644945 = -779864846;    double ZCDhkZVRnD20096570 = -40340482;    double ZCDhkZVRnD58331439 = -150664004;    double ZCDhkZVRnD30017448 = -934774304;    double ZCDhkZVRnD41242584 = -682819821;    double ZCDhkZVRnD51464015 = -312962039;    double ZCDhkZVRnD52637452 = -709418639;    double ZCDhkZVRnD93400108 = -706342770;    double ZCDhkZVRnD92667577 = -84760024;    double ZCDhkZVRnD46155452 = -727733722;    double ZCDhkZVRnD91415254 = -647659788;    double ZCDhkZVRnD56908908 = -888237554;    double ZCDhkZVRnD82800506 = -43270674;    double ZCDhkZVRnD55591896 = -826321449;    double ZCDhkZVRnD55227612 = -745039383;    double ZCDhkZVRnD3389747 = -612813949;    double ZCDhkZVRnD48540659 = -967510231;    double ZCDhkZVRnD17124274 = -951506382;    double ZCDhkZVRnD59082035 = -140702731;    double ZCDhkZVRnD58964209 = -770991161;    double ZCDhkZVRnD9115557 = 89417069;    double ZCDhkZVRnD21127441 = -70343149;    double ZCDhkZVRnD32086208 = -898982102;    double ZCDhkZVRnD72881221 = -703565642;    double ZCDhkZVRnD37991791 = -727906854;    double ZCDhkZVRnD57719822 = -911697135;    double ZCDhkZVRnD78744565 = -474192695;    double ZCDhkZVRnD50794970 = -110722839;    double ZCDhkZVRnD90404845 = -29260806;    double ZCDhkZVRnD89582736 = 15807195;    double ZCDhkZVRnD29487700 = -34083896;    double ZCDhkZVRnD28189627 = -703763932;    double ZCDhkZVRnD15166101 = -556899948;    double ZCDhkZVRnD72666982 = -39765382;    double ZCDhkZVRnD91580411 = -381531486;    double ZCDhkZVRnD9251117 = -195869755;    double ZCDhkZVRnD40406216 = -336608107;    double ZCDhkZVRnD46382826 = 22551829;    double ZCDhkZVRnD9901829 = -232725900;    double ZCDhkZVRnD21776234 = -73466798;     ZCDhkZVRnD38097421 = ZCDhkZVRnD19031892;     ZCDhkZVRnD19031892 = ZCDhkZVRnD55406232;     ZCDhkZVRnD55406232 = ZCDhkZVRnD12733715;     ZCDhkZVRnD12733715 = ZCDhkZVRnD45498260;     ZCDhkZVRnD45498260 = ZCDhkZVRnD88080827;     ZCDhkZVRnD88080827 = ZCDhkZVRnD52574298;     ZCDhkZVRnD52574298 = ZCDhkZVRnD97034312;     ZCDhkZVRnD97034312 = ZCDhkZVRnD86673240;     ZCDhkZVRnD86673240 = ZCDhkZVRnD79138210;     ZCDhkZVRnD79138210 = ZCDhkZVRnD27024324;     ZCDhkZVRnD27024324 = ZCDhkZVRnD10566139;     ZCDhkZVRnD10566139 = ZCDhkZVRnD79012793;     ZCDhkZVRnD79012793 = ZCDhkZVRnD95406802;     ZCDhkZVRnD95406802 = ZCDhkZVRnD26406358;     ZCDhkZVRnD26406358 = ZCDhkZVRnD42688830;     ZCDhkZVRnD42688830 = ZCDhkZVRnD88976770;     ZCDhkZVRnD88976770 = ZCDhkZVRnD36299950;     ZCDhkZVRnD36299950 = ZCDhkZVRnD22817253;     ZCDhkZVRnD22817253 = ZCDhkZVRnD84575297;     ZCDhkZVRnD84575297 = ZCDhkZVRnD2127402;     ZCDhkZVRnD2127402 = ZCDhkZVRnD24940932;     ZCDhkZVRnD24940932 = ZCDhkZVRnD68268686;     ZCDhkZVRnD68268686 = ZCDhkZVRnD32322283;     ZCDhkZVRnD32322283 = ZCDhkZVRnD95831952;     ZCDhkZVRnD95831952 = ZCDhkZVRnD64665798;     ZCDhkZVRnD64665798 = ZCDhkZVRnD12435883;     ZCDhkZVRnD12435883 = ZCDhkZVRnD32477729;     ZCDhkZVRnD32477729 = ZCDhkZVRnD38702873;     ZCDhkZVRnD38702873 = ZCDhkZVRnD56655793;     ZCDhkZVRnD56655793 = ZCDhkZVRnD37895626;     ZCDhkZVRnD37895626 = ZCDhkZVRnD75560309;     ZCDhkZVRnD75560309 = ZCDhkZVRnD57928687;     ZCDhkZVRnD57928687 = ZCDhkZVRnD85612684;     ZCDhkZVRnD85612684 = ZCDhkZVRnD2739226;     ZCDhkZVRnD2739226 = ZCDhkZVRnD80250905;     ZCDhkZVRnD80250905 = ZCDhkZVRnD51273575;     ZCDhkZVRnD51273575 = ZCDhkZVRnD32067863;     ZCDhkZVRnD32067863 = ZCDhkZVRnD53499443;     ZCDhkZVRnD53499443 = ZCDhkZVRnD67225356;     ZCDhkZVRnD67225356 = ZCDhkZVRnD29347686;     ZCDhkZVRnD29347686 = ZCDhkZVRnD98737655;     ZCDhkZVRnD98737655 = ZCDhkZVRnD76400273;     ZCDhkZVRnD76400273 = ZCDhkZVRnD51144413;     ZCDhkZVRnD51144413 = ZCDhkZVRnD73240248;     ZCDhkZVRnD73240248 = ZCDhkZVRnD36867743;     ZCDhkZVRnD36867743 = ZCDhkZVRnD55550241;     ZCDhkZVRnD55550241 = ZCDhkZVRnD91308441;     ZCDhkZVRnD91308441 = ZCDhkZVRnD391521;     ZCDhkZVRnD391521 = ZCDhkZVRnD65821651;     ZCDhkZVRnD65821651 = ZCDhkZVRnD18664002;     ZCDhkZVRnD18664002 = ZCDhkZVRnD80175804;     ZCDhkZVRnD80175804 = ZCDhkZVRnD96815744;     ZCDhkZVRnD96815744 = ZCDhkZVRnD7133717;     ZCDhkZVRnD7133717 = ZCDhkZVRnD95207839;     ZCDhkZVRnD95207839 = ZCDhkZVRnD13156489;     ZCDhkZVRnD13156489 = ZCDhkZVRnD50763206;     ZCDhkZVRnD50763206 = ZCDhkZVRnD23083949;     ZCDhkZVRnD23083949 = ZCDhkZVRnD16901762;     ZCDhkZVRnD16901762 = ZCDhkZVRnD80832461;     ZCDhkZVRnD80832461 = ZCDhkZVRnD75644945;     ZCDhkZVRnD75644945 = ZCDhkZVRnD20096570;     ZCDhkZVRnD20096570 = ZCDhkZVRnD58331439;     ZCDhkZVRnD58331439 = ZCDhkZVRnD30017448;     ZCDhkZVRnD30017448 = ZCDhkZVRnD41242584;     ZCDhkZVRnD41242584 = ZCDhkZVRnD51464015;     ZCDhkZVRnD51464015 = ZCDhkZVRnD52637452;     ZCDhkZVRnD52637452 = ZCDhkZVRnD93400108;     ZCDhkZVRnD93400108 = ZCDhkZVRnD92667577;     ZCDhkZVRnD92667577 = ZCDhkZVRnD46155452;     ZCDhkZVRnD46155452 = ZCDhkZVRnD91415254;     ZCDhkZVRnD91415254 = ZCDhkZVRnD56908908;     ZCDhkZVRnD56908908 = ZCDhkZVRnD82800506;     ZCDhkZVRnD82800506 = ZCDhkZVRnD55591896;     ZCDhkZVRnD55591896 = ZCDhkZVRnD55227612;     ZCDhkZVRnD55227612 = ZCDhkZVRnD3389747;     ZCDhkZVRnD3389747 = ZCDhkZVRnD48540659;     ZCDhkZVRnD48540659 = ZCDhkZVRnD17124274;     ZCDhkZVRnD17124274 = ZCDhkZVRnD59082035;     ZCDhkZVRnD59082035 = ZCDhkZVRnD58964209;     ZCDhkZVRnD58964209 = ZCDhkZVRnD9115557;     ZCDhkZVRnD9115557 = ZCDhkZVRnD21127441;     ZCDhkZVRnD21127441 = ZCDhkZVRnD32086208;     ZCDhkZVRnD32086208 = ZCDhkZVRnD72881221;     ZCDhkZVRnD72881221 = ZCDhkZVRnD37991791;     ZCDhkZVRnD37991791 = ZCDhkZVRnD57719822;     ZCDhkZVRnD57719822 = ZCDhkZVRnD78744565;     ZCDhkZVRnD78744565 = ZCDhkZVRnD50794970;     ZCDhkZVRnD50794970 = ZCDhkZVRnD90404845;     ZCDhkZVRnD90404845 = ZCDhkZVRnD89582736;     ZCDhkZVRnD89582736 = ZCDhkZVRnD29487700;     ZCDhkZVRnD29487700 = ZCDhkZVRnD28189627;     ZCDhkZVRnD28189627 = ZCDhkZVRnD15166101;     ZCDhkZVRnD15166101 = ZCDhkZVRnD72666982;     ZCDhkZVRnD72666982 = ZCDhkZVRnD91580411;     ZCDhkZVRnD91580411 = ZCDhkZVRnD9251117;     ZCDhkZVRnD9251117 = ZCDhkZVRnD40406216;     ZCDhkZVRnD40406216 = ZCDhkZVRnD46382826;     ZCDhkZVRnD46382826 = ZCDhkZVRnD9901829;     ZCDhkZVRnD9901829 = ZCDhkZVRnD21776234;     ZCDhkZVRnD21776234 = ZCDhkZVRnD38097421;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void AcVNsJGwtU3333591() {     double fVfeIucbKY47412687 = 24002175;    double fVfeIucbKY74454814 = -332883043;    double fVfeIucbKY75558312 = -728591102;    double fVfeIucbKY70523736 = -595067237;    double fVfeIucbKY85561498 = -158044793;    double fVfeIucbKY81624189 = -879562827;    double fVfeIucbKY26228370 = -828120600;    double fVfeIucbKY86170469 = -743496819;    double fVfeIucbKY79481897 = -809093524;    double fVfeIucbKY47762667 = -910796650;    double fVfeIucbKY63926309 = -480466944;    double fVfeIucbKY21803888 = -167341559;    double fVfeIucbKY74794509 = -981401086;    double fVfeIucbKY27495444 = -341741026;    double fVfeIucbKY41682395 = -62644467;    double fVfeIucbKY47659354 = -427830929;    double fVfeIucbKY32787538 = -59471111;    double fVfeIucbKY48492591 = -890104915;    double fVfeIucbKY4830185 = 58641391;    double fVfeIucbKY47770646 = -159957460;    double fVfeIucbKY90806752 = -525785987;    double fVfeIucbKY49149844 = -802629038;    double fVfeIucbKY4329953 = -581581102;    double fVfeIucbKY91528912 = -483227867;    double fVfeIucbKY58894495 = -35787773;    double fVfeIucbKY30573616 = -403729730;    double fVfeIucbKY46194149 = -249717966;    double fVfeIucbKY3572204 = -295667973;    double fVfeIucbKY5819781 = -410293103;    double fVfeIucbKY69436741 = -300343111;    double fVfeIucbKY7894005 = 82167022;    double fVfeIucbKY52819673 = -307435129;    double fVfeIucbKY7788017 = -731644119;    double fVfeIucbKY74641632 = -73196068;    double fVfeIucbKY89389501 = -354339492;    double fVfeIucbKY12075800 = -899605781;    double fVfeIucbKY88741183 = -353847526;    double fVfeIucbKY88104661 = -996243833;    double fVfeIucbKY19725145 = 32007284;    double fVfeIucbKY43325253 = -968581844;    double fVfeIucbKY53410820 = -473366654;    double fVfeIucbKY86389310 = -508544202;    double fVfeIucbKY98117278 = -134102857;    double fVfeIucbKY9901313 = -405940608;    double fVfeIucbKY9190323 = -517139820;    double fVfeIucbKY7106979 = -271198120;    double fVfeIucbKY60799872 = -966769303;    double fVfeIucbKY62779479 = -817029361;    double fVfeIucbKY66418665 = -125245655;    double fVfeIucbKY35459554 = -385321728;    double fVfeIucbKY55631711 = -502227692;    double fVfeIucbKY44392846 = 56529756;    double fVfeIucbKY84823402 = 10151954;    double fVfeIucbKY11714961 = 30316614;    double fVfeIucbKY12526838 = -395293460;    double fVfeIucbKY98262843 = -173368787;    double fVfeIucbKY70124861 = -751301941;    double fVfeIucbKY84029400 = -145363235;    double fVfeIucbKY11629242 = -459279464;    double fVfeIucbKY54987883 = -754315064;    double fVfeIucbKY35430041 = -529844861;    double fVfeIucbKY22656166 = -432452627;    double fVfeIucbKY80350688 = -233203716;    double fVfeIucbKY10045157 = -408750413;    double fVfeIucbKY39868663 = -892963672;    double fVfeIucbKY11106636 = -73031816;    double fVfeIucbKY14015872 = -435697441;    double fVfeIucbKY152877 = -808205018;    double fVfeIucbKY38105943 = -987401535;    double fVfeIucbKY29606596 = -163038686;    double fVfeIucbKY58918171 = 26016597;    double fVfeIucbKY44682877 = -63227279;    double fVfeIucbKY28767446 = -822112199;    double fVfeIucbKY61504931 = 27223234;    double fVfeIucbKY94359826 = -686590806;    double fVfeIucbKY4417443 = 82758214;    double fVfeIucbKY51032565 = -568526182;    double fVfeIucbKY94428639 = -75640494;    double fVfeIucbKY82338589 = -966088047;    double fVfeIucbKY51787517 = -764589653;    double fVfeIucbKY69773743 = -436960427;    double fVfeIucbKY83414670 = -432688606;    double fVfeIucbKY37153539 = -70422319;    double fVfeIucbKY70360226 = 75028625;    double fVfeIucbKY13805030 = -798115420;    double fVfeIucbKY63501159 = -974362735;    double fVfeIucbKY67996271 = -217587083;    double fVfeIucbKY96073056 = -661960733;    double fVfeIucbKY62114795 = -677902608;    double fVfeIucbKY91126657 = -80970705;    double fVfeIucbKY41950938 = -48303840;    double fVfeIucbKY4711783 = -108484292;    double fVfeIucbKY76475419 = -436964369;    double fVfeIucbKY64737262 = -213677653;    double fVfeIucbKY7895213 = -338736983;    double fVfeIucbKY30754655 = 59085972;    double fVfeIucbKY6038622 = -175340486;    double fVfeIucbKY88072122 = -725352444;    double fVfeIucbKY70032650 = -512976937;    double fVfeIucbKY98083686 = 24002175;     fVfeIucbKY47412687 = fVfeIucbKY74454814;     fVfeIucbKY74454814 = fVfeIucbKY75558312;     fVfeIucbKY75558312 = fVfeIucbKY70523736;     fVfeIucbKY70523736 = fVfeIucbKY85561498;     fVfeIucbKY85561498 = fVfeIucbKY81624189;     fVfeIucbKY81624189 = fVfeIucbKY26228370;     fVfeIucbKY26228370 = fVfeIucbKY86170469;     fVfeIucbKY86170469 = fVfeIucbKY79481897;     fVfeIucbKY79481897 = fVfeIucbKY47762667;     fVfeIucbKY47762667 = fVfeIucbKY63926309;     fVfeIucbKY63926309 = fVfeIucbKY21803888;     fVfeIucbKY21803888 = fVfeIucbKY74794509;     fVfeIucbKY74794509 = fVfeIucbKY27495444;     fVfeIucbKY27495444 = fVfeIucbKY41682395;     fVfeIucbKY41682395 = fVfeIucbKY47659354;     fVfeIucbKY47659354 = fVfeIucbKY32787538;     fVfeIucbKY32787538 = fVfeIucbKY48492591;     fVfeIucbKY48492591 = fVfeIucbKY4830185;     fVfeIucbKY4830185 = fVfeIucbKY47770646;     fVfeIucbKY47770646 = fVfeIucbKY90806752;     fVfeIucbKY90806752 = fVfeIucbKY49149844;     fVfeIucbKY49149844 = fVfeIucbKY4329953;     fVfeIucbKY4329953 = fVfeIucbKY91528912;     fVfeIucbKY91528912 = fVfeIucbKY58894495;     fVfeIucbKY58894495 = fVfeIucbKY30573616;     fVfeIucbKY30573616 = fVfeIucbKY46194149;     fVfeIucbKY46194149 = fVfeIucbKY3572204;     fVfeIucbKY3572204 = fVfeIucbKY5819781;     fVfeIucbKY5819781 = fVfeIucbKY69436741;     fVfeIucbKY69436741 = fVfeIucbKY7894005;     fVfeIucbKY7894005 = fVfeIucbKY52819673;     fVfeIucbKY52819673 = fVfeIucbKY7788017;     fVfeIucbKY7788017 = fVfeIucbKY74641632;     fVfeIucbKY74641632 = fVfeIucbKY89389501;     fVfeIucbKY89389501 = fVfeIucbKY12075800;     fVfeIucbKY12075800 = fVfeIucbKY88741183;     fVfeIucbKY88741183 = fVfeIucbKY88104661;     fVfeIucbKY88104661 = fVfeIucbKY19725145;     fVfeIucbKY19725145 = fVfeIucbKY43325253;     fVfeIucbKY43325253 = fVfeIucbKY53410820;     fVfeIucbKY53410820 = fVfeIucbKY86389310;     fVfeIucbKY86389310 = fVfeIucbKY98117278;     fVfeIucbKY98117278 = fVfeIucbKY9901313;     fVfeIucbKY9901313 = fVfeIucbKY9190323;     fVfeIucbKY9190323 = fVfeIucbKY7106979;     fVfeIucbKY7106979 = fVfeIucbKY60799872;     fVfeIucbKY60799872 = fVfeIucbKY62779479;     fVfeIucbKY62779479 = fVfeIucbKY66418665;     fVfeIucbKY66418665 = fVfeIucbKY35459554;     fVfeIucbKY35459554 = fVfeIucbKY55631711;     fVfeIucbKY55631711 = fVfeIucbKY44392846;     fVfeIucbKY44392846 = fVfeIucbKY84823402;     fVfeIucbKY84823402 = fVfeIucbKY11714961;     fVfeIucbKY11714961 = fVfeIucbKY12526838;     fVfeIucbKY12526838 = fVfeIucbKY98262843;     fVfeIucbKY98262843 = fVfeIucbKY70124861;     fVfeIucbKY70124861 = fVfeIucbKY84029400;     fVfeIucbKY84029400 = fVfeIucbKY11629242;     fVfeIucbKY11629242 = fVfeIucbKY54987883;     fVfeIucbKY54987883 = fVfeIucbKY35430041;     fVfeIucbKY35430041 = fVfeIucbKY22656166;     fVfeIucbKY22656166 = fVfeIucbKY80350688;     fVfeIucbKY80350688 = fVfeIucbKY10045157;     fVfeIucbKY10045157 = fVfeIucbKY39868663;     fVfeIucbKY39868663 = fVfeIucbKY11106636;     fVfeIucbKY11106636 = fVfeIucbKY14015872;     fVfeIucbKY14015872 = fVfeIucbKY152877;     fVfeIucbKY152877 = fVfeIucbKY38105943;     fVfeIucbKY38105943 = fVfeIucbKY29606596;     fVfeIucbKY29606596 = fVfeIucbKY58918171;     fVfeIucbKY58918171 = fVfeIucbKY44682877;     fVfeIucbKY44682877 = fVfeIucbKY28767446;     fVfeIucbKY28767446 = fVfeIucbKY61504931;     fVfeIucbKY61504931 = fVfeIucbKY94359826;     fVfeIucbKY94359826 = fVfeIucbKY4417443;     fVfeIucbKY4417443 = fVfeIucbKY51032565;     fVfeIucbKY51032565 = fVfeIucbKY94428639;     fVfeIucbKY94428639 = fVfeIucbKY82338589;     fVfeIucbKY82338589 = fVfeIucbKY51787517;     fVfeIucbKY51787517 = fVfeIucbKY69773743;     fVfeIucbKY69773743 = fVfeIucbKY83414670;     fVfeIucbKY83414670 = fVfeIucbKY37153539;     fVfeIucbKY37153539 = fVfeIucbKY70360226;     fVfeIucbKY70360226 = fVfeIucbKY13805030;     fVfeIucbKY13805030 = fVfeIucbKY63501159;     fVfeIucbKY63501159 = fVfeIucbKY67996271;     fVfeIucbKY67996271 = fVfeIucbKY96073056;     fVfeIucbKY96073056 = fVfeIucbKY62114795;     fVfeIucbKY62114795 = fVfeIucbKY91126657;     fVfeIucbKY91126657 = fVfeIucbKY41950938;     fVfeIucbKY41950938 = fVfeIucbKY4711783;     fVfeIucbKY4711783 = fVfeIucbKY76475419;     fVfeIucbKY76475419 = fVfeIucbKY64737262;     fVfeIucbKY64737262 = fVfeIucbKY7895213;     fVfeIucbKY7895213 = fVfeIucbKY30754655;     fVfeIucbKY30754655 = fVfeIucbKY6038622;     fVfeIucbKY6038622 = fVfeIucbKY88072122;     fVfeIucbKY88072122 = fVfeIucbKY70032650;     fVfeIucbKY70032650 = fVfeIucbKY98083686;     fVfeIucbKY98083686 = fVfeIucbKY47412687;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void obBXdXJpsh61574472() {     double wAbvJpNDnZ86069815 = -232903862;    double wAbvJpNDnZ99776535 = -520369372;    double wAbvJpNDnZ17054686 = 42934131;    double wAbvJpNDnZ73462332 = -417133670;    double wAbvJpNDnZ13014519 = -819508924;    double wAbvJpNDnZ19973222 = -336283348;    double wAbvJpNDnZ50050881 = -333130235;    double wAbvJpNDnZ87678295 = -297816194;    double wAbvJpNDnZ9165665 = -809452936;    double wAbvJpNDnZ90060177 = -67303838;    double wAbvJpNDnZ78899738 = -596278159;    double wAbvJpNDnZ1786744 = -224425944;    double wAbvJpNDnZ22601752 = -678944636;    double wAbvJpNDnZ29581272 = -864919972;    double wAbvJpNDnZ19410523 = -827137727;    double wAbvJpNDnZ94665785 = -118166471;    double wAbvJpNDnZ38598239 = 2514362;    double wAbvJpNDnZ63392270 = 71932346;    double wAbvJpNDnZ25563605 = -905793763;    double wAbvJpNDnZ24253048 = -308323448;    double wAbvJpNDnZ4019774 = -653273149;    double wAbvJpNDnZ90259257 = -804231948;    double wAbvJpNDnZ75325807 = -87224800;    double wAbvJpNDnZ60536113 = -288908594;    double wAbvJpNDnZ86275338 = -5709989;    double wAbvJpNDnZ82457929 = -312862854;    double wAbvJpNDnZ41913212 = -964228749;    double wAbvJpNDnZ2287979 = -906647927;    double wAbvJpNDnZ53472646 = -876424637;    double wAbvJpNDnZ19135464 = -323463977;    double wAbvJpNDnZ4233066 = -167144344;    double wAbvJpNDnZ70291433 = -802131022;    double wAbvJpNDnZ60154409 = -797717738;    double wAbvJpNDnZ98588442 = -969908003;    double wAbvJpNDnZ80373578 = -943119232;    double wAbvJpNDnZ26735625 = -216370426;    double wAbvJpNDnZ94358672 = -966107560;    double wAbvJpNDnZ61266650 = -959988768;    double wAbvJpNDnZ42731153 = -776161283;    double wAbvJpNDnZ96194744 = -767590680;    double wAbvJpNDnZ5256338 = -314448092;    double wAbvJpNDnZ31255636 = -854219306;    double wAbvJpNDnZ31150685 = -928359440;    double wAbvJpNDnZ21381811 = -381324968;    double wAbvJpNDnZ33204391 = -473528621;    double wAbvJpNDnZ11368347 = -650440195;    double wAbvJpNDnZ67616093 = -904814271;    double wAbvJpNDnZ44019887 = -320203810;    double wAbvJpNDnZ45662746 = 61057936;    double wAbvJpNDnZ16715393 = -582351438;    double wAbvJpNDnZ37669466 = -270086575;    double wAbvJpNDnZ81285641 = 95617512;    double wAbvJpNDnZ93203751 = -641880918;    double wAbvJpNDnZ36319171 = -200574858;    double wAbvJpNDnZ57554698 = 23830092;    double wAbvJpNDnZ95810558 = -428671915;    double wAbvJpNDnZ24450729 = -333144573;    double wAbvJpNDnZ56518573 = -668157276;    double wAbvJpNDnZ87186994 = -311423681;    double wAbvJpNDnZ30556589 = -406646071;    double wAbvJpNDnZ78060009 = -372054600;    double wAbvJpNDnZ47762902 = -426482309;    double wAbvJpNDnZ34205649 = -421391558;    double wAbvJpNDnZ90030201 = -385988960;    double wAbvJpNDnZ85827111 = -900159494;    double wAbvJpNDnZ8608305 = -794147137;    double wAbvJpNDnZ41632334 = -426708207;    double wAbvJpNDnZ24013309 = -709036634;    double wAbvJpNDnZ49207693 = -921800741;    double wAbvJpNDnZ92674897 = -510767301;    double wAbvJpNDnZ307113 = -152058912;    double wAbvJpNDnZ77331588 = -37496871;    double wAbvJpNDnZ20661117 = -151906372;    double wAbvJpNDnZ29368860 = -38203083;    double wAbvJpNDnZ18996710 = -993875356;    double wAbvJpNDnZ72764138 = -799053843;    double wAbvJpNDnZ59108572 = -875872509;    double wAbvJpNDnZ53943996 = -705899832;    double wAbvJpNDnZ27331722 = -815379973;    double wAbvJpNDnZ74906991 = -355269795;    double wAbvJpNDnZ14841837 = -408048584;    double wAbvJpNDnZ97893324 = -544024939;    double wAbvJpNDnZ56625233 = -867705863;    double wAbvJpNDnZ36757254 = -194073199;    double wAbvJpNDnZ81465997 = 46622597;    double wAbvJpNDnZ22947425 = -162761857;    double wAbvJpNDnZ77087682 = -60250104;    double wAbvJpNDnZ23835239 = -497142880;    double wAbvJpNDnZ41033745 = -893738095;    double wAbvJpNDnZ84563020 = -414447318;    double wAbvJpNDnZ2284897 = -883225854;    double wAbvJpNDnZ37840100 = -197950284;    double wAbvJpNDnZ74079656 = -548565087;    double wAbvJpNDnZ12174565 = -269515213;    double wAbvJpNDnZ18134736 = -295536081;    double wAbvJpNDnZ57493435 = -887965784;    double wAbvJpNDnZ97049987 = -332827749;    double wAbvJpNDnZ41120484 = -442370481;    double wAbvJpNDnZ35554700 = -481165474;    double wAbvJpNDnZ24596086 = -232903862;     wAbvJpNDnZ86069815 = wAbvJpNDnZ99776535;     wAbvJpNDnZ99776535 = wAbvJpNDnZ17054686;     wAbvJpNDnZ17054686 = wAbvJpNDnZ73462332;     wAbvJpNDnZ73462332 = wAbvJpNDnZ13014519;     wAbvJpNDnZ13014519 = wAbvJpNDnZ19973222;     wAbvJpNDnZ19973222 = wAbvJpNDnZ50050881;     wAbvJpNDnZ50050881 = wAbvJpNDnZ87678295;     wAbvJpNDnZ87678295 = wAbvJpNDnZ9165665;     wAbvJpNDnZ9165665 = wAbvJpNDnZ90060177;     wAbvJpNDnZ90060177 = wAbvJpNDnZ78899738;     wAbvJpNDnZ78899738 = wAbvJpNDnZ1786744;     wAbvJpNDnZ1786744 = wAbvJpNDnZ22601752;     wAbvJpNDnZ22601752 = wAbvJpNDnZ29581272;     wAbvJpNDnZ29581272 = wAbvJpNDnZ19410523;     wAbvJpNDnZ19410523 = wAbvJpNDnZ94665785;     wAbvJpNDnZ94665785 = wAbvJpNDnZ38598239;     wAbvJpNDnZ38598239 = wAbvJpNDnZ63392270;     wAbvJpNDnZ63392270 = wAbvJpNDnZ25563605;     wAbvJpNDnZ25563605 = wAbvJpNDnZ24253048;     wAbvJpNDnZ24253048 = wAbvJpNDnZ4019774;     wAbvJpNDnZ4019774 = wAbvJpNDnZ90259257;     wAbvJpNDnZ90259257 = wAbvJpNDnZ75325807;     wAbvJpNDnZ75325807 = wAbvJpNDnZ60536113;     wAbvJpNDnZ60536113 = wAbvJpNDnZ86275338;     wAbvJpNDnZ86275338 = wAbvJpNDnZ82457929;     wAbvJpNDnZ82457929 = wAbvJpNDnZ41913212;     wAbvJpNDnZ41913212 = wAbvJpNDnZ2287979;     wAbvJpNDnZ2287979 = wAbvJpNDnZ53472646;     wAbvJpNDnZ53472646 = wAbvJpNDnZ19135464;     wAbvJpNDnZ19135464 = wAbvJpNDnZ4233066;     wAbvJpNDnZ4233066 = wAbvJpNDnZ70291433;     wAbvJpNDnZ70291433 = wAbvJpNDnZ60154409;     wAbvJpNDnZ60154409 = wAbvJpNDnZ98588442;     wAbvJpNDnZ98588442 = wAbvJpNDnZ80373578;     wAbvJpNDnZ80373578 = wAbvJpNDnZ26735625;     wAbvJpNDnZ26735625 = wAbvJpNDnZ94358672;     wAbvJpNDnZ94358672 = wAbvJpNDnZ61266650;     wAbvJpNDnZ61266650 = wAbvJpNDnZ42731153;     wAbvJpNDnZ42731153 = wAbvJpNDnZ96194744;     wAbvJpNDnZ96194744 = wAbvJpNDnZ5256338;     wAbvJpNDnZ5256338 = wAbvJpNDnZ31255636;     wAbvJpNDnZ31255636 = wAbvJpNDnZ31150685;     wAbvJpNDnZ31150685 = wAbvJpNDnZ21381811;     wAbvJpNDnZ21381811 = wAbvJpNDnZ33204391;     wAbvJpNDnZ33204391 = wAbvJpNDnZ11368347;     wAbvJpNDnZ11368347 = wAbvJpNDnZ67616093;     wAbvJpNDnZ67616093 = wAbvJpNDnZ44019887;     wAbvJpNDnZ44019887 = wAbvJpNDnZ45662746;     wAbvJpNDnZ45662746 = wAbvJpNDnZ16715393;     wAbvJpNDnZ16715393 = wAbvJpNDnZ37669466;     wAbvJpNDnZ37669466 = wAbvJpNDnZ81285641;     wAbvJpNDnZ81285641 = wAbvJpNDnZ93203751;     wAbvJpNDnZ93203751 = wAbvJpNDnZ36319171;     wAbvJpNDnZ36319171 = wAbvJpNDnZ57554698;     wAbvJpNDnZ57554698 = wAbvJpNDnZ95810558;     wAbvJpNDnZ95810558 = wAbvJpNDnZ24450729;     wAbvJpNDnZ24450729 = wAbvJpNDnZ56518573;     wAbvJpNDnZ56518573 = wAbvJpNDnZ87186994;     wAbvJpNDnZ87186994 = wAbvJpNDnZ30556589;     wAbvJpNDnZ30556589 = wAbvJpNDnZ78060009;     wAbvJpNDnZ78060009 = wAbvJpNDnZ47762902;     wAbvJpNDnZ47762902 = wAbvJpNDnZ34205649;     wAbvJpNDnZ34205649 = wAbvJpNDnZ90030201;     wAbvJpNDnZ90030201 = wAbvJpNDnZ85827111;     wAbvJpNDnZ85827111 = wAbvJpNDnZ8608305;     wAbvJpNDnZ8608305 = wAbvJpNDnZ41632334;     wAbvJpNDnZ41632334 = wAbvJpNDnZ24013309;     wAbvJpNDnZ24013309 = wAbvJpNDnZ49207693;     wAbvJpNDnZ49207693 = wAbvJpNDnZ92674897;     wAbvJpNDnZ92674897 = wAbvJpNDnZ307113;     wAbvJpNDnZ307113 = wAbvJpNDnZ77331588;     wAbvJpNDnZ77331588 = wAbvJpNDnZ20661117;     wAbvJpNDnZ20661117 = wAbvJpNDnZ29368860;     wAbvJpNDnZ29368860 = wAbvJpNDnZ18996710;     wAbvJpNDnZ18996710 = wAbvJpNDnZ72764138;     wAbvJpNDnZ72764138 = wAbvJpNDnZ59108572;     wAbvJpNDnZ59108572 = wAbvJpNDnZ53943996;     wAbvJpNDnZ53943996 = wAbvJpNDnZ27331722;     wAbvJpNDnZ27331722 = wAbvJpNDnZ74906991;     wAbvJpNDnZ74906991 = wAbvJpNDnZ14841837;     wAbvJpNDnZ14841837 = wAbvJpNDnZ97893324;     wAbvJpNDnZ97893324 = wAbvJpNDnZ56625233;     wAbvJpNDnZ56625233 = wAbvJpNDnZ36757254;     wAbvJpNDnZ36757254 = wAbvJpNDnZ81465997;     wAbvJpNDnZ81465997 = wAbvJpNDnZ22947425;     wAbvJpNDnZ22947425 = wAbvJpNDnZ77087682;     wAbvJpNDnZ77087682 = wAbvJpNDnZ23835239;     wAbvJpNDnZ23835239 = wAbvJpNDnZ41033745;     wAbvJpNDnZ41033745 = wAbvJpNDnZ84563020;     wAbvJpNDnZ84563020 = wAbvJpNDnZ2284897;     wAbvJpNDnZ2284897 = wAbvJpNDnZ37840100;     wAbvJpNDnZ37840100 = wAbvJpNDnZ74079656;     wAbvJpNDnZ74079656 = wAbvJpNDnZ12174565;     wAbvJpNDnZ12174565 = wAbvJpNDnZ18134736;     wAbvJpNDnZ18134736 = wAbvJpNDnZ57493435;     wAbvJpNDnZ57493435 = wAbvJpNDnZ97049987;     wAbvJpNDnZ97049987 = wAbvJpNDnZ41120484;     wAbvJpNDnZ41120484 = wAbvJpNDnZ35554700;     wAbvJpNDnZ35554700 = wAbvJpNDnZ24596086;     wAbvJpNDnZ24596086 = wAbvJpNDnZ86069815;}
// Junk Finished
