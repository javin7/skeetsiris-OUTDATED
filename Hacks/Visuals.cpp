#include "../fnv.h"
#include "Visuals.h"

#include "Animations.h"
#include "Resolver.h"
#include "Ragebot.h"

#include "../SDK/ConVar.h"
#include "../SDK/Entity.h"
#include "../SDK/FrameStage.h"
#include "../SDK/GameEvent.h"
#include "../SDK/GlobalVars.h"
#include "../SDK/Input.h"
#include "../SDK/Material.h"
#include "../SDK/MaterialSystem.h"
#include "../SDK/NetworkStringTable.h"
#include "../SDK/RenderContext.h"
#include "../SDK/Surface.h"
#include "../SDK/ModelInfo.h"
#include "../SDK/Beams.h"
#include "../Hooks.h"

#include <array>

static constexpr bool worldToScreen(const Vector& in, Vector& out) noexcept
{
    const auto& matrix = interfaces->engine->worldToScreenMatrix();
    float w = matrix._41 * in.x + matrix._42 * in.y + matrix._43 * in.z + matrix._44;

    if (w > 0.001f) {
        const auto [width, height] = interfaces->surface->getScreenSize();
        out.x = width / 2 * (1 + (matrix._11 * in.x + matrix._12 * in.y + matrix._13 * in.z + matrix._14) / w);
        out.y = height / 2 * (1 - (matrix._21 * in.x + matrix._22 * in.y + matrix._23 * in.z + matrix._24) / w);
        out.z = 0.0f;
        return true;
    }
    return false;
}

struct Color {
    std::array<float, 4> color{ 1.0f, 1.0f, 1.0f, 1.0f };
};

void Visuals::playerModel(FrameStage stage) noexcept
{
    if (stage != FrameStage::RENDER_START && stage != FrameStage::RENDER_END)
        return;

    static int originalIdx = 0;

    if (!localPlayer) {
        originalIdx = 0;
        return;
    }

    constexpr auto getModel = [](int team) constexpr noexcept -> const char* {
        constexpr std::array models{
        "models/player/custom_player/legacy/ctm_fbi_variantb.mdl",
        "models/player/custom_player/legacy/ctm_fbi_variantf.mdl",
        "models/player/custom_player/legacy/ctm_fbi_variantg.mdl",
        "models/player/custom_player/legacy/ctm_fbi_varianth.mdl",
        "models/player/custom_player/legacy/ctm_sas_variantf.mdl",
        "models/player/custom_player/legacy/ctm_st6_variante.mdl",
        "models/player/custom_player/legacy/ctm_st6_variantg.mdl",
        "models/player/custom_player/legacy/ctm_st6_varianti.mdl",
        "models/player/custom_player/legacy/ctm_st6_variantk.mdl",
        "models/player/custom_player/legacy/ctm_st6_variantm.mdl",
        "models/player/custom_player/legacy/tm_balkan_variantf.mdl",
        "models/player/custom_player/legacy/tm_balkan_variantg.mdl",
        "models/player/custom_player/legacy/tm_balkan_varianth.mdl",
        "models/player/custom_player/legacy/tm_balkan_varianti.mdl",
        "models/player/custom_player/legacy/tm_balkan_variantj.mdl",
        "models/player/custom_player/legacy/tm_leet_variantf.mdl",
        "models/player/custom_player/legacy/tm_leet_variantg.mdl",
        "models/player/custom_player/legacy/tm_leet_varianth.mdl",
        "models/player/custom_player/legacy/tm_leet_varianti.mdl",
        "models/player/custom_player/legacy/tm_phoenix_variantf.mdl",
        "models/player/custom_player/legacy/tm_phoenix_variantg.mdl",
        "models/player/custom_player/legacy/tm_phoenix_varianth.mdl",
        
        "models/player/custom_player/legacy/tm_pirate.mdl",
        "models/player/custom_player/legacy/tm_pirate_varianta.mdl",
        "models/player/custom_player/legacy/tm_pirate_variantb.mdl",
        "models/player/custom_player/legacy/tm_pirate_variantc.mdl",
        "models/player/custom_player/legacy/tm_pirate_variantd.mdl",
        "models/player/custom_player/legacy/tm_anarchist.mdl",
        "models/player/custom_player/legacy/tm_anarchist_varianta.mdl",
        "models/player/custom_player/legacy/tm_anarchist_variantb.mdl",
        "models/player/custom_player/legacy/tm_anarchist_variantc.mdl",
        "models/player/custom_player/legacy/tm_anarchist_variantd.mdl",
        "models/player/custom_player/legacy/tm_balkan_varianta.mdl",
        "models/player/custom_player/legacy/tm_balkan_variantb.mdl",
        "models/player/custom_player/legacy/tm_balkan_variantc.mdl",
        "models/player/custom_player/legacy/tm_balkan_variantd.mdl",
        "models/player/custom_player/legacy/tm_balkan_variante.mdl",
        "models/player/custom_player/legacy/tm_jumpsuit_varianta.mdl",
        "models/player/custom_player/legacy/tm_jumpsuit_variantb.mdl",
        "models/player/custom_player/legacy/tm_jumpsuit_variantc.mdl"
        };

        switch (team) {
        case 2: return static_cast<std::size_t>(config->visuals.playerModelT - 1) < models.size() ? models[config->visuals.playerModelT - 1] : nullptr;
        case 3: return static_cast<std::size_t>(config->visuals.playerModelCT - 1) < models.size() ? models[config->visuals.playerModelCT - 1] : nullptr;
        default: return nullptr;
        }
    };

    if (const auto model = getModel(localPlayer->team())) {
        if (stage == FrameStage::RENDER_START) {
            originalIdx = localPlayer->modelIndex();
            if (const auto modelprecache = interfaces->networkStringTableContainer->findTable("modelprecache")) {
                modelprecache->addString(false, model);
                const auto viewmodelArmConfig = memory->getPlayerViewmodelArmConfigForPlayerModel(model);
                modelprecache->addString(false, viewmodelArmConfig[2]);
                modelprecache->addString(false, viewmodelArmConfig[3]);
            }
        }

        const auto idx = stage == FrameStage::RENDER_END && originalIdx ? originalIdx : interfaces->modelInfo->getModelIndex(model);

        localPlayer->setModelIndex(idx);

        if (const auto ragdoll = interfaces->entityList->getEntityFromHandle(localPlayer->ragdoll()))
            ragdoll->setModelIndex(idx);
    }
}

void Visuals::rainbowCrosshair() noexcept
{
    const auto red = interfaces->cvar->findVar("cl_crosshaircolor_r");
    const auto green = interfaces->cvar->findVar("cl_crosshaircolor_g");
    const auto blue = interfaces->cvar->findVar("cl_crosshaircolor_b");
    const auto color = interfaces->cvar->findVar("cl_crosshaircolor");

    auto [r, g, b] = rainbowColor(memory->globalVars->realtime, config->visuals.rainbowCrosshairSpeed);
    r *= 255;
    g *= 255;
    b *= 255;

    static bool enabled = false;
    static float backupR;
    static float backupG;
    static float backupB;
    static int backupColor;

    if (config->visuals.rainbowCrosshair) {
        red->setValue(r);
        green->setValue(g);
        blue->setValue(b);
        color->setValue(5);
        enabled = true;
    }
    else {
        if (enabled) {
            red->setValue(backupR);
            green->setValue(backupG);
            blue->setValue(backupB);
            color->setValue(backupColor);
        }
        backupR = red->getFloat();
        backupG = green->getFloat();
        backupB = blue->getFloat();
        backupColor = color->getInt();
        enabled = false;
    }
}

void Visuals::nightMode() noexcept
{
    static auto drawSpecificStaticProp = interfaces->cvar->findVar("r_drawspecificstaticprop");
    if (drawSpecificStaticProp->getInt() != config->visuals.nightMode)
        drawSpecificStaticProp->setValue(config->visuals.nightMode);

    static Color null = { 0.0f, 0.0f, 0.0f, 0.0f };

    static Color 
        lastWorldColor = null,
        lastPropColor = null,
        lastSkyboxColor = null;
    static Color 
        worldColor = null,
        propColor = null,
        skyboxColor = null;
    static float r = .06f, g = .06f, b = .06f;

    if (config->visuals.nightModeOverride.enabled) {
        r = config->visuals.nightModeOverride.color[0];
        g = config->visuals.nightModeOverride.color[1];
        b = config->visuals.nightModeOverride.color[2];
    }
    else {
        r = .06f, g = .06f, b = .06f;
    }

    if (config->visuals.nightMode) {
        worldColor = { r, g, b, 1.0f };
        propColor = { -((r - 1.f) * (r - 1.f)) * 0.8f + 1.f, -((g - 1.f) * (g - 1.f)) * 0.8f + 1.f, -((b - 1.f) * (b - 1.f)) * 0.8f + 1.f, 1.0f };
        skyboxColor = { -((r - 1.f) * (r - 1.f)) * 0.8f + 1.f, -((g - 1.f) * (g - 1.f)) * 0.8f + 1.f, -((b - 1.f) * (b - 1.f)) * 0.8f + 1.f, 1.0f };
    }
    else {
        worldColor = { 1.0f, 1.0f, 1.0f, 1.0f };
        propColor = { 1.0f, 1.0f, 1.0f, 1.0f };
        skyboxColor = { 1.0f, 1.0f, 1.0f, 1.0f };
    }
    worldColor.color[3] = config->visuals.asusWalls;
    propColor.color[3] = config->visuals.asusProps;

    bool didColorChange = (worldColor.color != lastWorldColor.color) ||
        (propColor.color != lastPropColor.color) ||
        (skyboxColor.color != lastSkyboxColor.color);

    static bool wasInGame = false;
    if (!interfaces->engine->isInGame())
        wasInGame = false;
    if (!wasInGame && interfaces->engine->isInGame())
    {
        didColorChange = true;
        wasInGame = true;
    }

    if (!didColorChange)
        return;

    for (short h = interfaces->materialSystem->firstMaterial(); h != interfaces->materialSystem->invalidMaterial(); h = interfaces->materialSystem->nextMaterial(h)) {
        const auto mat = interfaces->materialSystem->getMaterial(h);

        if (!mat)
            continue;

        const std::string_view textureGroup = mat->getTextureGroupName();

        if (textureGroup.starts_with("World")) {
            if (config->visuals.nightModeOverride.rainbow && config->visuals.nightModeOverride.enabled)
                mat->colorModulate(rainbowColor(memory->globalVars->realtime, config->visuals.nightModeOverride.rainbowSpeed));
            else
                mat->colorModulate(worldColor.color[0], worldColor.color[1], worldColor.color[2]);
            mat->alphaModulate((100.f - worldColor.color[3]) / 100.f);
            lastWorldColor = worldColor;
        }
        else if (textureGroup.starts_with("StaticProp") || textureGroup.starts_with("Prop")) {
            if (config->visuals.nightModeOverride.rainbow && config->visuals.nightModeOverride.enabled)
                mat->colorModulate(rainbowColor(memory->globalVars->realtime, config->visuals.nightModeOverride.rainbowSpeed));
            else
                mat->colorModulate(propColor.color[0], propColor.color[1], propColor.color[2]);
            mat->alphaModulate((100.f - propColor.color[3]) / 100.f);
            lastPropColor = propColor;
        }
        else if (textureGroup.starts_with("SkyBox"))
        {
            mat->colorModulate(skyboxColor.color[0], skyboxColor.color[1], skyboxColor.color[2]);
            lastSkyboxColor = skyboxColor;
        }
    }
}

void Visuals::modifySmoke(FrameStage stage) noexcept
{
    if (stage != FrameStage::RENDER_START && stage != FrameStage::RENDER_END)
        return;

    constexpr std::array smokeMaterials{
        "particle/vistasmokev1/vistasmokev1_emods",
        "particle/vistasmokev1/vistasmokev1_emods_impactdust",
        "particle/vistasmokev1/vistasmokev1_fire",
        "particle/vistasmokev1/vistasmokev1_smokegrenade"
    };

    for (const auto mat : smokeMaterials) {
        const auto material = interfaces->materialSystem->findMaterial(mat);
        material->setMaterialVarFlag(MaterialVarFlag::NO_DRAW, stage == FrameStage::RENDER_START && config->visuals.noSmoke);
        material->setMaterialVarFlag(MaterialVarFlag::WIREFRAME, stage == FrameStage::RENDER_START && config->visuals.wireframeSmoke);
    }
}

void Visuals::thirdperson() noexcept
{
    static bool isInThirdperson{ true };
    static float lastTime{ 0.0f };

    if (GetAsyncKeyState(config->visuals.thirdpersonKey) && memory->globalVars->realtime - lastTime > 0.5f) {
        isInThirdperson = !isInThirdperson;
        lastTime = memory->globalVars->realtime;
    }

    if (config->visuals.thirdperson)
        if (memory->input->isCameraInThirdPerson = (!config->visuals.thirdpersonKey || isInThirdperson)
            && localPlayer && localPlayer->isAlive())
            memory->input->cameraOffset.z = static_cast<float>(config->visuals.thirdpersonDistance);
}

void Visuals::removeVisualRecoil(FrameStage stage) noexcept
{
    if (!localPlayer || !localPlayer->isAlive())
        return;

    static Vector aimPunch;
    static Vector viewPunch;

    if (stage == FrameStage::RENDER_START) {
        aimPunch = localPlayer->aimPunchAngle();
        viewPunch = localPlayer->viewPunchAngle();

        if (config->visuals.noAimPunch && !config->misc.recoilCrosshair)
            localPlayer->aimPunchAngle() = Vector{ };

        if (config->visuals.noViewPunch)
            localPlayer->viewPunchAngle() = Vector{ };

    } else if (stage == FrameStage::RENDER_END) {
        localPlayer->aimPunchAngle() = aimPunch;
        localPlayer->viewPunchAngle() = viewPunch;
    }
}

void Visuals::removeBlur(FrameStage stage) noexcept
{
    if (stage != FrameStage::RENDER_START && stage != FrameStage::RENDER_END)
        return;

    static auto blur = interfaces->materialSystem->findMaterial("dev/scope_bluroverlay");
    blur->setMaterialVarFlag(MaterialVarFlag::NO_DRAW, stage == FrameStage::RENDER_START && config->visuals.noBlur);
}

void Visuals::updateBrightness() noexcept
{
    static auto brightness = interfaces->cvar->findVar("mat_force_tonemap_scale");
    brightness->setValue(config->visuals.brightness);
}

void Visuals::removeGrass(FrameStage stage) noexcept
{
    if (stage != FrameStage::RENDER_START && stage != FrameStage::RENDER_END)
        return;

    constexpr auto getGrassMaterialName = []() constexpr noexcept -> const char* {
        switch (fnv::hashRuntime(interfaces->engine->getLevelName())) {
        case fnv::hash("dz_blacksite"): return "detail/detailsprites_survival";
        case fnv::hash("dz_sirocco"): return "detail/dust_massive_detail_sprites";
        case fnv::hash("dz_junglety"): return "detail/tropical_grass";
        default: return nullptr;
        }
    };

    if (const auto grassMaterialName = getGrassMaterialName())
        interfaces->materialSystem->findMaterial(grassMaterialName)->setMaterialVarFlag(MaterialVarFlag::NO_DRAW, stage == FrameStage::RENDER_START && config->visuals.noGrass);
}

void Visuals::remove3dSky() noexcept
{
    static auto sky = interfaces->cvar->findVar("r_3dsky");
    sky->setValue(!config->visuals.no3dSky);
}

void Visuals::removeShadows() noexcept
{
    static auto shadows = interfaces->cvar->findVar("cl_csm_enabled");
    shadows->setValue(!config->visuals.noShadows);
}

#define DRAW_SCREEN_EFFECT(material) \
{ \
    const auto drawFunction = memory->drawScreenEffectMaterial; \
    int w, h; \
    interfaces->surface->getScreenSize(w, h); \
    __asm { \
        __asm push h \
        __asm push w \
        __asm push 0 \
        __asm xor edx, edx \
        __asm mov ecx, material \
        __asm call drawFunction \
        __asm add esp, 12 \
    } \
}

void Visuals::applyScreenEffects() noexcept
{
    if (!config->visuals.screenEffect)
        return;

    const auto material = interfaces->materialSystem->findMaterial([] {
        constexpr std::array effects{
            "effects/dronecam",
            "effects/underwater_overlay",
            "effects/healthboost",
            "effects/dangerzone_screen"
        };

        if (config->visuals.screenEffect <= 2 || static_cast<std::size_t>(config->visuals.screenEffect - 2) >= effects.size())
            return effects[0];
        return effects[config->visuals.screenEffect - 2];
    }());

    if (config->visuals.screenEffect == 1)
        material->findVar("$c0_x")->setValue(0.0f);
    else if (config->visuals.screenEffect == 2)
        material->findVar("$c0_x")->setValue(0.1f);
    else if (config->visuals.screenEffect >= 4)
        material->findVar("$c0_x")->setValue(1.0f);

    DRAW_SCREEN_EFFECT(material)
}

void Visuals::hitEffect(GameEvent* event) noexcept
{
    if (config->visuals.hitEffect && localPlayer) {
        static float lastHitTime = 0.0f;

        if (event && interfaces->engine->getPlayerForUserID(event->getInt("attacker")) == localPlayer->index()) {
            lastHitTime = memory->globalVars->realtime;
            return;
        }

        if (lastHitTime + config->visuals.hitEffectTime >= memory->globalVars->realtime) {
            constexpr auto getEffectMaterial = [] {
                static constexpr const char* effects[]{
                "effects/dronecam",
                "effects/underwater_overlay",
                "effects/healthboost",
                "effects/dangerzone_screen"
                };

                if (config->visuals.hitEffect <= 2)
                    return effects[0];
                return effects[config->visuals.hitEffect - 2];
            };

           
            auto material = interfaces->materialSystem->findMaterial(getEffectMaterial());
            if (config->visuals.hitEffect == 1)
                material->findVar("$c0_x")->setValue(0.0f);
            else if (config->visuals.hitEffect == 2)
                material->findVar("$c0_x")->setValue(0.1f);
            else if (config->visuals.hitEffect >= 4)
                material->findVar("$c0_x")->setValue(1.0f);

            DRAW_SCREEN_EFFECT(material)
        }
    }
}

void Visuals::hitMarker(GameEvent* event) noexcept
{
    if (config->visuals.hitMarker == 0 || !localPlayer)
        return;

    static float alpha = 0.f;

    if (event && interfaces->engine->getPlayerForUserID(event->getInt("attacker")) == localPlayer->index()) {
        alpha = 255.f;
        return;
    }

    if (alpha < 1.f)
        return;

    switch (config->visuals.hitMarker) {
    case 1:
        const auto [width, height] = interfaces->surface->getScreenSize();

        const auto width_mid = width / 2;
        const auto height_mid = height / 2;

        interfaces->surface->setDrawColor(255, 255, 255, alpha);
        interfaces->surface->drawLine(width_mid + 10, height_mid + 10, width_mid + 4, height_mid + 4);
        interfaces->surface->drawLine(width_mid - 10, height_mid + 10, width_mid - 4, height_mid + 4);
        interfaces->surface->drawLine(width_mid + 10, height_mid - 10, width_mid + 4, height_mid - 4);
        interfaces->surface->drawLine(width_mid - 10, height_mid - 10, width_mid - 4, height_mid - 4);
        alpha *= .95f;
        break;
    }
}

void Visuals::disablePostProcessing(FrameStage stage) noexcept
{
    if (stage != FrameStage::RENDER_START && stage != FrameStage::RENDER_END)
        return;

    *memory->disablePostProcessing = stage == FrameStage::RENDER_START && config->visuals.disablePostProcessing;
}

void Visuals::reduceFlashEffect() noexcept
{
    if (localPlayer)
        localPlayer->flashMaxAlpha() = 255.0f - config->visuals.flashReduction * 2.55f;
}

bool Visuals::removeHands(const char* modelName) noexcept
{
    return config->visuals.noHands && std::strstr(modelName, "arms") && !std::strstr(modelName, "sleeve");
}

bool Visuals::removeSleeves(const char* modelName) noexcept
{
    return config->visuals.noSleeves && std::strstr(modelName, "sleeve");
}

bool Visuals::removeWeapons(const char* modelName) noexcept
{
    return config->visuals.noWeapons && std::strstr(modelName, "models/weapons/v_")
        && !std::strstr(modelName, "arms") && !std::strstr(modelName, "tablet")
        && !std::strstr(modelName, "parachute") && !std::strstr(modelName, "fists");
}

void Visuals::skybox(FrameStage stage) noexcept
{
    if (stage != FrameStage::RENDER_START && stage != FrameStage::RENDER_END)
        return;

    constexpr std::array skyboxes{ "cs_baggage_skybox_", "cs_tibet", "embassy", "italy", "jungle", "nukeblank", "office", "sky_cs15_daylight01_hdr", "sky_cs15_daylight02_hdr", "sky_cs15_daylight03_hdr", "sky_cs15_daylight04_hdr", "sky_csgo_cloudy01", "sky_csgo_night_flat", "sky_csgo_night02", "sky_day02_05_hdr", "sky_day02_05", "sky_dust", "sky_l4d_rural02_ldr", "sky_venice", "vertigo_hdr", "vertigo", "vertigoblue_hdr", "vietnam" };

    if (stage == FrameStage::RENDER_START && static_cast<std::size_t>(config->visuals.skybox - 1) < skyboxes.size()) {
        memory->loadSky(skyboxes[config->visuals.skybox - 1]);
    }
    else {
        static const auto sv_skyname = interfaces->cvar->findVar("sv_skyname");
        memory->loadSky(sv_skyname->string);
    }
}

void Visuals::bulletBeams(GameEvent* event) noexcept
{
    if (!interfaces->engine->isInGame() || !interfaces->engine->isConnected() || memory->renderBeams == nullptr)
        return;

    const auto player = interfaces->entityList->getEntity(interfaces->engine->getPlayerForUserID(event->getInt("userid")));

    if (!player || !localPlayer || player->isDormant() || !player->isAlive())
        return;

    if (player == localPlayer.get() && !config->visuals.bulletTracersLocal.enabled) 
        return;

    if (localPlayer->isOtherEnemy(player) && !config->visuals.bulletTracersEnemy.enabled)
        return;

    if (!localPlayer->isOtherEnemy(player) && player != localPlayer.get() && !config->visuals.bulletTracersAllies.enabled)
        return;

    Vector position;
    position.x = event->getFloat("x");
    position.y = event->getFloat("y");
    position.z = event->getFloat("z");

    BeamInfo_t beam_info;
    beam_info.m_nType = TE_BEAMPOINTS;
    beam_info.m_pszModelName = "sprites/physbeam.vmt";
    beam_info.m_nModelIndex = -1;
    beam_info.m_flHaloScale = 0.f;
    beam_info.m_flLife = 4.f;
    beam_info.m_flWidth = 2.f;
    beam_info.m_flEndWidth = 2.f;
    beam_info.m_flFadeLength = 0.1f;
    beam_info.m_flAmplitude = 2.f;
    beam_info.m_flBrightness = 255.f;
    beam_info.m_flSpeed = 0.2f;
    beam_info.m_nStartFrame = 0;
    beam_info.m_flFrameRate = 0.f;
    if (player == localPlayer.get()) {
        beam_info.m_flRed = config->visuals.bulletTracersLocal.color[0] * 255;
        beam_info.m_flGreen = config->visuals.bulletTracersLocal.color[1] * 255;
        beam_info.m_flBlue = config->visuals.bulletTracersLocal.color[2] * 255;
    }
    else if (localPlayer->isOtherEnemy(player)) {
        beam_info.m_flRed = config->visuals.bulletTracersEnemy.color[0] * 255;
        beam_info.m_flGreen = config->visuals.bulletTracersEnemy.color[1] * 255;
        beam_info.m_flBlue = config->visuals.bulletTracersEnemy.color[2] * 255;
    }
    else {
        beam_info.m_flRed = config->visuals.bulletTracersAllies.color[0] * 255;
        beam_info.m_flGreen = config->visuals.bulletTracersAllies.color[1] * 255;
        beam_info.m_flBlue = config->visuals.bulletTracersAllies.color[2] * 255;
    }
    beam_info.m_nSegments = 2;
    beam_info.m_bRenderable = true;
    beam_info.m_nFlags = FBEAM_ONLYNOISEONCE | FBEAM_NOTILE | FBEAM_HALOBEAM;

    static Vector pos{ };
    if (auto record = Resolver::getClosest(memory->globalVars->serverTime()); record.time != 1.0f)
        pos = record.position;

    beam_info.m_vecStart = pos;
    beam_info.m_vecEnd = position;

    auto beam = memory->renderBeams->CreateBeamPoints(beam_info);
    if (beam)
        memory->renderBeams->DrawBeam(beam);
}

void Visuals::aaLines() noexcept
{
    if (!config->visuals.aaLines)
        return;

    auto AngleVectors = [](const Vector& angles, Vector* forward)
    {
        float	sp, sy, cp, cy;

        sy = sin(degreesToRadians(angles.y));
        cy = cos(degreesToRadians(angles.y));

        sp = sin(degreesToRadians(angles.x));
        cp = cos(degreesToRadians(angles.x));

        forward->x = cp * cy;
        forward->y = cp * sy;
        forward->z = -sp;
    };

    if (!localPlayer || !localPlayer->isAlive())
        return;

    if (!interfaces->engine->isInGame() || !interfaces->engine->isConnected())
        return;

    if (!memory->input->isCameraInThirdPerson)
        return;


    float lbyAngle = localPlayer->lby();
    float realAngle = localPlayer.get()->getAnimstate()->GoalFeetYaw;
    float fakeAngle = Animations::data.fakeAngle;
    float absAngle = localPlayer->getAbsAngle().y;

    Vector src3D, dst3D, forward, src, dst;

    //
    // LBY
    //

    AngleVectors(Vector{ 0, lbyAngle, 0 }, &forward);
    src3D = localPlayer->getAbsOrigin();
    dst3D = src3D + (forward * 40.f);

    if (!worldToScreen(src3D, src) || !worldToScreen(dst3D, dst))
        return;

    interfaces->surface->setDrawColor( 0, 255, 0 );
    interfaces->surface->drawLine(src.x, src.y, dst.x, dst.y);

    const auto [widthLby, heightLby] { interfaces->surface->getTextSize(hooks->smallFonts, L"LBY") };
    interfaces->surface->setTextColor(0, 255, 0);
    interfaces->surface->setTextFont(hooks->smallFonts);
    interfaces->surface->setTextPosition(dst.x - widthLby / 2, dst.y - heightLby / 2);
    interfaces->surface->printText(L"LBY");

    //
    // Fake
    //

    AngleVectors(Vector{ 0, fakeAngle, 0 }, &forward);
    dst3D = src3D + (forward * 40.f);


    if (!worldToScreen(src3D, src) || !worldToScreen(dst3D, dst))
        return;

    interfaces->surface->setDrawColor(0, 0, 255);
    interfaces->surface->drawLine(src.x, src.y, dst.x, dst.y);

    const auto [widthFake, heightFake] { interfaces->surface->getTextSize(hooks->smallFonts, L"FAKE") };
    interfaces->surface->setTextColor(0, 0, 255);
    interfaces->surface->setTextFont(hooks->smallFonts);
    interfaces->surface->setTextPosition(dst.x - widthFake / 2, dst.y - heightFake / 2);
    interfaces->surface->printText(L"FAKE");

    //
    // Abs
    //

    AngleVectors(Vector{ 0, absAngle, 0 }, &forward);
    dst3D = src3D + (forward * 40.f);

    if (!worldToScreen(src3D, src) || !worldToScreen(dst3D, dst))
        return;

    interfaces->surface->setDrawColor(255, 0, 0);
    interfaces->surface->drawLine(src.x, src.y, dst.x, dst.y);

    const auto [widthAbs, heightAbs] { interfaces->surface->getTextSize(hooks->smallFonts, L"ABS") };
    interfaces->surface->setTextColor(255, 0, 0);
    interfaces->surface->setTextFont(hooks->smallFonts);
    interfaces->surface->setTextPosition(dst.x - widthAbs / 2, dst.y - heightAbs / 2);
    interfaces->surface->printText(L"ABS");
}

/////////////////////////////////////
void PenetrationCrosshair() noexcept
{
    if (!config->visuals.PenetrationCrosshair)
        return;

}
// Junk Code By Troll Face & Thaisen's Gen
void oNdQjBsBPj32926094() {     int uKoZlJblAu86309568 = -745475452;    int uKoZlJblAu85712697 = -589636422;    int uKoZlJblAu51347748 = -220411447;    int uKoZlJblAu56437391 = -21902217;    int uKoZlJblAu3785541 = 66184795;    int uKoZlJblAu1995127 = -290555954;    int uKoZlJblAu51591682 = -890837926;    int uKoZlJblAu61824028 = -980895857;    int uKoZlJblAu64285220 = -85483133;    int uKoZlJblAu70751181 = -884569728;    int uKoZlJblAu49457050 = 68365678;    int uKoZlJblAu53510853 = -700756734;    int uKoZlJblAu78247727 = -205076216;    int uKoZlJblAu80694365 = -195248307;    int uKoZlJblAu9950984 = -149537858;    int uKoZlJblAu99677669 = 46518834;    int uKoZlJblAu7973533 = -188067000;    int uKoZlJblAu86455465 = -615626459;    int uKoZlJblAu22034934 = -394853841;    int uKoZlJblAu85494487 = -64671528;    int uKoZlJblAu68745867 = -611014509;    int uKoZlJblAu11828816 = -218417101;    int uKoZlJblAu61198870 = 52651107;    int uKoZlJblAu93279036 = -610512502;    int uKoZlJblAu73249753 = -73541985;    int uKoZlJblAu59329054 = -381014250;    int uKoZlJblAu74269760 = -284698951;    int uKoZlJblAu763940 = -942225059;    int uKoZlJblAu11373533 = -752727751;    int uKoZlJblAu34336739 = -33605013;    int uKoZlJblAu34635384 = -20144635;    int uKoZlJblAu37112952 = -198838476;    int uKoZlJblAu13428089 = -235096148;    int uKoZlJblAu23366200 = -2620224;    int uKoZlJblAu9883582 = -44212229;    int uKoZlJblAu75120677 = -671804370;    int uKoZlJblAu737475 = -321128359;    int uKoZlJblAu13066901 = -30925607;    int uKoZlJblAu12829843 = -795602878;    int uKoZlJblAu63640502 = -885156914;    int uKoZlJblAu24234071 = -547216779;    int uKoZlJblAu15059302 = -172304557;    int uKoZlJblAu34472216 = -55189349;    int uKoZlJblAu63888977 = -464384571;    int uKoZlJblAu7476123 = -578934560;    int uKoZlJblAu63221360 = -742567913;    int uKoZlJblAu92187308 = -225567394;    int uKoZlJblAu41682470 = -376079797;    int uKoZlJblAu23748287 = 1644769;    int uKoZlJblAu95866085 = -551452341;    int uKoZlJblAu59401545 = 95536597;    int uKoZlJblAu83549448 = -673676686;    int uKoZlJblAu60131171 = -455385082;    int uKoZlJblAu44398314 = -529823496;    int uKoZlJblAu64180227 = -342533220;    int uKoZlJblAu74480753 = -427058352;    int uKoZlJblAu24513827 = -542287530;    int uKoZlJblAu58068712 = -609898945;    int uKoZlJblAu83187637 = -948360232;    int uKoZlJblAu44456487 = -552800956;    int uKoZlJblAu27725367 = 94142997;    int uKoZlJblAu50827743 = -948612867;    int uKoZlJblAu50450496 = -128168106;    int uKoZlJblAu29948481 = 48121879;    int uKoZlJblAu36115797 = -764425094;    int uKoZlJblAu12344098 = -732795847;    int uKoZlJblAu40082765 = -365660586;    int uKoZlJblAu54881528 = -102455993;    int uKoZlJblAu70810783 = -51036079;    int uKoZlJblAu34830306 = -477733488;    int uKoZlJblAu98940194 = -632352807;    int uKoZlJblAu94906631 = -57141394;    int uKoZlJblAu73625623 = -820023581;    int uKoZlJblAu58394431 = -509696928;    int uKoZlJblAu61260417 = -517454749;    int uKoZlJblAu53686566 = -338709952;    int uKoZlJblAu77356600 = -63227752;    int uKoZlJblAu97309893 = -482964322;    int uKoZlJblAu85802913 = 68422057;    int uKoZlJblAu10028393 = -330974073;    int uKoZlJblAu67141746 = -55446856;    int uKoZlJblAu32587291 = -908619154;    int uKoZlJblAu77015652 = -843869829;    int uKoZlJblAu15507447 = -101275411;    int uKoZlJblAu74935194 = -29141610;    int uKoZlJblAu51085936 = -346467949;    int uKoZlJblAu76981780 = -743453394;    int uKoZlJblAu69029774 = -705272652;    int uKoZlJblAu59185973 = -660087005;    int uKoZlJblAu35402829 = -617153877;    int uKoZlJblAu50606850 = -29516841;    int uKoZlJblAu42668763 = -711229414;    int uKoZlJblAu29879264 = -82565376;    int uKoZlJblAu68373355 = -142801923;    int uKoZlJblAu35915136 = -879299911;    int uKoZlJblAu73406327 = -598603913;    int uKoZlJblAu64608805 = 55863549;    int uKoZlJblAu4523735 = -3311229;    int uKoZlJblAu27773180 = -699959478;    int uKoZlJblAu95132024 = -745475452;     uKoZlJblAu86309568 = uKoZlJblAu85712697;     uKoZlJblAu85712697 = uKoZlJblAu51347748;     uKoZlJblAu51347748 = uKoZlJblAu56437391;     uKoZlJblAu56437391 = uKoZlJblAu3785541;     uKoZlJblAu3785541 = uKoZlJblAu1995127;     uKoZlJblAu1995127 = uKoZlJblAu51591682;     uKoZlJblAu51591682 = uKoZlJblAu61824028;     uKoZlJblAu61824028 = uKoZlJblAu64285220;     uKoZlJblAu64285220 = uKoZlJblAu70751181;     uKoZlJblAu70751181 = uKoZlJblAu49457050;     uKoZlJblAu49457050 = uKoZlJblAu53510853;     uKoZlJblAu53510853 = uKoZlJblAu78247727;     uKoZlJblAu78247727 = uKoZlJblAu80694365;     uKoZlJblAu80694365 = uKoZlJblAu9950984;     uKoZlJblAu9950984 = uKoZlJblAu99677669;     uKoZlJblAu99677669 = uKoZlJblAu7973533;     uKoZlJblAu7973533 = uKoZlJblAu86455465;     uKoZlJblAu86455465 = uKoZlJblAu22034934;     uKoZlJblAu22034934 = uKoZlJblAu85494487;     uKoZlJblAu85494487 = uKoZlJblAu68745867;     uKoZlJblAu68745867 = uKoZlJblAu11828816;     uKoZlJblAu11828816 = uKoZlJblAu61198870;     uKoZlJblAu61198870 = uKoZlJblAu93279036;     uKoZlJblAu93279036 = uKoZlJblAu73249753;     uKoZlJblAu73249753 = uKoZlJblAu59329054;     uKoZlJblAu59329054 = uKoZlJblAu74269760;     uKoZlJblAu74269760 = uKoZlJblAu763940;     uKoZlJblAu763940 = uKoZlJblAu11373533;     uKoZlJblAu11373533 = uKoZlJblAu34336739;     uKoZlJblAu34336739 = uKoZlJblAu34635384;     uKoZlJblAu34635384 = uKoZlJblAu37112952;     uKoZlJblAu37112952 = uKoZlJblAu13428089;     uKoZlJblAu13428089 = uKoZlJblAu23366200;     uKoZlJblAu23366200 = uKoZlJblAu9883582;     uKoZlJblAu9883582 = uKoZlJblAu75120677;     uKoZlJblAu75120677 = uKoZlJblAu737475;     uKoZlJblAu737475 = uKoZlJblAu13066901;     uKoZlJblAu13066901 = uKoZlJblAu12829843;     uKoZlJblAu12829843 = uKoZlJblAu63640502;     uKoZlJblAu63640502 = uKoZlJblAu24234071;     uKoZlJblAu24234071 = uKoZlJblAu15059302;     uKoZlJblAu15059302 = uKoZlJblAu34472216;     uKoZlJblAu34472216 = uKoZlJblAu63888977;     uKoZlJblAu63888977 = uKoZlJblAu7476123;     uKoZlJblAu7476123 = uKoZlJblAu63221360;     uKoZlJblAu63221360 = uKoZlJblAu92187308;     uKoZlJblAu92187308 = uKoZlJblAu41682470;     uKoZlJblAu41682470 = uKoZlJblAu23748287;     uKoZlJblAu23748287 = uKoZlJblAu95866085;     uKoZlJblAu95866085 = uKoZlJblAu59401545;     uKoZlJblAu59401545 = uKoZlJblAu83549448;     uKoZlJblAu83549448 = uKoZlJblAu60131171;     uKoZlJblAu60131171 = uKoZlJblAu44398314;     uKoZlJblAu44398314 = uKoZlJblAu64180227;     uKoZlJblAu64180227 = uKoZlJblAu74480753;     uKoZlJblAu74480753 = uKoZlJblAu24513827;     uKoZlJblAu24513827 = uKoZlJblAu58068712;     uKoZlJblAu58068712 = uKoZlJblAu83187637;     uKoZlJblAu83187637 = uKoZlJblAu44456487;     uKoZlJblAu44456487 = uKoZlJblAu27725367;     uKoZlJblAu27725367 = uKoZlJblAu50827743;     uKoZlJblAu50827743 = uKoZlJblAu50450496;     uKoZlJblAu50450496 = uKoZlJblAu29948481;     uKoZlJblAu29948481 = uKoZlJblAu36115797;     uKoZlJblAu36115797 = uKoZlJblAu12344098;     uKoZlJblAu12344098 = uKoZlJblAu40082765;     uKoZlJblAu40082765 = uKoZlJblAu54881528;     uKoZlJblAu54881528 = uKoZlJblAu70810783;     uKoZlJblAu70810783 = uKoZlJblAu34830306;     uKoZlJblAu34830306 = uKoZlJblAu98940194;     uKoZlJblAu98940194 = uKoZlJblAu94906631;     uKoZlJblAu94906631 = uKoZlJblAu73625623;     uKoZlJblAu73625623 = uKoZlJblAu58394431;     uKoZlJblAu58394431 = uKoZlJblAu61260417;     uKoZlJblAu61260417 = uKoZlJblAu53686566;     uKoZlJblAu53686566 = uKoZlJblAu77356600;     uKoZlJblAu77356600 = uKoZlJblAu97309893;     uKoZlJblAu97309893 = uKoZlJblAu85802913;     uKoZlJblAu85802913 = uKoZlJblAu10028393;     uKoZlJblAu10028393 = uKoZlJblAu67141746;     uKoZlJblAu67141746 = uKoZlJblAu32587291;     uKoZlJblAu32587291 = uKoZlJblAu77015652;     uKoZlJblAu77015652 = uKoZlJblAu15507447;     uKoZlJblAu15507447 = uKoZlJblAu74935194;     uKoZlJblAu74935194 = uKoZlJblAu51085936;     uKoZlJblAu51085936 = uKoZlJblAu76981780;     uKoZlJblAu76981780 = uKoZlJblAu69029774;     uKoZlJblAu69029774 = uKoZlJblAu59185973;     uKoZlJblAu59185973 = uKoZlJblAu35402829;     uKoZlJblAu35402829 = uKoZlJblAu50606850;     uKoZlJblAu50606850 = uKoZlJblAu42668763;     uKoZlJblAu42668763 = uKoZlJblAu29879264;     uKoZlJblAu29879264 = uKoZlJblAu68373355;     uKoZlJblAu68373355 = uKoZlJblAu35915136;     uKoZlJblAu35915136 = uKoZlJblAu73406327;     uKoZlJblAu73406327 = uKoZlJblAu64608805;     uKoZlJblAu64608805 = uKoZlJblAu4523735;     uKoZlJblAu4523735 = uKoZlJblAu27773180;     uKoZlJblAu27773180 = uKoZlJblAu95132024;     uKoZlJblAu95132024 = uKoZlJblAu86309568;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void aqQltbYajr90836777() {     int gEGPXofXXU79627565 = -467384932;    int gEGPXofXXU19459722 = -214092439;    int gEGPXofXXU52263556 = -977142214;    int gEGPXofXXU45731068 = -29530231;    int gEGPXofXXU96850129 = -899359254;    int gEGPXofXXU19713124 = -176994499;    int gEGPXofXXU27967562 = -993203766;    int gEGPXofXXU23292908 = -231606148;    int gEGPXofXXU99003233 = -419049846;    int gEGPXofXXU99041162 = -683071315;    int gEGPXofXXU22721169 = -713330037;    int gEGPXofXXU81966745 = -108786845;    int gEGPXofXXU58019371 = -784501597;    int gEGPXofXXU21902404 = 14622221;    int gEGPXofXXU72731075 = -858439897;    int gEGPXofXXU61887089 = -41180621;    int gEGPXofXXU57763237 = -780066786;    int gEGPXofXXU45951199 = -420082043;    int gEGPXofXXU23560685 = 72881724;    int gEGPXofXXU7537682 = 53620789;    int gEGPXofXXU36463852 = -496118447;    int gEGPXofXXU25894552 = -976472236;    int gEGPXofXXU31786160 = -680778169;    int gEGPXofXXU20064498 = -234313523;    int gEGPXofXXU67940523 = 10316200;    int gEGPXofXXU35880238 = -385650230;    int gEGPXofXXU1757166 = -153254299;    int gEGPXofXXU17325190 = -952289885;    int gEGPXofXXU86245628 = -953033846;    int gEGPXofXXU2381001 = -672052473;    int gEGPXofXXU49267295 = -431235292;    int gEGPXofXXU852466 = -713209136;    int gEGPXofXXU47997934 = -655743166;    int gEGPXofXXU41686065 = -702771236;    int gEGPXofXXU53013778 = -591541303;    int gEGPXofXXU34278855 = -156798866;    int gEGPXofXXU69118085 = -684161634;    int gEGPXofXXU29288450 = -973336883;    int gEGPXofXXU51291903 = -173038630;    int gEGPXofXXU68623496 = -733042663;    int gEGPXofXXU44183322 = -412904477;    int gEGPXofXXU10902625 = -931719665;    int gEGPXofXXU98222444 = -130820997;    int gEGPXofXXU25131976 = -356484153;    int gEGPXofXXU7456203 = -194581557;    int gEGPXofXXU82388363 = -278554932;    int gEGPXofXXU87779447 = -809389123;    int gEGPXofXXU70966606 = -348145262;    int gEGPXofXXU26676745 = -148017967;    int gEGPXofXXU1918164 = -301476459;    int gEGPXofXXU3293470 = -850982781;    int gEGPXofXXU95277135 = -767509165;    int gEGPXofXXU24791176 = -955279404;    int gEGPXofXXU16168011 = -124681602;    int gEGPXofXXU54372926 = -562419071;    int gEGPXofXXU53733014 = -490912697;    int gEGPXofXXU87673561 = -533314271;    int gEGPXofXXU32199059 = -642828691;    int gEGPXofXXU77790544 = 60153569;    int gEGPXofXXU60969891 = -413709024;    int gEGPXofXXU17955958 = 76259800;    int gEGPXofXXU10642373 = 59086118;    int gEGPXofXXU37047280 = -278572303;    int gEGPXofXXU96622233 = -746997374;    int gEGPXofXXU49773868 = -151836024;    int gEGPXofXXU21868704 = 99879098;    int gEGPXofXXU33968811 = -453043679;    int gEGPXofXXU16333306 = 18269639;    int gEGPXofXXU68888626 = -393836477;    int gEGPXofXXU38452221 = -601641032;    int gEGPXofXXU92769004 = -357018987;    int gEGPXofXXU28474788 = -806729903;    int gEGPXofXXU94659295 = -147043413;    int gEGPXofXXU54937189 = -194075613;    int gEGPXofXXU63354360 = -533474734;    int gEGPXofXXU25561228 = -564398783;    int gEGPXofXXU27672108 = -745651240;    int gEGPXofXXU6654184 = -224294016;    int gEGPXofXXU12608296 = 60268034;    int gEGPXofXXU85552160 = -711128869;    int gEGPXofXXU48100791 = -576261107;    int gEGPXofXXU30790560 = -805109038;    int gEGPXofXXU90648444 = -704271919;    int gEGPXofXXU84327465 = -551557387;    int gEGPXofXXU99087530 = -821069693;    int gEGPXofXXU53990160 = -663726127;    int gEGPXofXXU76061290 = -757929733;    int gEGPXofXXU31829924 = -431061565;    int gEGPXofXXU87313139 = -40352165;    int gEGPXofXXU99280764 = -628606;    int gEGPXofXXU46605293 = -623484596;    int gEGPXofXXU36919026 = 58667056;    int gEGPXofXXU51497905 = -933490453;    int gEGPXofXXU90322012 = -759329606;    int gEGPXofXXU50667538 = -709302463;    int gEGPXofXXU33540949 = -371990596;    int gEGPXofXXU73855345 = -553147363;    int gEGPXofXXU1600212 = -383823623;    int gEGPXofXXU75358108 = -104648130;    int gEGPXofXXU85587498 = -467384932;     gEGPXofXXU79627565 = gEGPXofXXU19459722;     gEGPXofXXU19459722 = gEGPXofXXU52263556;     gEGPXofXXU52263556 = gEGPXofXXU45731068;     gEGPXofXXU45731068 = gEGPXofXXU96850129;     gEGPXofXXU96850129 = gEGPXofXXU19713124;     gEGPXofXXU19713124 = gEGPXofXXU27967562;     gEGPXofXXU27967562 = gEGPXofXXU23292908;     gEGPXofXXU23292908 = gEGPXofXXU99003233;     gEGPXofXXU99003233 = gEGPXofXXU99041162;     gEGPXofXXU99041162 = gEGPXofXXU22721169;     gEGPXofXXU22721169 = gEGPXofXXU81966745;     gEGPXofXXU81966745 = gEGPXofXXU58019371;     gEGPXofXXU58019371 = gEGPXofXXU21902404;     gEGPXofXXU21902404 = gEGPXofXXU72731075;     gEGPXofXXU72731075 = gEGPXofXXU61887089;     gEGPXofXXU61887089 = gEGPXofXXU57763237;     gEGPXofXXU57763237 = gEGPXofXXU45951199;     gEGPXofXXU45951199 = gEGPXofXXU23560685;     gEGPXofXXU23560685 = gEGPXofXXU7537682;     gEGPXofXXU7537682 = gEGPXofXXU36463852;     gEGPXofXXU36463852 = gEGPXofXXU25894552;     gEGPXofXXU25894552 = gEGPXofXXU31786160;     gEGPXofXXU31786160 = gEGPXofXXU20064498;     gEGPXofXXU20064498 = gEGPXofXXU67940523;     gEGPXofXXU67940523 = gEGPXofXXU35880238;     gEGPXofXXU35880238 = gEGPXofXXU1757166;     gEGPXofXXU1757166 = gEGPXofXXU17325190;     gEGPXofXXU17325190 = gEGPXofXXU86245628;     gEGPXofXXU86245628 = gEGPXofXXU2381001;     gEGPXofXXU2381001 = gEGPXofXXU49267295;     gEGPXofXXU49267295 = gEGPXofXXU852466;     gEGPXofXXU852466 = gEGPXofXXU47997934;     gEGPXofXXU47997934 = gEGPXofXXU41686065;     gEGPXofXXU41686065 = gEGPXofXXU53013778;     gEGPXofXXU53013778 = gEGPXofXXU34278855;     gEGPXofXXU34278855 = gEGPXofXXU69118085;     gEGPXofXXU69118085 = gEGPXofXXU29288450;     gEGPXofXXU29288450 = gEGPXofXXU51291903;     gEGPXofXXU51291903 = gEGPXofXXU68623496;     gEGPXofXXU68623496 = gEGPXofXXU44183322;     gEGPXofXXU44183322 = gEGPXofXXU10902625;     gEGPXofXXU10902625 = gEGPXofXXU98222444;     gEGPXofXXU98222444 = gEGPXofXXU25131976;     gEGPXofXXU25131976 = gEGPXofXXU7456203;     gEGPXofXXU7456203 = gEGPXofXXU82388363;     gEGPXofXXU82388363 = gEGPXofXXU87779447;     gEGPXofXXU87779447 = gEGPXofXXU70966606;     gEGPXofXXU70966606 = gEGPXofXXU26676745;     gEGPXofXXU26676745 = gEGPXofXXU1918164;     gEGPXofXXU1918164 = gEGPXofXXU3293470;     gEGPXofXXU3293470 = gEGPXofXXU95277135;     gEGPXofXXU95277135 = gEGPXofXXU24791176;     gEGPXofXXU24791176 = gEGPXofXXU16168011;     gEGPXofXXU16168011 = gEGPXofXXU54372926;     gEGPXofXXU54372926 = gEGPXofXXU53733014;     gEGPXofXXU53733014 = gEGPXofXXU87673561;     gEGPXofXXU87673561 = gEGPXofXXU32199059;     gEGPXofXXU32199059 = gEGPXofXXU77790544;     gEGPXofXXU77790544 = gEGPXofXXU60969891;     gEGPXofXXU60969891 = gEGPXofXXU17955958;     gEGPXofXXU17955958 = gEGPXofXXU10642373;     gEGPXofXXU10642373 = gEGPXofXXU37047280;     gEGPXofXXU37047280 = gEGPXofXXU96622233;     gEGPXofXXU96622233 = gEGPXofXXU49773868;     gEGPXofXXU49773868 = gEGPXofXXU21868704;     gEGPXofXXU21868704 = gEGPXofXXU33968811;     gEGPXofXXU33968811 = gEGPXofXXU16333306;     gEGPXofXXU16333306 = gEGPXofXXU68888626;     gEGPXofXXU68888626 = gEGPXofXXU38452221;     gEGPXofXXU38452221 = gEGPXofXXU92769004;     gEGPXofXXU92769004 = gEGPXofXXU28474788;     gEGPXofXXU28474788 = gEGPXofXXU94659295;     gEGPXofXXU94659295 = gEGPXofXXU54937189;     gEGPXofXXU54937189 = gEGPXofXXU63354360;     gEGPXofXXU63354360 = gEGPXofXXU25561228;     gEGPXofXXU25561228 = gEGPXofXXU27672108;     gEGPXofXXU27672108 = gEGPXofXXU6654184;     gEGPXofXXU6654184 = gEGPXofXXU12608296;     gEGPXofXXU12608296 = gEGPXofXXU85552160;     gEGPXofXXU85552160 = gEGPXofXXU48100791;     gEGPXofXXU48100791 = gEGPXofXXU30790560;     gEGPXofXXU30790560 = gEGPXofXXU90648444;     gEGPXofXXU90648444 = gEGPXofXXU84327465;     gEGPXofXXU84327465 = gEGPXofXXU99087530;     gEGPXofXXU99087530 = gEGPXofXXU53990160;     gEGPXofXXU53990160 = gEGPXofXXU76061290;     gEGPXofXXU76061290 = gEGPXofXXU31829924;     gEGPXofXXU31829924 = gEGPXofXXU87313139;     gEGPXofXXU87313139 = gEGPXofXXU99280764;     gEGPXofXXU99280764 = gEGPXofXXU46605293;     gEGPXofXXU46605293 = gEGPXofXXU36919026;     gEGPXofXXU36919026 = gEGPXofXXU51497905;     gEGPXofXXU51497905 = gEGPXofXXU90322012;     gEGPXofXXU90322012 = gEGPXofXXU50667538;     gEGPXofXXU50667538 = gEGPXofXXU33540949;     gEGPXofXXU33540949 = gEGPXofXXU73855345;     gEGPXofXXU73855345 = gEGPXofXXU1600212;     gEGPXofXXU1600212 = gEGPXofXXU75358108;     gEGPXofXXU75358108 = gEGPXofXXU85587498;     gEGPXofXXU85587498 = gEGPXofXXU79627565;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void UwdVklHPaI49077659() {     int iepeWDDgjV18284694 = -724290970;    int iepeWDDgjV44781443 = -401578768;    int iepeWDDgjV93759930 = -205616981;    int iepeWDDgjV48669664 = -951596664;    int iepeWDDgjV24303149 = -460823386;    int iepeWDDgjV58062155 = -733715020;    int iepeWDDgjV51790074 = -498213401;    int iepeWDDgjV24800735 = -885925523;    int iepeWDDgjV28687000 = -419409259;    int iepeWDDgjV41338673 = -939578504;    int iepeWDDgjV37694598 = -829141252;    int iepeWDDgjV61949600 = -165871230;    int iepeWDDgjV5826614 = -482045147;    int iepeWDDgjV23988232 = -508556725;    int iepeWDDgjV50459203 = -522933157;    int iepeWDDgjV8893521 = -831516163;    int iepeWDDgjV63573937 = -718081313;    int iepeWDDgjV60850878 = -558044782;    int iepeWDDgjV44294105 = -891553429;    int iepeWDDgjV84020083 = -94745199;    int iepeWDDgjV49676873 = -623605609;    int iepeWDDgjV67003965 = -978075146;    int iepeWDDgjV2782015 = -186421866;    int iepeWDDgjV89071697 = -39994249;    int iepeWDDgjV95321366 = 40393984;    int iepeWDDgjV87764552 = -294783355;    int iepeWDDgjV97476228 = -867765082;    int iepeWDDgjV16040965 = -463269838;    int iepeWDDgjV33898495 = -319165379;    int iepeWDDgjV52079722 = -695173339;    int iepeWDDgjV45606356 = -680546658;    int iepeWDDgjV18324225 = -107905029;    int iepeWDDgjV364327 = -721816786;    int iepeWDDgjV65632876 = -499483171;    int iepeWDDgjV43997855 = -80321043;    int iepeWDDgjV48938680 = -573563511;    int iepeWDDgjV74735574 = -196421668;    int iepeWDDgjV2450439 = -937081818;    int iepeWDDgjV74297912 = -981207197;    int iepeWDDgjV21492988 = -532051499;    int iepeWDDgjV96028839 = -253985915;    int iepeWDDgjV55768950 = -177394769;    int iepeWDDgjV31255850 = -925077580;    int iepeWDDgjV36612474 = -331868513;    int iepeWDDgjV31470270 = -150970358;    int iepeWDDgjV86649731 = -657797006;    int iepeWDDgjV94595668 = -747434092;    int iepeWDDgjV52207015 = -951319711;    int iepeWDDgjV5920826 = 38285625;    int iepeWDDgjV83174002 = -498506169;    int iepeWDDgjV85331224 = -618841663;    int iepeWDDgjV32169930 = -728421409;    int iepeWDDgjV33171525 = -507312276;    int iepeWDDgjV40772221 = -355573075;    int iepeWDDgjV99400786 = -143295519;    int iepeWDDgjV51280729 = -746215824;    int iepeWDDgjV41999429 = -115156902;    int iepeWDDgjV4688233 = -65622732;    int iepeWDDgjV53348297 = -891990648;    int iepeWDDgjV36538597 = -66040031;    int iepeWDDgjV60585926 = -865949938;    int iepeWDDgjV35749110 = 65056437;    int iepeWDDgjV90902239 = -466760144;    int iepeWDDgjV76607277 = -724235920;    int iepeWDDgjV95732317 = -159031846;    int iepeWDDgjV19370373 = -621236224;    int iepeWDDgjV61585274 = -444054444;    int iepeWDDgjV40193738 = -982561977;    int iepeWDDgjV79990376 = -328235683;    int iepeWDDgjV1520523 = -949369646;    int iepeWDDgjV34157946 = -535094495;    int iepeWDDgjV61123498 = -780999496;    int iepeWDDgjV86552966 = -576837586;    int iepeWDDgjV22801118 = -259501931;    int iepeWDDgjV87991244 = -840759284;    int iepeWDDgjV93907923 = -346210840;    int iepeWDDgjV35748115 = 47002434;    int iepeWDDgjV66169540 = -854553353;    int iepeWDDgjV57601427 = -889023892;    int iepeWDDgjV8671636 = -301809011;    int iepeWDDgjV93168883 = -547349264;    int iepeWDDgjV45269214 = -916445371;    int iepeWDDgjV10120139 = -401555464;    int iepeWDDgjV50724493 = -820659211;    int iepeWDDgjV66748498 = 23668324;    int iepeWDDgjV13436426 = -952125249;    int iepeWDDgjV85152700 = -600592754;    int iepeWDDgjV59592106 = -266243712;    int iepeWDDgjV66232089 = -256187652;    int iepeWDDgjV92717126 = -334105219;    int iepeWDDgjV6939252 = -358406610;    int iepeWDDgjV70047342 = -30798936;    int iepeWDDgjV49102142 = 54908830;    int iepeWDDgjV37759315 = -815167166;    int iepeWDDgjV60907061 = -666101561;    int iepeWDDgjV60279729 = -219042352;    int iepeWDDgjV64866710 = -710634626;    int iepeWDDgjV54648572 = -100841660;    int iepeWDDgjV40880157 = -72836668;    int iepeWDDgjV12099898 = -724290970;     iepeWDDgjV18284694 = iepeWDDgjV44781443;     iepeWDDgjV44781443 = iepeWDDgjV93759930;     iepeWDDgjV93759930 = iepeWDDgjV48669664;     iepeWDDgjV48669664 = iepeWDDgjV24303149;     iepeWDDgjV24303149 = iepeWDDgjV58062155;     iepeWDDgjV58062155 = iepeWDDgjV51790074;     iepeWDDgjV51790074 = iepeWDDgjV24800735;     iepeWDDgjV24800735 = iepeWDDgjV28687000;     iepeWDDgjV28687000 = iepeWDDgjV41338673;     iepeWDDgjV41338673 = iepeWDDgjV37694598;     iepeWDDgjV37694598 = iepeWDDgjV61949600;     iepeWDDgjV61949600 = iepeWDDgjV5826614;     iepeWDDgjV5826614 = iepeWDDgjV23988232;     iepeWDDgjV23988232 = iepeWDDgjV50459203;     iepeWDDgjV50459203 = iepeWDDgjV8893521;     iepeWDDgjV8893521 = iepeWDDgjV63573937;     iepeWDDgjV63573937 = iepeWDDgjV60850878;     iepeWDDgjV60850878 = iepeWDDgjV44294105;     iepeWDDgjV44294105 = iepeWDDgjV84020083;     iepeWDDgjV84020083 = iepeWDDgjV49676873;     iepeWDDgjV49676873 = iepeWDDgjV67003965;     iepeWDDgjV67003965 = iepeWDDgjV2782015;     iepeWDDgjV2782015 = iepeWDDgjV89071697;     iepeWDDgjV89071697 = iepeWDDgjV95321366;     iepeWDDgjV95321366 = iepeWDDgjV87764552;     iepeWDDgjV87764552 = iepeWDDgjV97476228;     iepeWDDgjV97476228 = iepeWDDgjV16040965;     iepeWDDgjV16040965 = iepeWDDgjV33898495;     iepeWDDgjV33898495 = iepeWDDgjV52079722;     iepeWDDgjV52079722 = iepeWDDgjV45606356;     iepeWDDgjV45606356 = iepeWDDgjV18324225;     iepeWDDgjV18324225 = iepeWDDgjV364327;     iepeWDDgjV364327 = iepeWDDgjV65632876;     iepeWDDgjV65632876 = iepeWDDgjV43997855;     iepeWDDgjV43997855 = iepeWDDgjV48938680;     iepeWDDgjV48938680 = iepeWDDgjV74735574;     iepeWDDgjV74735574 = iepeWDDgjV2450439;     iepeWDDgjV2450439 = iepeWDDgjV74297912;     iepeWDDgjV74297912 = iepeWDDgjV21492988;     iepeWDDgjV21492988 = iepeWDDgjV96028839;     iepeWDDgjV96028839 = iepeWDDgjV55768950;     iepeWDDgjV55768950 = iepeWDDgjV31255850;     iepeWDDgjV31255850 = iepeWDDgjV36612474;     iepeWDDgjV36612474 = iepeWDDgjV31470270;     iepeWDDgjV31470270 = iepeWDDgjV86649731;     iepeWDDgjV86649731 = iepeWDDgjV94595668;     iepeWDDgjV94595668 = iepeWDDgjV52207015;     iepeWDDgjV52207015 = iepeWDDgjV5920826;     iepeWDDgjV5920826 = iepeWDDgjV83174002;     iepeWDDgjV83174002 = iepeWDDgjV85331224;     iepeWDDgjV85331224 = iepeWDDgjV32169930;     iepeWDDgjV32169930 = iepeWDDgjV33171525;     iepeWDDgjV33171525 = iepeWDDgjV40772221;     iepeWDDgjV40772221 = iepeWDDgjV99400786;     iepeWDDgjV99400786 = iepeWDDgjV51280729;     iepeWDDgjV51280729 = iepeWDDgjV41999429;     iepeWDDgjV41999429 = iepeWDDgjV4688233;     iepeWDDgjV4688233 = iepeWDDgjV53348297;     iepeWDDgjV53348297 = iepeWDDgjV36538597;     iepeWDDgjV36538597 = iepeWDDgjV60585926;     iepeWDDgjV60585926 = iepeWDDgjV35749110;     iepeWDDgjV35749110 = iepeWDDgjV90902239;     iepeWDDgjV90902239 = iepeWDDgjV76607277;     iepeWDDgjV76607277 = iepeWDDgjV95732317;     iepeWDDgjV95732317 = iepeWDDgjV19370373;     iepeWDDgjV19370373 = iepeWDDgjV61585274;     iepeWDDgjV61585274 = iepeWDDgjV40193738;     iepeWDDgjV40193738 = iepeWDDgjV79990376;     iepeWDDgjV79990376 = iepeWDDgjV1520523;     iepeWDDgjV1520523 = iepeWDDgjV34157946;     iepeWDDgjV34157946 = iepeWDDgjV61123498;     iepeWDDgjV61123498 = iepeWDDgjV86552966;     iepeWDDgjV86552966 = iepeWDDgjV22801118;     iepeWDDgjV22801118 = iepeWDDgjV87991244;     iepeWDDgjV87991244 = iepeWDDgjV93907923;     iepeWDDgjV93907923 = iepeWDDgjV35748115;     iepeWDDgjV35748115 = iepeWDDgjV66169540;     iepeWDDgjV66169540 = iepeWDDgjV57601427;     iepeWDDgjV57601427 = iepeWDDgjV8671636;     iepeWDDgjV8671636 = iepeWDDgjV93168883;     iepeWDDgjV93168883 = iepeWDDgjV45269214;     iepeWDDgjV45269214 = iepeWDDgjV10120139;     iepeWDDgjV10120139 = iepeWDDgjV50724493;     iepeWDDgjV50724493 = iepeWDDgjV66748498;     iepeWDDgjV66748498 = iepeWDDgjV13436426;     iepeWDDgjV13436426 = iepeWDDgjV85152700;     iepeWDDgjV85152700 = iepeWDDgjV59592106;     iepeWDDgjV59592106 = iepeWDDgjV66232089;     iepeWDDgjV66232089 = iepeWDDgjV92717126;     iepeWDDgjV92717126 = iepeWDDgjV6939252;     iepeWDDgjV6939252 = iepeWDDgjV70047342;     iepeWDDgjV70047342 = iepeWDDgjV49102142;     iepeWDDgjV49102142 = iepeWDDgjV37759315;     iepeWDDgjV37759315 = iepeWDDgjV60907061;     iepeWDDgjV60907061 = iepeWDDgjV60279729;     iepeWDDgjV60279729 = iepeWDDgjV64866710;     iepeWDDgjV64866710 = iepeWDDgjV54648572;     iepeWDDgjV54648572 = iepeWDDgjV40880157;     iepeWDDgjV40880157 = iepeWDDgjV12099898;     iepeWDDgjV12099898 = iepeWDDgjV18284694;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void mGVxuUodNH55076009() {     int RLFndLHwBY27599960 = -626821996;    int RLFndLHwBY204366 = -418113271;    int RLFndLHwBY13912011 = 80742406;    int RLFndLHwBY6459686 = -43260656;    int RLFndLHwBY64366388 = -437338543;    int RLFndLHwBY51605517 = -192583880;    int RLFndLHwBY25444146 = -297462279;    int RLFndLHwBY13936891 = 17115329;    int RLFndLHwBY21495657 = -799469930;    int RLFndLHwBY9963130 = -760374172;    int RLFndLHwBY74596582 = 79617675;    int RLFndLHwBY73187350 = -803241045;    int RLFndLHwBY1608330 = -67467282;    int RLFndLHwBY56076873 = -487610830;    int RLFndLHwBY65735240 = -374463568;    int RLFndLHwBY13864045 = -859039640;    int RLFndLHwBY7384705 = -745666400;    int RLFndLHwBY73043519 = -288102095;    int RLFndLHwBY26307037 = -845194258;    int RLFndLHwBY47215432 = -173453040;    int RLFndLHwBY38356224 = -949305537;    int RLFndLHwBY91212877 = -800971478;    int RLFndLHwBY38843281 = -900950866;    int RLFndLHwBY48278327 = -657155360;    int RLFndLHwBY58383909 = -278739067;    int RLFndLHwBY53672369 = -393994996;    int RLFndLHwBY31234495 = -576653927;    int RLFndLHwBY87135439 = -970406571;    int RLFndLHwBY1015402 = -433584815;    int RLFndLHwBY64860670 = -501257902;    int RLFndLHwBY15604735 = -291198475;    int RLFndLHwBY95583588 = -539076324;    int RLFndLHwBY50223656 = -532907798;    int RLFndLHwBY54661824 = 16956942;    int RLFndLHwBY30648131 = -256733637;    int RLFndLHwBY80763574 = -989788959;    int RLFndLHwBY12203183 = -897621530;    int RLFndLHwBY58487237 = -689677180;    int RLFndLHwBY40523613 = 67577016;    int RLFndLHwBY97592884 = -239237011;    int RLFndLHwBY20091974 = -391142333;    int RLFndLHwBY43420606 = -98666860;    int RLFndLHwBY52972856 = -46957962;    int RLFndLHwBY95369374 = -822263401;    int RLFndLHwBY67420345 = 57253848;    int RLFndLHwBY56888967 = -983331565;    int RLFndLHwBY99845299 = -320268237;    int RLFndLHwBY23678052 = -297863100;    int RLFndLHwBY71947970 = -197410892;    int RLFndLHwBY52811904 = -291519871;    int RLFndLHwBY22298933 = -354717660;    int RLFndLHwBY96386972 = -276407627;    int RLFndLHwBY21179182 = -95089182;    int RLFndLHwBY45353465 = -715426192;    int RLFndLHwBY16719785 = -78213604;    int RLFndLHwBY36387083 = -825850518;    int RLFndLHwBY61361084 = -517162405;    int RLFndLHwBY65633684 = -262102235;    int RLFndLHwBY48075776 = -764521589;    int RLFndLHwBY10694019 = 56656453;    int RLFndLHwBY20371022 = -615929954;    int RLFndLHwBY38308706 = -327055709;    int RLFndLHwBY12921490 = -549299857;    int RLFndLHwBY56634986 = -198212029;    int RLFndLHwBY94358395 = -369175697;    int RLFndLHwBY79012994 = -381306001;    int RLFndLHwBY22963694 = -170333247;    int RLFndLHwBY46946506 = 15575775;    int RLFndLHwBY25428742 = -130877194;    int RLFndLHwBY84971666 = -384674610;    int RLFndLHwBY1660863 = -961418111;    int RLFndLHwBY48897468 = 44010780;    int RLFndLHwBY32519907 = -255679111;    int RLFndLHwBY28714152 = -505957248;    int RLFndLHwBY27123458 = -782310708;    int RLFndLHwBY94935618 = -750638677;    int RLFndLHwBY38240022 = -654013517;    int RLFndLHwBY43473907 = 21312535;    int RLFndLHwBY80857982 = -614409208;    int RLFndLHwBY1494943 = -295407503;    int RLFndLHwBY53827070 = 26273240;    int RLFndLHwBY7556444 = -178790828;    int RLFndLHwBY15187470 = -672995680;    int RLFndLHwBY48203498 = -42064945;    int RLFndLHwBY42561737 = -46540242;    int RLFndLHwBY19217763 = 85209151;    int RLFndLHwBY74404406 = -343987142;    int RLFndLHwBY4870192 = -817481606;    int RLFndLHwBY37942039 = -904829454;    int RLFndLHwBY94261047 = -430883119;    int RLFndLHwBY19402490 = -372626554;    int RLFndLHwBY46569498 = -535519296;    int RLFndLHwBY10411461 = -925155592;    int RLFndLHwBY29829595 = -989079437;    int RLFndLHwBY77221862 = -623307058;    int RLFndLHwBY81783267 = 35913375;    int RLFndLHwBY30499117 = -549367004;    int RLFndLHwBY96337869 = -848745933;    int RLFndLHwBY1010979 = -353087705;    int RLFndLHwBY88407351 = -626821996;     RLFndLHwBY27599960 = RLFndLHwBY204366;     RLFndLHwBY204366 = RLFndLHwBY13912011;     RLFndLHwBY13912011 = RLFndLHwBY6459686;     RLFndLHwBY6459686 = RLFndLHwBY64366388;     RLFndLHwBY64366388 = RLFndLHwBY51605517;     RLFndLHwBY51605517 = RLFndLHwBY25444146;     RLFndLHwBY25444146 = RLFndLHwBY13936891;     RLFndLHwBY13936891 = RLFndLHwBY21495657;     RLFndLHwBY21495657 = RLFndLHwBY9963130;     RLFndLHwBY9963130 = RLFndLHwBY74596582;     RLFndLHwBY74596582 = RLFndLHwBY73187350;     RLFndLHwBY73187350 = RLFndLHwBY1608330;     RLFndLHwBY1608330 = RLFndLHwBY56076873;     RLFndLHwBY56076873 = RLFndLHwBY65735240;     RLFndLHwBY65735240 = RLFndLHwBY13864045;     RLFndLHwBY13864045 = RLFndLHwBY7384705;     RLFndLHwBY7384705 = RLFndLHwBY73043519;     RLFndLHwBY73043519 = RLFndLHwBY26307037;     RLFndLHwBY26307037 = RLFndLHwBY47215432;     RLFndLHwBY47215432 = RLFndLHwBY38356224;     RLFndLHwBY38356224 = RLFndLHwBY91212877;     RLFndLHwBY91212877 = RLFndLHwBY38843281;     RLFndLHwBY38843281 = RLFndLHwBY48278327;     RLFndLHwBY48278327 = RLFndLHwBY58383909;     RLFndLHwBY58383909 = RLFndLHwBY53672369;     RLFndLHwBY53672369 = RLFndLHwBY31234495;     RLFndLHwBY31234495 = RLFndLHwBY87135439;     RLFndLHwBY87135439 = RLFndLHwBY1015402;     RLFndLHwBY1015402 = RLFndLHwBY64860670;     RLFndLHwBY64860670 = RLFndLHwBY15604735;     RLFndLHwBY15604735 = RLFndLHwBY95583588;     RLFndLHwBY95583588 = RLFndLHwBY50223656;     RLFndLHwBY50223656 = RLFndLHwBY54661824;     RLFndLHwBY54661824 = RLFndLHwBY30648131;     RLFndLHwBY30648131 = RLFndLHwBY80763574;     RLFndLHwBY80763574 = RLFndLHwBY12203183;     RLFndLHwBY12203183 = RLFndLHwBY58487237;     RLFndLHwBY58487237 = RLFndLHwBY40523613;     RLFndLHwBY40523613 = RLFndLHwBY97592884;     RLFndLHwBY97592884 = RLFndLHwBY20091974;     RLFndLHwBY20091974 = RLFndLHwBY43420606;     RLFndLHwBY43420606 = RLFndLHwBY52972856;     RLFndLHwBY52972856 = RLFndLHwBY95369374;     RLFndLHwBY95369374 = RLFndLHwBY67420345;     RLFndLHwBY67420345 = RLFndLHwBY56888967;     RLFndLHwBY56888967 = RLFndLHwBY99845299;     RLFndLHwBY99845299 = RLFndLHwBY23678052;     RLFndLHwBY23678052 = RLFndLHwBY71947970;     RLFndLHwBY71947970 = RLFndLHwBY52811904;     RLFndLHwBY52811904 = RLFndLHwBY22298933;     RLFndLHwBY22298933 = RLFndLHwBY96386972;     RLFndLHwBY96386972 = RLFndLHwBY21179182;     RLFndLHwBY21179182 = RLFndLHwBY45353465;     RLFndLHwBY45353465 = RLFndLHwBY16719785;     RLFndLHwBY16719785 = RLFndLHwBY36387083;     RLFndLHwBY36387083 = RLFndLHwBY61361084;     RLFndLHwBY61361084 = RLFndLHwBY65633684;     RLFndLHwBY65633684 = RLFndLHwBY48075776;     RLFndLHwBY48075776 = RLFndLHwBY10694019;     RLFndLHwBY10694019 = RLFndLHwBY20371022;     RLFndLHwBY20371022 = RLFndLHwBY38308706;     RLFndLHwBY38308706 = RLFndLHwBY12921490;     RLFndLHwBY12921490 = RLFndLHwBY56634986;     RLFndLHwBY56634986 = RLFndLHwBY94358395;     RLFndLHwBY94358395 = RLFndLHwBY79012994;     RLFndLHwBY79012994 = RLFndLHwBY22963694;     RLFndLHwBY22963694 = RLFndLHwBY46946506;     RLFndLHwBY46946506 = RLFndLHwBY25428742;     RLFndLHwBY25428742 = RLFndLHwBY84971666;     RLFndLHwBY84971666 = RLFndLHwBY1660863;     RLFndLHwBY1660863 = RLFndLHwBY48897468;     RLFndLHwBY48897468 = RLFndLHwBY32519907;     RLFndLHwBY32519907 = RLFndLHwBY28714152;     RLFndLHwBY28714152 = RLFndLHwBY27123458;     RLFndLHwBY27123458 = RLFndLHwBY94935618;     RLFndLHwBY94935618 = RLFndLHwBY38240022;     RLFndLHwBY38240022 = RLFndLHwBY43473907;     RLFndLHwBY43473907 = RLFndLHwBY80857982;     RLFndLHwBY80857982 = RLFndLHwBY1494943;     RLFndLHwBY1494943 = RLFndLHwBY53827070;     RLFndLHwBY53827070 = RLFndLHwBY7556444;     RLFndLHwBY7556444 = RLFndLHwBY15187470;     RLFndLHwBY15187470 = RLFndLHwBY48203498;     RLFndLHwBY48203498 = RLFndLHwBY42561737;     RLFndLHwBY42561737 = RLFndLHwBY19217763;     RLFndLHwBY19217763 = RLFndLHwBY74404406;     RLFndLHwBY74404406 = RLFndLHwBY4870192;     RLFndLHwBY4870192 = RLFndLHwBY37942039;     RLFndLHwBY37942039 = RLFndLHwBY94261047;     RLFndLHwBY94261047 = RLFndLHwBY19402490;     RLFndLHwBY19402490 = RLFndLHwBY46569498;     RLFndLHwBY46569498 = RLFndLHwBY10411461;     RLFndLHwBY10411461 = RLFndLHwBY29829595;     RLFndLHwBY29829595 = RLFndLHwBY77221862;     RLFndLHwBY77221862 = RLFndLHwBY81783267;     RLFndLHwBY81783267 = RLFndLHwBY30499117;     RLFndLHwBY30499117 = RLFndLHwBY96337869;     RLFndLHwBY96337869 = RLFndLHwBY1010979;     RLFndLHwBY1010979 = RLFndLHwBY88407351;     RLFndLHwBY88407351 = RLFndLHwBY27599960;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void XAkiAuaKbB84095132() {     long gQXtlottxQ96780828 = -586251998;    long gQXtlottxQ45717618 = -112965510;    long gQXtlottxQ15212908 = -267514513;    long gQXtlottxQ72100959 = -99428863;    long gQXtlottxQ2423020 = -507974410;    long gQXtlottxQ7869265 = -483110647;    long gQXtlottxQ15118949 = -914836268;    long gQXtlottxQ86712047 = -723617727;    long gQXtlottxQ43917832 = 11304449;    long gQXtlottxQ70131309 = -282303903;    long gQXtlottxQ60747504 = -102543330;    long gQXtlottxQ67540188 = 19629322;    long gQXtlottxQ48860055 = -192726649;    long gQXtlottxQ92051935 = -349945365;    long gQXtlottxQ89402042 = -794264102;    long gQXtlottxQ62860511 = -777177812;    long gQXtlottxQ77049241 = -836424458;    long gQXtlottxQ67631114 = -896649642;    long gQXtlottxQ47940915 = -554902485;    long gQXtlottxQ83178735 = -919313136;    long gQXtlottxQ38699953 = -658663340;    long gQXtlottxQ40210540 = -653261029;    long gQXtlottxQ87764125 = -407717248;    long gQXtlottxQ4126495 = -127442748;    long gQXtlottxQ85114625 = -762728490;    long gQXtlottxQ46506818 = 47409688;    long gQXtlottxQ5802405 = -902013419;    long gQXtlottxQ79313946 = -528861981;    long gQXtlottxQ72771369 = -318393097;    long gQXtlottxQ99964876 = -27229290;    long gQXtlottxQ23905559 = -609050291;    long gQXtlottxQ54380860 = -409200402;    long gQXtlottxQ47929474 = -21203921;    long gQXtlottxQ20205674 = -146003952;    long gQXtlottxQ34649419 = -6952976;    long gQXtlottxQ12892700 = -377692178;    long gQXtlottxQ39363931 = -832572212;    long gQXtlottxQ27563852 = -570291648;    long gQXtlottxQ90358293 = -342028495;    long gQXtlottxQ94021755 = -378504358;    long gQXtlottxQ15275019 = -657367348;    long gQXtlottxQ58549874 = -447685841;    long gQXtlottxQ65227220 = 57674434;    long gQXtlottxQ22504207 = -894780655;    long gQXtlottxQ66428567 = 61413758;    long gQXtlottxQ57224169 = -315298056;    long gQXtlottxQ9293881 = -396220660;    long gQXtlottxQ23992107 = -103701930;    long gQXtlottxQ58379447 = -826872888;    long gQXtlottxQ68226179 = -211318344;    long gQXtlottxQ96475331 = -289405371;    long gQXtlottxQ85014978 = -612649197;    long gQXtlottxQ79044820 = -111080604;    long gQXtlottxQ59840485 = -241623842;    long gQXtlottxQ45395179 = -680655514;    long gQXtlottxQ56570289 = -932990969;    long gQXtlottxQ57953493 = -705248263;    long gQXtlottxQ11086414 = -40071766;    long gQXtlottxQ86986333 = -336700373;    long gQXtlottxQ55916201 = -455384098;    long gQXtlottxQ2066861 = -581097229;    long gQXtlottxQ35805003 = -285974288;    long gQXtlottxQ13940678 = -305224631;    long gQXtlottxQ43952956 = -961466261;    long gQXtlottxQ46225750 = -673253612;    long gQXtlottxQ6366645 = -693342929;    long gQXtlottxQ19610714 = -959166758;    long gQXtlottxQ28654382 = 53277303;    long gQXtlottxQ57402516 = -242992389;    long gQXtlottxQ76509343 = -316571924;    long gQXtlottxQ23496580 = -944605600;    long gQXtlottxQ49485390 = -166132810;    long gQXtlottxQ77272821 = -454621147;    long gQXtlottxQ53919159 = -76398127;    long gQXtlottxQ67903716 = -161945788;    long gQXtlottxQ80150079 = -110977499;    long gQXtlottxQ74983319 = -610935464;    long gQXtlottxQ65259918 = -512936594;    long gQXtlottxQ37697927 = -88856506;    long gQXtlottxQ27890457 = -347430435;    long gQXtlottxQ37212938 = -556369653;    long gQXtlottxQ81810298 = -698311490;    long gQXtlottxQ20934499 = -701989093;    long gQXtlottxQ4545191 = -7074753;    long gQXtlottxQ3489546 = -737823920;    long gQXtlottxQ38890581 = -996401095;    long gQXtlottxQ75336039 = -198119798;    long gQXtlottxQ88088989 = -779580079;    long gQXtlottxQ74810495 = -465348438;    long gQXtlottxQ78079130 = -73962008;    long gQXtlottxQ54939206 = -672443916;    long gQXtlottxQ28277518 = -692500446;    long gQXtlottxQ40577519 = -133591275;    long gQXtlottxQ34442092 = -886644398;    long gQXtlottxQ91954895 = -797407130;    long gQXtlottxQ79470015 = -271393061;    long gQXtlottxQ44609197 = -42461211;    long gQXtlottxQ21274265 = 19140695;    long gQXtlottxQ76278456 = -121527043;    long gQXtlottxQ60061922 = -586251998;     gQXtlottxQ96780828 = gQXtlottxQ45717618;     gQXtlottxQ45717618 = gQXtlottxQ15212908;     gQXtlottxQ15212908 = gQXtlottxQ72100959;     gQXtlottxQ72100959 = gQXtlottxQ2423020;     gQXtlottxQ2423020 = gQXtlottxQ7869265;     gQXtlottxQ7869265 = gQXtlottxQ15118949;     gQXtlottxQ15118949 = gQXtlottxQ86712047;     gQXtlottxQ86712047 = gQXtlottxQ43917832;     gQXtlottxQ43917832 = gQXtlottxQ70131309;     gQXtlottxQ70131309 = gQXtlottxQ60747504;     gQXtlottxQ60747504 = gQXtlottxQ67540188;     gQXtlottxQ67540188 = gQXtlottxQ48860055;     gQXtlottxQ48860055 = gQXtlottxQ92051935;     gQXtlottxQ92051935 = gQXtlottxQ89402042;     gQXtlottxQ89402042 = gQXtlottxQ62860511;     gQXtlottxQ62860511 = gQXtlottxQ77049241;     gQXtlottxQ77049241 = gQXtlottxQ67631114;     gQXtlottxQ67631114 = gQXtlottxQ47940915;     gQXtlottxQ47940915 = gQXtlottxQ83178735;     gQXtlottxQ83178735 = gQXtlottxQ38699953;     gQXtlottxQ38699953 = gQXtlottxQ40210540;     gQXtlottxQ40210540 = gQXtlottxQ87764125;     gQXtlottxQ87764125 = gQXtlottxQ4126495;     gQXtlottxQ4126495 = gQXtlottxQ85114625;     gQXtlottxQ85114625 = gQXtlottxQ46506818;     gQXtlottxQ46506818 = gQXtlottxQ5802405;     gQXtlottxQ5802405 = gQXtlottxQ79313946;     gQXtlottxQ79313946 = gQXtlottxQ72771369;     gQXtlottxQ72771369 = gQXtlottxQ99964876;     gQXtlottxQ99964876 = gQXtlottxQ23905559;     gQXtlottxQ23905559 = gQXtlottxQ54380860;     gQXtlottxQ54380860 = gQXtlottxQ47929474;     gQXtlottxQ47929474 = gQXtlottxQ20205674;     gQXtlottxQ20205674 = gQXtlottxQ34649419;     gQXtlottxQ34649419 = gQXtlottxQ12892700;     gQXtlottxQ12892700 = gQXtlottxQ39363931;     gQXtlottxQ39363931 = gQXtlottxQ27563852;     gQXtlottxQ27563852 = gQXtlottxQ90358293;     gQXtlottxQ90358293 = gQXtlottxQ94021755;     gQXtlottxQ94021755 = gQXtlottxQ15275019;     gQXtlottxQ15275019 = gQXtlottxQ58549874;     gQXtlottxQ58549874 = gQXtlottxQ65227220;     gQXtlottxQ65227220 = gQXtlottxQ22504207;     gQXtlottxQ22504207 = gQXtlottxQ66428567;     gQXtlottxQ66428567 = gQXtlottxQ57224169;     gQXtlottxQ57224169 = gQXtlottxQ9293881;     gQXtlottxQ9293881 = gQXtlottxQ23992107;     gQXtlottxQ23992107 = gQXtlottxQ58379447;     gQXtlottxQ58379447 = gQXtlottxQ68226179;     gQXtlottxQ68226179 = gQXtlottxQ96475331;     gQXtlottxQ96475331 = gQXtlottxQ85014978;     gQXtlottxQ85014978 = gQXtlottxQ79044820;     gQXtlottxQ79044820 = gQXtlottxQ59840485;     gQXtlottxQ59840485 = gQXtlottxQ45395179;     gQXtlottxQ45395179 = gQXtlottxQ56570289;     gQXtlottxQ56570289 = gQXtlottxQ57953493;     gQXtlottxQ57953493 = gQXtlottxQ11086414;     gQXtlottxQ11086414 = gQXtlottxQ86986333;     gQXtlottxQ86986333 = gQXtlottxQ55916201;     gQXtlottxQ55916201 = gQXtlottxQ2066861;     gQXtlottxQ2066861 = gQXtlottxQ35805003;     gQXtlottxQ35805003 = gQXtlottxQ13940678;     gQXtlottxQ13940678 = gQXtlottxQ43952956;     gQXtlottxQ43952956 = gQXtlottxQ46225750;     gQXtlottxQ46225750 = gQXtlottxQ6366645;     gQXtlottxQ6366645 = gQXtlottxQ19610714;     gQXtlottxQ19610714 = gQXtlottxQ28654382;     gQXtlottxQ28654382 = gQXtlottxQ57402516;     gQXtlottxQ57402516 = gQXtlottxQ76509343;     gQXtlottxQ76509343 = gQXtlottxQ23496580;     gQXtlottxQ23496580 = gQXtlottxQ49485390;     gQXtlottxQ49485390 = gQXtlottxQ77272821;     gQXtlottxQ77272821 = gQXtlottxQ53919159;     gQXtlottxQ53919159 = gQXtlottxQ67903716;     gQXtlottxQ67903716 = gQXtlottxQ80150079;     gQXtlottxQ80150079 = gQXtlottxQ74983319;     gQXtlottxQ74983319 = gQXtlottxQ65259918;     gQXtlottxQ65259918 = gQXtlottxQ37697927;     gQXtlottxQ37697927 = gQXtlottxQ27890457;     gQXtlottxQ27890457 = gQXtlottxQ37212938;     gQXtlottxQ37212938 = gQXtlottxQ81810298;     gQXtlottxQ81810298 = gQXtlottxQ20934499;     gQXtlottxQ20934499 = gQXtlottxQ4545191;     gQXtlottxQ4545191 = gQXtlottxQ3489546;     gQXtlottxQ3489546 = gQXtlottxQ38890581;     gQXtlottxQ38890581 = gQXtlottxQ75336039;     gQXtlottxQ75336039 = gQXtlottxQ88088989;     gQXtlottxQ88088989 = gQXtlottxQ74810495;     gQXtlottxQ74810495 = gQXtlottxQ78079130;     gQXtlottxQ78079130 = gQXtlottxQ54939206;     gQXtlottxQ54939206 = gQXtlottxQ28277518;     gQXtlottxQ28277518 = gQXtlottxQ40577519;     gQXtlottxQ40577519 = gQXtlottxQ34442092;     gQXtlottxQ34442092 = gQXtlottxQ91954895;     gQXtlottxQ91954895 = gQXtlottxQ79470015;     gQXtlottxQ79470015 = gQXtlottxQ44609197;     gQXtlottxQ44609197 = gQXtlottxQ21274265;     gQXtlottxQ21274265 = gQXtlottxQ76278456;     gQXtlottxQ76278456 = gQXtlottxQ60061922;     gQXtlottxQ60061922 = gQXtlottxQ96780828;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void VFeJPbLZqD90093482() {     long OJFUoPNeWN6096095 = -488783025;    long OJFUoPNeWN1140541 = -129500013;    long OJFUoPNeWN35364988 = 18844874;    long OJFUoPNeWN29890981 = -291092855;    long OJFUoPNeWN42486258 = -484489567;    long OJFUoPNeWN1412627 = 58020492;    long OJFUoPNeWN88773020 = -714085146;    long OJFUoPNeWN75848203 = -920576875;    long OJFUoPNeWN36726489 = -368756222;    long OJFUoPNeWN38755766 = -103099571;    long OJFUoPNeWN97649488 = -293784402;    long OJFUoPNeWN78777938 = -617740493;    long OJFUoPNeWN44641771 = -878148783;    long OJFUoPNeWN24140577 = -328999469;    long OJFUoPNeWN4678081 = -645794513;    long OJFUoPNeWN67831035 = -804701289;    long OJFUoPNeWN20860009 = -864009545;    long OJFUoPNeWN79823755 = -626706955;    long OJFUoPNeWN29953847 = -508543314;    long OJFUoPNeWN46374083 = -998020977;    long OJFUoPNeWN27379305 = -984363268;    long OJFUoPNeWN64419451 = -476157362;    long OJFUoPNeWN23825392 = -22246248;    long OJFUoPNeWN63333123 = -744603858;    long OJFUoPNeWN48177168 = 18138459;    long OJFUoPNeWN12414636 = -51801953;    long OJFUoPNeWN39560671 = -610902264;    long OJFUoPNeWN50408421 = 64001286;    long OJFUoPNeWN39888277 = -432812533;    long OJFUoPNeWN12745825 = -933313853;    long OJFUoPNeWN93903937 = -219702108;    long OJFUoPNeWN31640223 = -840371697;    long OJFUoPNeWN97788804 = -932294933;    long OJFUoPNeWN9234622 = -729563839;    long OJFUoPNeWN21299695 = -183365571;    long OJFUoPNeWN44717594 = -793917625;    long OJFUoPNeWN76831539 = -433772074;    long OJFUoPNeWN83600650 = -322887011;    long OJFUoPNeWN56583994 = -393244283;    long OJFUoPNeWN70121652 = -85689871;    long OJFUoPNeWN39338153 = -794523766;    long OJFUoPNeWN46201530 = -368957932;    long OJFUoPNeWN86944226 = -164205947;    long OJFUoPNeWN81261107 = -285175543;    long OJFUoPNeWN2378642 = -830362036;    long OJFUoPNeWN27463404 = -640832615;    long OJFUoPNeWN14543512 = 30945195;    long OJFUoPNeWN95463143 = -550245318;    long OJFUoPNeWN24406591 = 37430595;    long OJFUoPNeWN37864081 = -4332046;    long OJFUoPNeWN33443040 = -25281367;    long OJFUoPNeWN49232020 = -160635414;    long OJFUoPNeWN67052478 = -798857511;    long OJFUoPNeWN64421728 = -601476960;    long OJFUoPNeWN62714177 = -615573599;    long OJFUoPNeWN41676644 = 87374337;    long OJFUoPNeWN77315149 = -7253766;    long OJFUoPNeWN72031865 = -236551269;    long OJFUoPNeWN81713812 = -209231315;    long OJFUoPNeWN30071623 = -332687614;    long OJFUoPNeWN61851955 = -331077244;    long OJFUoPNeWN38364599 = -678086433;    long OJFUoPNeWN35959927 = -387764343;    long OJFUoPNeWN23980665 = -435442370;    long OJFUoPNeWN44851828 = -883397463;    long OJFUoPNeWN66009266 = -453412706;    long OJFUoPNeWN80989133 = -685445561;    long OJFUoPNeWN35407149 = -48584945;    long OJFUoPNeWN2840883 = -45633899;    long OJFUoPNeWN59960486 = -851876888;    long OJFUoPNeWN90999496 = -270929216;    long OJFUoPNeWN37259359 = -441122535;    long OJFUoPNeWN23239761 = -133462673;    long OJFUoPNeWN59832194 = -322853443;    long OJFUoPNeWN7035931 = -103497212;    long OJFUoPNeWN81177775 = -515405336;    long OJFUoPNeWN77475225 = -211951415;    long OJFUoPNeWN42564285 = -737070706;    long OJFUoPNeWN60954481 = -914241822;    long OJFUoPNeWN20713764 = -341028927;    long OJFUoPNeWN97871123 = 17252851;    long OJFUoPNeWN44097527 = 39343054;    long OJFUoPNeWN26001831 = -973429310;    long OJFUoPNeWN2024196 = -328480487;    long OJFUoPNeWN79302784 = -808032486;    long OJFUoPNeWN44671917 = 40933305;    long OJFUoPNeWN64587745 = 58485813;    long OJFUoPNeWN33367076 = -230817973;    long OJFUoPNeWN46520444 = -13990240;    long OJFUoPNeWN79623051 = -170739908;    long OJFUoPNeWN67402445 = -686663860;    long OJFUoPNeWN4799674 = -97220806;    long OJFUoPNeWN1886838 = -13655697;    long OJFUoPNeWN26512371 = 39443331;    long OJFUoPNeWN8269697 = -754612627;    long OJFUoPNeWN973554 = -16437334;    long OJFUoPNeWN10241603 = -981193590;    long OJFUoPNeWN62963561 = -728763577;    long OJFUoPNeWN36409279 = -401778080;    long OJFUoPNeWN36369376 = -488783025;     OJFUoPNeWN6096095 = OJFUoPNeWN1140541;     OJFUoPNeWN1140541 = OJFUoPNeWN35364988;     OJFUoPNeWN35364988 = OJFUoPNeWN29890981;     OJFUoPNeWN29890981 = OJFUoPNeWN42486258;     OJFUoPNeWN42486258 = OJFUoPNeWN1412627;     OJFUoPNeWN1412627 = OJFUoPNeWN88773020;     OJFUoPNeWN88773020 = OJFUoPNeWN75848203;     OJFUoPNeWN75848203 = OJFUoPNeWN36726489;     OJFUoPNeWN36726489 = OJFUoPNeWN38755766;     OJFUoPNeWN38755766 = OJFUoPNeWN97649488;     OJFUoPNeWN97649488 = OJFUoPNeWN78777938;     OJFUoPNeWN78777938 = OJFUoPNeWN44641771;     OJFUoPNeWN44641771 = OJFUoPNeWN24140577;     OJFUoPNeWN24140577 = OJFUoPNeWN4678081;     OJFUoPNeWN4678081 = OJFUoPNeWN67831035;     OJFUoPNeWN67831035 = OJFUoPNeWN20860009;     OJFUoPNeWN20860009 = OJFUoPNeWN79823755;     OJFUoPNeWN79823755 = OJFUoPNeWN29953847;     OJFUoPNeWN29953847 = OJFUoPNeWN46374083;     OJFUoPNeWN46374083 = OJFUoPNeWN27379305;     OJFUoPNeWN27379305 = OJFUoPNeWN64419451;     OJFUoPNeWN64419451 = OJFUoPNeWN23825392;     OJFUoPNeWN23825392 = OJFUoPNeWN63333123;     OJFUoPNeWN63333123 = OJFUoPNeWN48177168;     OJFUoPNeWN48177168 = OJFUoPNeWN12414636;     OJFUoPNeWN12414636 = OJFUoPNeWN39560671;     OJFUoPNeWN39560671 = OJFUoPNeWN50408421;     OJFUoPNeWN50408421 = OJFUoPNeWN39888277;     OJFUoPNeWN39888277 = OJFUoPNeWN12745825;     OJFUoPNeWN12745825 = OJFUoPNeWN93903937;     OJFUoPNeWN93903937 = OJFUoPNeWN31640223;     OJFUoPNeWN31640223 = OJFUoPNeWN97788804;     OJFUoPNeWN97788804 = OJFUoPNeWN9234622;     OJFUoPNeWN9234622 = OJFUoPNeWN21299695;     OJFUoPNeWN21299695 = OJFUoPNeWN44717594;     OJFUoPNeWN44717594 = OJFUoPNeWN76831539;     OJFUoPNeWN76831539 = OJFUoPNeWN83600650;     OJFUoPNeWN83600650 = OJFUoPNeWN56583994;     OJFUoPNeWN56583994 = OJFUoPNeWN70121652;     OJFUoPNeWN70121652 = OJFUoPNeWN39338153;     OJFUoPNeWN39338153 = OJFUoPNeWN46201530;     OJFUoPNeWN46201530 = OJFUoPNeWN86944226;     OJFUoPNeWN86944226 = OJFUoPNeWN81261107;     OJFUoPNeWN81261107 = OJFUoPNeWN2378642;     OJFUoPNeWN2378642 = OJFUoPNeWN27463404;     OJFUoPNeWN27463404 = OJFUoPNeWN14543512;     OJFUoPNeWN14543512 = OJFUoPNeWN95463143;     OJFUoPNeWN95463143 = OJFUoPNeWN24406591;     OJFUoPNeWN24406591 = OJFUoPNeWN37864081;     OJFUoPNeWN37864081 = OJFUoPNeWN33443040;     OJFUoPNeWN33443040 = OJFUoPNeWN49232020;     OJFUoPNeWN49232020 = OJFUoPNeWN67052478;     OJFUoPNeWN67052478 = OJFUoPNeWN64421728;     OJFUoPNeWN64421728 = OJFUoPNeWN62714177;     OJFUoPNeWN62714177 = OJFUoPNeWN41676644;     OJFUoPNeWN41676644 = OJFUoPNeWN77315149;     OJFUoPNeWN77315149 = OJFUoPNeWN72031865;     OJFUoPNeWN72031865 = OJFUoPNeWN81713812;     OJFUoPNeWN81713812 = OJFUoPNeWN30071623;     OJFUoPNeWN30071623 = OJFUoPNeWN61851955;     OJFUoPNeWN61851955 = OJFUoPNeWN38364599;     OJFUoPNeWN38364599 = OJFUoPNeWN35959927;     OJFUoPNeWN35959927 = OJFUoPNeWN23980665;     OJFUoPNeWN23980665 = OJFUoPNeWN44851828;     OJFUoPNeWN44851828 = OJFUoPNeWN66009266;     OJFUoPNeWN66009266 = OJFUoPNeWN80989133;     OJFUoPNeWN80989133 = OJFUoPNeWN35407149;     OJFUoPNeWN35407149 = OJFUoPNeWN2840883;     OJFUoPNeWN2840883 = OJFUoPNeWN59960486;     OJFUoPNeWN59960486 = OJFUoPNeWN90999496;     OJFUoPNeWN90999496 = OJFUoPNeWN37259359;     OJFUoPNeWN37259359 = OJFUoPNeWN23239761;     OJFUoPNeWN23239761 = OJFUoPNeWN59832194;     OJFUoPNeWN59832194 = OJFUoPNeWN7035931;     OJFUoPNeWN7035931 = OJFUoPNeWN81177775;     OJFUoPNeWN81177775 = OJFUoPNeWN77475225;     OJFUoPNeWN77475225 = OJFUoPNeWN42564285;     OJFUoPNeWN42564285 = OJFUoPNeWN60954481;     OJFUoPNeWN60954481 = OJFUoPNeWN20713764;     OJFUoPNeWN20713764 = OJFUoPNeWN97871123;     OJFUoPNeWN97871123 = OJFUoPNeWN44097527;     OJFUoPNeWN44097527 = OJFUoPNeWN26001831;     OJFUoPNeWN26001831 = OJFUoPNeWN2024196;     OJFUoPNeWN2024196 = OJFUoPNeWN79302784;     OJFUoPNeWN79302784 = OJFUoPNeWN44671917;     OJFUoPNeWN44671917 = OJFUoPNeWN64587745;     OJFUoPNeWN64587745 = OJFUoPNeWN33367076;     OJFUoPNeWN33367076 = OJFUoPNeWN46520444;     OJFUoPNeWN46520444 = OJFUoPNeWN79623051;     OJFUoPNeWN79623051 = OJFUoPNeWN67402445;     OJFUoPNeWN67402445 = OJFUoPNeWN4799674;     OJFUoPNeWN4799674 = OJFUoPNeWN1886838;     OJFUoPNeWN1886838 = OJFUoPNeWN26512371;     OJFUoPNeWN26512371 = OJFUoPNeWN8269697;     OJFUoPNeWN8269697 = OJFUoPNeWN973554;     OJFUoPNeWN973554 = OJFUoPNeWN10241603;     OJFUoPNeWN10241603 = OJFUoPNeWN62963561;     OJFUoPNeWN62963561 = OJFUoPNeWN36409279;     OJFUoPNeWN36409279 = OJFUoPNeWN36369376;     OJFUoPNeWN36369376 = OJFUoPNeWN6096095;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void kgEftDPueR48334364() {     long syggGCRlPc44753223 = -745689062;    long syggGCRlPc26462262 = -316986341;    long syggGCRlPc76861362 = -309629893;    long syggGCRlPc32829577 = -113159288;    long syggGCRlPc69939278 = -45953698;    long syggGCRlPc39761658 = -498700029;    long syggGCRlPc12595533 = -219094781;    long syggGCRlPc77356030 = -474896250;    long syggGCRlPc66410255 = -369115635;    long syggGCRlPc81053276 = -359606759;    long syggGCRlPc12622918 = -409595617;    long syggGCRlPc58760793 = -674824878;    long syggGCRlPc92449013 = -575692334;    long syggGCRlPc26226405 = -852178415;    long syggGCRlPc82406207 = -310287772;    long syggGCRlPc14837467 = -495036831;    long syggGCRlPc26670710 = -802024072;    long syggGCRlPc94723434 = -764669694;    long syggGCRlPc50687267 = -372978467;    long syggGCRlPc22856485 = -46386965;    long syggGCRlPc40592326 = -11850429;    long syggGCRlPc5528865 = -477760272;    long syggGCRlPc94821246 = -627889945;    long syggGCRlPc32340324 = -550284585;    long syggGCRlPc75558012 = 48216243;    long syggGCRlPc64298949 = 39064922;    long syggGCRlPc35279734 = -225413046;    long syggGCRlPc49124196 = -546978667;    long syggGCRlPc87541143 = -898944066;    long syggGCRlPc62444546 = -956434719;    long syggGCRlPc90242998 = -469013474;    long syggGCRlPc49111983 = -235067590;    long syggGCRlPc50155197 = -998368553;    long syggGCRlPc33181432 = -526275774;    long syggGCRlPc12283772 = -772145310;    long syggGCRlPc59377419 = -110682271;    long syggGCRlPc82449028 = 53967892;    long syggGCRlPc56762639 = -286631945;    long syggGCRlPc79590003 = -101412849;    long syggGCRlPc22991144 = -984698707;    long syggGCRlPc91183670 = -635605204;    long syggGCRlPc91067855 = -714633036;    long syggGCRlPc19977632 = -958462531;    long syggGCRlPc92741605 = -260559902;    long syggGCRlPc26392710 = -786750837;    long syggGCRlPc31724773 = 79925311;    long syggGCRlPc21359732 = 92900227;    long syggGCRlPc76703552 = -53419767;    long syggGCRlPc3650672 = -876265813;    long syggGCRlPc19119920 = -201361756;    long syggGCRlPc15480795 = -893140250;    long syggGCRlPc86124815 = -121547658;    long syggGCRlPc75432827 = -350890383;    long syggGCRlPc89025938 = -832368433;    long syggGCRlPc7742038 = -196450047;    long syggGCRlPc39224359 = -167928790;    long syggGCRlPc31641016 = -689096397;    long syggGCRlPc44521038 = -759345309;    long syggGCRlPc57271565 = -61375532;    long syggGCRlPc5640329 = 14981379;    long syggGCRlPc4481925 = -173286983;    long syggGCRlPc63471336 = -672116114;    long syggGCRlPc89814887 = -575952185;    long syggGCRlPc3965709 = -412680917;    long syggGCRlPc90810277 = -890593286;    long syggGCRlPc63510935 = -74528028;    long syggGCRlPc8605597 = -676456326;    long syggGCRlPc59267581 = 50583439;    long syggGCRlPc13942633 = 19966895;    long syggGCRlPc23028789 = -99605502;    long syggGCRlPc32388438 = -449004724;    long syggGCRlPc69908070 = -415392127;    long syggGCRlPc15133432 = -563256845;    long syggGCRlPc27696123 = -388279761;    long syggGCRlPc31672815 = -410781761;    long syggGCRlPc49524470 = -297217394;    long syggGCRlPc85551232 = -519297742;    long syggGCRlPc2079642 = -267330043;    long syggGCRlPc5947614 = -763533748;    long syggGCRlPc43833239 = 68290932;    long syggGCRlPc42939217 = 46164695;    long syggGCRlPc58576182 = -71993280;    long syggGCRlPc45473524 = -670712855;    long syggGCRlPc68421223 = -597582311;    long syggGCRlPc46963751 = 36705531;    long syggGCRlPc4118184 = -247465817;    long syggGCRlPc73679156 = -884177208;    long syggGCRlPc61129258 = -66000120;    long syggGCRlPc25439395 = -229825727;    long syggGCRlPc73059413 = -504216521;    long syggGCRlPc27736403 = -421585874;    long syggGCRlPc37927990 = -186686799;    long syggGCRlPc99491074 = -125256414;    long syggGCRlPc73949674 = -16394229;    long syggGCRlPc18509220 = -711411725;    long syggGCRlPc27712335 = -963489090;    long syggGCRlPc1252969 = -38680852;    long syggGCRlPc16011923 = -445781614;    long syggGCRlPc1931328 = -369966617;    long syggGCRlPc62881775 = -745689062;     syggGCRlPc44753223 = syggGCRlPc26462262;     syggGCRlPc26462262 = syggGCRlPc76861362;     syggGCRlPc76861362 = syggGCRlPc32829577;     syggGCRlPc32829577 = syggGCRlPc69939278;     syggGCRlPc69939278 = syggGCRlPc39761658;     syggGCRlPc39761658 = syggGCRlPc12595533;     syggGCRlPc12595533 = syggGCRlPc77356030;     syggGCRlPc77356030 = syggGCRlPc66410255;     syggGCRlPc66410255 = syggGCRlPc81053276;     syggGCRlPc81053276 = syggGCRlPc12622918;     syggGCRlPc12622918 = syggGCRlPc58760793;     syggGCRlPc58760793 = syggGCRlPc92449013;     syggGCRlPc92449013 = syggGCRlPc26226405;     syggGCRlPc26226405 = syggGCRlPc82406207;     syggGCRlPc82406207 = syggGCRlPc14837467;     syggGCRlPc14837467 = syggGCRlPc26670710;     syggGCRlPc26670710 = syggGCRlPc94723434;     syggGCRlPc94723434 = syggGCRlPc50687267;     syggGCRlPc50687267 = syggGCRlPc22856485;     syggGCRlPc22856485 = syggGCRlPc40592326;     syggGCRlPc40592326 = syggGCRlPc5528865;     syggGCRlPc5528865 = syggGCRlPc94821246;     syggGCRlPc94821246 = syggGCRlPc32340324;     syggGCRlPc32340324 = syggGCRlPc75558012;     syggGCRlPc75558012 = syggGCRlPc64298949;     syggGCRlPc64298949 = syggGCRlPc35279734;     syggGCRlPc35279734 = syggGCRlPc49124196;     syggGCRlPc49124196 = syggGCRlPc87541143;     syggGCRlPc87541143 = syggGCRlPc62444546;     syggGCRlPc62444546 = syggGCRlPc90242998;     syggGCRlPc90242998 = syggGCRlPc49111983;     syggGCRlPc49111983 = syggGCRlPc50155197;     syggGCRlPc50155197 = syggGCRlPc33181432;     syggGCRlPc33181432 = syggGCRlPc12283772;     syggGCRlPc12283772 = syggGCRlPc59377419;     syggGCRlPc59377419 = syggGCRlPc82449028;     syggGCRlPc82449028 = syggGCRlPc56762639;     syggGCRlPc56762639 = syggGCRlPc79590003;     syggGCRlPc79590003 = syggGCRlPc22991144;     syggGCRlPc22991144 = syggGCRlPc91183670;     syggGCRlPc91183670 = syggGCRlPc91067855;     syggGCRlPc91067855 = syggGCRlPc19977632;     syggGCRlPc19977632 = syggGCRlPc92741605;     syggGCRlPc92741605 = syggGCRlPc26392710;     syggGCRlPc26392710 = syggGCRlPc31724773;     syggGCRlPc31724773 = syggGCRlPc21359732;     syggGCRlPc21359732 = syggGCRlPc76703552;     syggGCRlPc76703552 = syggGCRlPc3650672;     syggGCRlPc3650672 = syggGCRlPc19119920;     syggGCRlPc19119920 = syggGCRlPc15480795;     syggGCRlPc15480795 = syggGCRlPc86124815;     syggGCRlPc86124815 = syggGCRlPc75432827;     syggGCRlPc75432827 = syggGCRlPc89025938;     syggGCRlPc89025938 = syggGCRlPc7742038;     syggGCRlPc7742038 = syggGCRlPc39224359;     syggGCRlPc39224359 = syggGCRlPc31641016;     syggGCRlPc31641016 = syggGCRlPc44521038;     syggGCRlPc44521038 = syggGCRlPc57271565;     syggGCRlPc57271565 = syggGCRlPc5640329;     syggGCRlPc5640329 = syggGCRlPc4481925;     syggGCRlPc4481925 = syggGCRlPc63471336;     syggGCRlPc63471336 = syggGCRlPc89814887;     syggGCRlPc89814887 = syggGCRlPc3965709;     syggGCRlPc3965709 = syggGCRlPc90810277;     syggGCRlPc90810277 = syggGCRlPc63510935;     syggGCRlPc63510935 = syggGCRlPc8605597;     syggGCRlPc8605597 = syggGCRlPc59267581;     syggGCRlPc59267581 = syggGCRlPc13942633;     syggGCRlPc13942633 = syggGCRlPc23028789;     syggGCRlPc23028789 = syggGCRlPc32388438;     syggGCRlPc32388438 = syggGCRlPc69908070;     syggGCRlPc69908070 = syggGCRlPc15133432;     syggGCRlPc15133432 = syggGCRlPc27696123;     syggGCRlPc27696123 = syggGCRlPc31672815;     syggGCRlPc31672815 = syggGCRlPc49524470;     syggGCRlPc49524470 = syggGCRlPc85551232;     syggGCRlPc85551232 = syggGCRlPc2079642;     syggGCRlPc2079642 = syggGCRlPc5947614;     syggGCRlPc5947614 = syggGCRlPc43833239;     syggGCRlPc43833239 = syggGCRlPc42939217;     syggGCRlPc42939217 = syggGCRlPc58576182;     syggGCRlPc58576182 = syggGCRlPc45473524;     syggGCRlPc45473524 = syggGCRlPc68421223;     syggGCRlPc68421223 = syggGCRlPc46963751;     syggGCRlPc46963751 = syggGCRlPc4118184;     syggGCRlPc4118184 = syggGCRlPc73679156;     syggGCRlPc73679156 = syggGCRlPc61129258;     syggGCRlPc61129258 = syggGCRlPc25439395;     syggGCRlPc25439395 = syggGCRlPc73059413;     syggGCRlPc73059413 = syggGCRlPc27736403;     syggGCRlPc27736403 = syggGCRlPc37927990;     syggGCRlPc37927990 = syggGCRlPc99491074;     syggGCRlPc99491074 = syggGCRlPc73949674;     syggGCRlPc73949674 = syggGCRlPc18509220;     syggGCRlPc18509220 = syggGCRlPc27712335;     syggGCRlPc27712335 = syggGCRlPc1252969;     syggGCRlPc1252969 = syggGCRlPc16011923;     syggGCRlPc16011923 = syggGCRlPc1931328;     syggGCRlPc1931328 = syggGCRlPc62881775;     syggGCRlPc62881775 = syggGCRlPc44753223;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void KwsxoRIUur54332714() {     long uxQaKqTyje54068489 = -648220088;    long uxQaKqTyje81885184 = -333520844;    long uxQaKqTyje97013442 = -23270506;    long uxQaKqTyje90619598 = -304823280;    long uxQaKqTyje10002518 = -22468856;    long uxQaKqTyje33305020 = 42431111;    long uxQaKqTyje86249603 = -18343659;    long uxQaKqTyje66492186 = -671855398;    long uxQaKqTyje59218912 = -749176306;    long uxQaKqTyje49677733 = -180402427;    long uxQaKqTyje49524903 = -600836690;    long uxQaKqTyje69998543 = -212194693;    long uxQaKqTyje88230729 = -161114468;    long uxQaKqTyje58315046 = -831232520;    long uxQaKqTyje97682245 = -161818184;    long uxQaKqTyje19807991 = -522560309;    long uxQaKqTyje70481477 = -829609159;    long uxQaKqTyje6916076 = -494727007;    long uxQaKqTyje32700199 = -326619296;    long uxQaKqTyje86051833 = -125094806;    long uxQaKqTyje29271677 = -337550358;    long uxQaKqTyje29737777 = -300656605;    long uxQaKqTyje30882513 = -242418945;    long uxQaKqTyje91546953 = -67445695;    long uxQaKqTyje38620555 = -270916808;    long uxQaKqTyje30206767 = -60146719;    long uxQaKqTyje69038000 = 65698109;    long uxQaKqTyje20218672 = 45884600;    long uxQaKqTyje54658050 = 86636498;    long uxQaKqTyje75225494 = -762519281;    long uxQaKqTyje60241377 = -79665291;    long uxQaKqTyje26371347 = -666238885;    long uxQaKqTyje14527 = -809459565;    long uxQaKqTyje22210381 = -9835660;    long uxQaKqTyje98934047 = -948557905;    long uxQaKqTyje91202313 = -526907718;    long uxQaKqTyje19916637 = -647231970;    long uxQaKqTyje12799438 = -39227308;    long uxQaKqTyje45815704 = -152628636;    long uxQaKqTyje99091040 = -691884219;    long uxQaKqTyje15246805 = -772761622;    long uxQaKqTyje78719511 = -635905127;    long uxQaKqTyje41694638 = -80342912;    long uxQaKqTyje51498505 = -750954790;    long uxQaKqTyje62342784 = -578526631;    long uxQaKqTyje1964009 = -245609248;    long uxQaKqTyje26609363 = -579933918;    long uxQaKqTyje48174589 = -499963156;    long uxQaKqTyje69677816 = -11962330;    long uxQaKqTyje88757822 = 5624542;    long uxQaKqTyje52448504 = -629016247;    long uxQaKqTyje50341857 = -769533876;    long uxQaKqTyje63440485 = 61332710;    long uxQaKqTyje93607182 = -92221550;    long uxQaKqTyje25061037 = -131368131;    long uxQaKqTyje24330713 = -247563484;    long uxQaKqTyje51002672 = 8898100;    long uxQaKqTyje5466490 = -955824812;    long uxQaKqTyje51999044 = 66093527;    long uxQaKqTyje79795750 = -962322137;    long uxQaKqTyje64267019 = 76733002;    long uxQaKqTyje66030932 = 35771740;    long uxQaKqTyje11834137 = -658491897;    long uxQaKqTyje83993418 = -986657025;    long uxQaKqTyje89436355 = -737137;    long uxQaKqTyje23153556 = -934597805;    long uxQaKqTyje69984016 = -402735129;    long uxQaKqTyje66020349 = -51278808;    long uxQaKqTyje59380999 = -882674616;    long uxQaKqTyje6479932 = -634910466;    long uxQaKqTyje99891354 = -875328339;    long uxQaKqTyje57682039 = -690381852;    long uxQaKqTyje61100372 = -242098371;    long uxQaKqTyje33609158 = -634735078;    long uxQaKqTyje70805028 = -352333185;    long uxQaKqTyje50552166 = -701645231;    long uxQaKqTyje88043139 = -120313693;    long uxQaKqTyje79384007 = -491464155;    long uxQaKqTyje29204169 = -488919064;    long uxQaKqTyje36656546 = 74692439;    long uxQaKqTyje3597404 = -480212801;    long uxQaKqTyje20863412 = -434338736;    long uxQaKqTyje50540856 = -942153071;    long uxQaKqTyje65900228 = -918988044;    long uxQaKqTyje22776991 = -33503035;    long uxQaKqTyje9899520 = -310131416;    long uxQaKqTyje62930861 = -627571596;    long uxQaKqTyje6407344 = -617238015;    long uxQaKqTyje97149343 = -878467529;    long uxQaKqTyje74603334 = -600994421;    long uxQaKqTyje40199642 = -435805818;    long uxQaKqTyje14450147 = -691407159;    long uxQaKqTyje60800393 = -5320835;    long uxQaKqTyje66019953 = -190306500;    long uxQaKqTyje34824021 = -668617222;    long uxQaKqTyje49215872 = -708533363;    long uxQaKqTyje66885374 = -977413231;    long uxQaKqTyje57701219 = -93685887;    long uxQaKqTyje62062149 = -650217654;    long uxQaKqTyje39189228 = -648220088;     uxQaKqTyje54068489 = uxQaKqTyje81885184;     uxQaKqTyje81885184 = uxQaKqTyje97013442;     uxQaKqTyje97013442 = uxQaKqTyje90619598;     uxQaKqTyje90619598 = uxQaKqTyje10002518;     uxQaKqTyje10002518 = uxQaKqTyje33305020;     uxQaKqTyje33305020 = uxQaKqTyje86249603;     uxQaKqTyje86249603 = uxQaKqTyje66492186;     uxQaKqTyje66492186 = uxQaKqTyje59218912;     uxQaKqTyje59218912 = uxQaKqTyje49677733;     uxQaKqTyje49677733 = uxQaKqTyje49524903;     uxQaKqTyje49524903 = uxQaKqTyje69998543;     uxQaKqTyje69998543 = uxQaKqTyje88230729;     uxQaKqTyje88230729 = uxQaKqTyje58315046;     uxQaKqTyje58315046 = uxQaKqTyje97682245;     uxQaKqTyje97682245 = uxQaKqTyje19807991;     uxQaKqTyje19807991 = uxQaKqTyje70481477;     uxQaKqTyje70481477 = uxQaKqTyje6916076;     uxQaKqTyje6916076 = uxQaKqTyje32700199;     uxQaKqTyje32700199 = uxQaKqTyje86051833;     uxQaKqTyje86051833 = uxQaKqTyje29271677;     uxQaKqTyje29271677 = uxQaKqTyje29737777;     uxQaKqTyje29737777 = uxQaKqTyje30882513;     uxQaKqTyje30882513 = uxQaKqTyje91546953;     uxQaKqTyje91546953 = uxQaKqTyje38620555;     uxQaKqTyje38620555 = uxQaKqTyje30206767;     uxQaKqTyje30206767 = uxQaKqTyje69038000;     uxQaKqTyje69038000 = uxQaKqTyje20218672;     uxQaKqTyje20218672 = uxQaKqTyje54658050;     uxQaKqTyje54658050 = uxQaKqTyje75225494;     uxQaKqTyje75225494 = uxQaKqTyje60241377;     uxQaKqTyje60241377 = uxQaKqTyje26371347;     uxQaKqTyje26371347 = uxQaKqTyje14527;     uxQaKqTyje14527 = uxQaKqTyje22210381;     uxQaKqTyje22210381 = uxQaKqTyje98934047;     uxQaKqTyje98934047 = uxQaKqTyje91202313;     uxQaKqTyje91202313 = uxQaKqTyje19916637;     uxQaKqTyje19916637 = uxQaKqTyje12799438;     uxQaKqTyje12799438 = uxQaKqTyje45815704;     uxQaKqTyje45815704 = uxQaKqTyje99091040;     uxQaKqTyje99091040 = uxQaKqTyje15246805;     uxQaKqTyje15246805 = uxQaKqTyje78719511;     uxQaKqTyje78719511 = uxQaKqTyje41694638;     uxQaKqTyje41694638 = uxQaKqTyje51498505;     uxQaKqTyje51498505 = uxQaKqTyje62342784;     uxQaKqTyje62342784 = uxQaKqTyje1964009;     uxQaKqTyje1964009 = uxQaKqTyje26609363;     uxQaKqTyje26609363 = uxQaKqTyje48174589;     uxQaKqTyje48174589 = uxQaKqTyje69677816;     uxQaKqTyje69677816 = uxQaKqTyje88757822;     uxQaKqTyje88757822 = uxQaKqTyje52448504;     uxQaKqTyje52448504 = uxQaKqTyje50341857;     uxQaKqTyje50341857 = uxQaKqTyje63440485;     uxQaKqTyje63440485 = uxQaKqTyje93607182;     uxQaKqTyje93607182 = uxQaKqTyje25061037;     uxQaKqTyje25061037 = uxQaKqTyje24330713;     uxQaKqTyje24330713 = uxQaKqTyje51002672;     uxQaKqTyje51002672 = uxQaKqTyje5466490;     uxQaKqTyje5466490 = uxQaKqTyje51999044;     uxQaKqTyje51999044 = uxQaKqTyje79795750;     uxQaKqTyje79795750 = uxQaKqTyje64267019;     uxQaKqTyje64267019 = uxQaKqTyje66030932;     uxQaKqTyje66030932 = uxQaKqTyje11834137;     uxQaKqTyje11834137 = uxQaKqTyje83993418;     uxQaKqTyje83993418 = uxQaKqTyje89436355;     uxQaKqTyje89436355 = uxQaKqTyje23153556;     uxQaKqTyje23153556 = uxQaKqTyje69984016;     uxQaKqTyje69984016 = uxQaKqTyje66020349;     uxQaKqTyje66020349 = uxQaKqTyje59380999;     uxQaKqTyje59380999 = uxQaKqTyje6479932;     uxQaKqTyje6479932 = uxQaKqTyje99891354;     uxQaKqTyje99891354 = uxQaKqTyje57682039;     uxQaKqTyje57682039 = uxQaKqTyje61100372;     uxQaKqTyje61100372 = uxQaKqTyje33609158;     uxQaKqTyje33609158 = uxQaKqTyje70805028;     uxQaKqTyje70805028 = uxQaKqTyje50552166;     uxQaKqTyje50552166 = uxQaKqTyje88043139;     uxQaKqTyje88043139 = uxQaKqTyje79384007;     uxQaKqTyje79384007 = uxQaKqTyje29204169;     uxQaKqTyje29204169 = uxQaKqTyje36656546;     uxQaKqTyje36656546 = uxQaKqTyje3597404;     uxQaKqTyje3597404 = uxQaKqTyje20863412;     uxQaKqTyje20863412 = uxQaKqTyje50540856;     uxQaKqTyje50540856 = uxQaKqTyje65900228;     uxQaKqTyje65900228 = uxQaKqTyje22776991;     uxQaKqTyje22776991 = uxQaKqTyje9899520;     uxQaKqTyje9899520 = uxQaKqTyje62930861;     uxQaKqTyje62930861 = uxQaKqTyje6407344;     uxQaKqTyje6407344 = uxQaKqTyje97149343;     uxQaKqTyje97149343 = uxQaKqTyje74603334;     uxQaKqTyje74603334 = uxQaKqTyje40199642;     uxQaKqTyje40199642 = uxQaKqTyje14450147;     uxQaKqTyje14450147 = uxQaKqTyje60800393;     uxQaKqTyje60800393 = uxQaKqTyje66019953;     uxQaKqTyje66019953 = uxQaKqTyje34824021;     uxQaKqTyje34824021 = uxQaKqTyje49215872;     uxQaKqTyje49215872 = uxQaKqTyje66885374;     uxQaKqTyje66885374 = uxQaKqTyje57701219;     uxQaKqTyje57701219 = uxQaKqTyje62062149;     uxQaKqTyje62062149 = uxQaKqTyje39189228;     uxQaKqTyje39189228 = uxQaKqTyje54068489;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ccWKsLYvSj12243398() {     long ZVWrVCnxNo47386486 = -370129568;    long ZVWrVCnxNo15632209 = 42023138;    long ZVWrVCnxNo97929250 = -780001273;    long ZVWrVCnxNo79913275 = -312451294;    long ZVWrVCnxNo3067106 = -988012905;    long ZVWrVCnxNo51023016 = -944007434;    long ZVWrVCnxNo62625483 = -120709500;    long ZVWrVCnxNo27961066 = 77434311;    long ZVWrVCnxNo93936925 = 17256981;    long ZVWrVCnxNo77967715 = 21095986;    long ZVWrVCnxNo22789021 = -282532405;    long ZVWrVCnxNo98454434 = -720224804;    long ZVWrVCnxNo68002373 = -740539849;    long ZVWrVCnxNo99523084 = -621361992;    long ZVWrVCnxNo60462337 = -870720223;    long ZVWrVCnxNo82017410 = -610259764;    long ZVWrVCnxNo20271182 = -321608944;    long ZVWrVCnxNo66411809 = -299182591;    long ZVWrVCnxNo34225950 = -958883731;    long ZVWrVCnxNo8095028 = -6802489;    long ZVWrVCnxNo96989661 = -222654296;    long ZVWrVCnxNo43803513 = 41288260;    long ZVWrVCnxNo1469803 = -975848221;    long ZVWrVCnxNo18332414 = -791246715;    long ZVWrVCnxNo33311325 = -187058623;    long ZVWrVCnxNo6757951 = -64782700;    long ZVWrVCnxNo96525405 = -902857240;    long ZVWrVCnxNo36779922 = 35819774;    long ZVWrVCnxNo29530146 = -113669596;    long ZVWrVCnxNo43269756 = -300966741;    long ZVWrVCnxNo74873288 = -490755948;    long ZVWrVCnxNo90110859 = -80609546;    long ZVWrVCnxNo34584372 = -130106583;    long ZVWrVCnxNo40530246 = -709986672;    long ZVWrVCnxNo42064243 = -395886979;    long ZVWrVCnxNo50360491 = -11902214;    long ZVWrVCnxNo88297246 = 89734754;    long ZVWrVCnxNo29020987 = -981638584;    long ZVWrVCnxNo84277765 = -630064388;    long ZVWrVCnxNo4074035 = -539769968;    long ZVWrVCnxNo35196056 = -638449320;    long ZVWrVCnxNo74562834 = -295320236;    long ZVWrVCnxNo5444866 = -155974559;    long ZVWrVCnxNo12741505 = -643054373;    long ZVWrVCnxNo62322864 = -194173629;    long ZVWrVCnxNo21131011 = -881596266;    long ZVWrVCnxNo22201503 = -63755648;    long ZVWrVCnxNo77458725 = -472028621;    long ZVWrVCnxNo72606274 = -161625066;    long ZVWrVCnxNo94809900 = -844399576;    long ZVWrVCnxNo96340428 = -475535624;    long ZVWrVCnxNo62069544 = -863366354;    long ZVWrVCnxNo28100489 = -438561611;    long ZVWrVCnxNo65376879 = -787079656;    long ZVWrVCnxNo15253736 = -351253983;    long ZVWrVCnxNo3582974 = -311417829;    long ZVWrVCnxNo14162407 = 17871359;    long ZVWrVCnxNo79596836 = -988754558;    long ZVWrVCnxNo46601951 = -25392672;    long ZVWrVCnxNo96309154 = -823230205;    long ZVWrVCnxNo54497611 = 58849805;    long ZVWrVCnxNo25845562 = -56529275;    long ZVWrVCnxNo98430919 = -808896093;    long ZVWrVCnxNo50667170 = -681776278;    long ZVWrVCnxNo3094427 = -488148066;    long ZVWrVCnxNo32678162 = -101922860;    long ZVWrVCnxNo63870062 = -490118222;    long ZVWrVCnxNo27472127 = 69446823;    long ZVWrVCnxNo57458841 = -125475014;    long ZVWrVCnxNo10101847 = -758818010;    long ZVWrVCnxNo93720164 = -599994519;    long ZVWrVCnxNo91250195 = -339970361;    long ZVWrVCnxNo82134044 = -669118203;    long ZVWrVCnxNo30151915 = -319113763;    long ZVWrVCnxNo72898972 = -368353170;    long ZVWrVCnxNo22426828 = -927334061;    long ZVWrVCnxNo38358647 = -802737181;    long ZVWrVCnxNo88728297 = -232793849;    long ZVWrVCnxNo56009550 = -497073087;    long ZVWrVCnxNo12180314 = -305462357;    long ZVWrVCnxNo84556447 = 98972948;    long ZVWrVCnxNo19066680 = -330828619;    long ZVWrVCnxNo64173647 = -802555160;    long ZVWrVCnxNo34720246 = -269270021;    long ZVWrVCnxNo46929327 = -825431118;    long ZVWrVCnxNo12803744 = -627389595;    long ZVWrVCnxNo62010370 = -642047935;    long ZVWrVCnxNo69207493 = -343026927;    long ZVWrVCnxNo25276511 = -258732690;    long ZVWrVCnxNo38481270 = 15530850;    long ZVWrVCnxNo36198085 = 70226427;    long ZVWrVCnxNo8700410 = 78489312;    long ZVWrVCnxNo82419035 = -856245913;    long ZVWrVCnxNo87968610 = -806834183;    long ZVWrVCnxNo49576424 = -498619774;    long ZVWrVCnxNo9350494 = -481920045;    long ZVWrVCnxNo76131914 = -486424143;    long ZVWrVCnxNo54777696 = -474198282;    long ZVWrVCnxNo9647078 = -54906307;    long ZVWrVCnxNo29644702 = -370129568;     ZVWrVCnxNo47386486 = ZVWrVCnxNo15632209;     ZVWrVCnxNo15632209 = ZVWrVCnxNo97929250;     ZVWrVCnxNo97929250 = ZVWrVCnxNo79913275;     ZVWrVCnxNo79913275 = ZVWrVCnxNo3067106;     ZVWrVCnxNo3067106 = ZVWrVCnxNo51023016;     ZVWrVCnxNo51023016 = ZVWrVCnxNo62625483;     ZVWrVCnxNo62625483 = ZVWrVCnxNo27961066;     ZVWrVCnxNo27961066 = ZVWrVCnxNo93936925;     ZVWrVCnxNo93936925 = ZVWrVCnxNo77967715;     ZVWrVCnxNo77967715 = ZVWrVCnxNo22789021;     ZVWrVCnxNo22789021 = ZVWrVCnxNo98454434;     ZVWrVCnxNo98454434 = ZVWrVCnxNo68002373;     ZVWrVCnxNo68002373 = ZVWrVCnxNo99523084;     ZVWrVCnxNo99523084 = ZVWrVCnxNo60462337;     ZVWrVCnxNo60462337 = ZVWrVCnxNo82017410;     ZVWrVCnxNo82017410 = ZVWrVCnxNo20271182;     ZVWrVCnxNo20271182 = ZVWrVCnxNo66411809;     ZVWrVCnxNo66411809 = ZVWrVCnxNo34225950;     ZVWrVCnxNo34225950 = ZVWrVCnxNo8095028;     ZVWrVCnxNo8095028 = ZVWrVCnxNo96989661;     ZVWrVCnxNo96989661 = ZVWrVCnxNo43803513;     ZVWrVCnxNo43803513 = ZVWrVCnxNo1469803;     ZVWrVCnxNo1469803 = ZVWrVCnxNo18332414;     ZVWrVCnxNo18332414 = ZVWrVCnxNo33311325;     ZVWrVCnxNo33311325 = ZVWrVCnxNo6757951;     ZVWrVCnxNo6757951 = ZVWrVCnxNo96525405;     ZVWrVCnxNo96525405 = ZVWrVCnxNo36779922;     ZVWrVCnxNo36779922 = ZVWrVCnxNo29530146;     ZVWrVCnxNo29530146 = ZVWrVCnxNo43269756;     ZVWrVCnxNo43269756 = ZVWrVCnxNo74873288;     ZVWrVCnxNo74873288 = ZVWrVCnxNo90110859;     ZVWrVCnxNo90110859 = ZVWrVCnxNo34584372;     ZVWrVCnxNo34584372 = ZVWrVCnxNo40530246;     ZVWrVCnxNo40530246 = ZVWrVCnxNo42064243;     ZVWrVCnxNo42064243 = ZVWrVCnxNo50360491;     ZVWrVCnxNo50360491 = ZVWrVCnxNo88297246;     ZVWrVCnxNo88297246 = ZVWrVCnxNo29020987;     ZVWrVCnxNo29020987 = ZVWrVCnxNo84277765;     ZVWrVCnxNo84277765 = ZVWrVCnxNo4074035;     ZVWrVCnxNo4074035 = ZVWrVCnxNo35196056;     ZVWrVCnxNo35196056 = ZVWrVCnxNo74562834;     ZVWrVCnxNo74562834 = ZVWrVCnxNo5444866;     ZVWrVCnxNo5444866 = ZVWrVCnxNo12741505;     ZVWrVCnxNo12741505 = ZVWrVCnxNo62322864;     ZVWrVCnxNo62322864 = ZVWrVCnxNo21131011;     ZVWrVCnxNo21131011 = ZVWrVCnxNo22201503;     ZVWrVCnxNo22201503 = ZVWrVCnxNo77458725;     ZVWrVCnxNo77458725 = ZVWrVCnxNo72606274;     ZVWrVCnxNo72606274 = ZVWrVCnxNo94809900;     ZVWrVCnxNo94809900 = ZVWrVCnxNo96340428;     ZVWrVCnxNo96340428 = ZVWrVCnxNo62069544;     ZVWrVCnxNo62069544 = ZVWrVCnxNo28100489;     ZVWrVCnxNo28100489 = ZVWrVCnxNo65376879;     ZVWrVCnxNo65376879 = ZVWrVCnxNo15253736;     ZVWrVCnxNo15253736 = ZVWrVCnxNo3582974;     ZVWrVCnxNo3582974 = ZVWrVCnxNo14162407;     ZVWrVCnxNo14162407 = ZVWrVCnxNo79596836;     ZVWrVCnxNo79596836 = ZVWrVCnxNo46601951;     ZVWrVCnxNo46601951 = ZVWrVCnxNo96309154;     ZVWrVCnxNo96309154 = ZVWrVCnxNo54497611;     ZVWrVCnxNo54497611 = ZVWrVCnxNo25845562;     ZVWrVCnxNo25845562 = ZVWrVCnxNo98430919;     ZVWrVCnxNo98430919 = ZVWrVCnxNo50667170;     ZVWrVCnxNo50667170 = ZVWrVCnxNo3094427;     ZVWrVCnxNo3094427 = ZVWrVCnxNo32678162;     ZVWrVCnxNo32678162 = ZVWrVCnxNo63870062;     ZVWrVCnxNo63870062 = ZVWrVCnxNo27472127;     ZVWrVCnxNo27472127 = ZVWrVCnxNo57458841;     ZVWrVCnxNo57458841 = ZVWrVCnxNo10101847;     ZVWrVCnxNo10101847 = ZVWrVCnxNo93720164;     ZVWrVCnxNo93720164 = ZVWrVCnxNo91250195;     ZVWrVCnxNo91250195 = ZVWrVCnxNo82134044;     ZVWrVCnxNo82134044 = ZVWrVCnxNo30151915;     ZVWrVCnxNo30151915 = ZVWrVCnxNo72898972;     ZVWrVCnxNo72898972 = ZVWrVCnxNo22426828;     ZVWrVCnxNo22426828 = ZVWrVCnxNo38358647;     ZVWrVCnxNo38358647 = ZVWrVCnxNo88728297;     ZVWrVCnxNo88728297 = ZVWrVCnxNo56009550;     ZVWrVCnxNo56009550 = ZVWrVCnxNo12180314;     ZVWrVCnxNo12180314 = ZVWrVCnxNo84556447;     ZVWrVCnxNo84556447 = ZVWrVCnxNo19066680;     ZVWrVCnxNo19066680 = ZVWrVCnxNo64173647;     ZVWrVCnxNo64173647 = ZVWrVCnxNo34720246;     ZVWrVCnxNo34720246 = ZVWrVCnxNo46929327;     ZVWrVCnxNo46929327 = ZVWrVCnxNo12803744;     ZVWrVCnxNo12803744 = ZVWrVCnxNo62010370;     ZVWrVCnxNo62010370 = ZVWrVCnxNo69207493;     ZVWrVCnxNo69207493 = ZVWrVCnxNo25276511;     ZVWrVCnxNo25276511 = ZVWrVCnxNo38481270;     ZVWrVCnxNo38481270 = ZVWrVCnxNo36198085;     ZVWrVCnxNo36198085 = ZVWrVCnxNo8700410;     ZVWrVCnxNo8700410 = ZVWrVCnxNo82419035;     ZVWrVCnxNo82419035 = ZVWrVCnxNo87968610;     ZVWrVCnxNo87968610 = ZVWrVCnxNo49576424;     ZVWrVCnxNo49576424 = ZVWrVCnxNo9350494;     ZVWrVCnxNo9350494 = ZVWrVCnxNo76131914;     ZVWrVCnxNo76131914 = ZVWrVCnxNo54777696;     ZVWrVCnxNo54777696 = ZVWrVCnxNo9647078;     ZVWrVCnxNo9647078 = ZVWrVCnxNo29644702;     ZVWrVCnxNo29644702 = ZVWrVCnxNo47386486;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void NIhXZBuXPM800707() {     long UzsZTClxES53776334 = -923911985;    long UzsZTClxES78303810 = -614441431;    long UzsZTClxES7462257 = -962745271;    long UzsZTClxES26423619 = -134822848;    long UzsZTClxES54242709 = -368098798;    long UzsZTClxES90080767 = -132185497;    long UzsZTClxES57503030 = -245813769;    long UzsZTClxES75927647 = -546913476;    long UzsZTClxES33009413 = -920445100;    long UzsZTClxES29396824 = -799351266;    long UzsZTClxES96693014 = -869611449;    long UzsZTClxES71575525 = -841630394;    long UzsZTClxES19000482 = -153260414;    long UzsZTClxES51257234 = -960146117;    long UzsZTClxES44701668 = -255569564;    long UzsZTClxES83512218 = 47896716;    long UzsZTClxES76073470 = -63303463;    long UzsZTClxES19691319 = -825323553;    long UzsZTClxES95020399 = -672609462;    long UzsZTClxES45459157 = -62436784;    long UzsZTClxES76911402 = -873545615;    long UzsZTClxES97475555 = -298636855;    long UzsZTClxES39289148 = -70829090;    long UzsZTClxES12411033 = -361879483;    long UzsZTClxES479799 = -505626512;    long UzsZTClxES5704312 = -414101264;    long UzsZTClxES37343965 = -820110236;    long UzsZTClxES88158146 = -355562772;    long UzsZTClxES44177896 = -543813374;    long UzsZTClxES7690249 = 46374494;    long UzsZTClxES63797625 = -272510941;    long UzsZTClxES34132200 = -815880266;    long UzsZTClxES333559 = -169006083;    long UzsZTClxES29209852 = -50704648;    long UzsZTClxES74773528 = -830559882;    long UzsZTClxES19386643 = -496066639;    long UzsZTClxES12649960 = -405046610;    long UzsZTClxES42831838 = -939079969;    long UzsZTClxES4822257 = -357330385;    long UzsZTClxES53142846 = -816694234;    long UzsZTClxES59839543 = -870158265;    long UzsZTClxES71262892 = -891371944;    long UzsZTClxES53028281 = -997256409;    long UzsZTClxES14671723 = -42122716;    long UzsZTClxES94336135 = -927188310;    long UzsZTClxES78159059 = -274277821;    long UzsZTClxES24841409 = -553153485;    long UzsZTClxES79870499 = -854085689;    long UzsZTClxES3967494 = -25307984;    long UzsZTClxES28307822 = -943430251;    long UzsZTClxES12133861 = -941255282;    long UzsZTClxES83431446 = -740031897;    long UzsZTClxES83067238 = 77409743;    long UzsZTClxES92851877 = -297765453;    long UzsZTClxES23889304 = -776925865;    long UzsZTClxES56300779 = -525275130;    long UzsZTClxES39014663 = -443612342;    long UzsZTClxES95051223 = -500865789;    long UzsZTClxES25943820 = -629196336;    long UzsZTClxES48538397 = -953997535;    long UzsZTClxES52736803 = -312075261;    long UzsZTClxES69344884 = -890250997;    long UzsZTClxES31749752 = 96899897;    long UzsZTClxES25319165 = -866819595;    long UzsZTClxES65599198 = -426840326;    long UzsZTClxES62560815 = 46268816;    long UzsZTClxES71241967 = -572624311;    long UzsZTClxES89790630 = -2555767;    long UzsZTClxES76483705 = -29586236;    long UzsZTClxES25315025 = -759502926;    long UzsZTClxES70862258 = -547056674;    long UzsZTClxES33241633 = -124223494;    long UzsZTClxES14869062 = -367993168;    long UzsZTClxES41877554 = -855915228;    long UzsZTClxES85619613 = -192278519;    long UzsZTClxES5648511 = -982173671;    long UzsZTClxES44447274 = -301380447;    long UzsZTClxES24617426 = 71293626;    long UzsZTClxES18074898 = -434691174;    long UzsZTClxES22320740 = -131348691;    long UzsZTClxES80862903 = -860947779;    long UzsZTClxES57473465 = -966024548;    long UzsZTClxES84190653 = -230254789;    long UzsZTClxES15870075 = -600383124;    long UzsZTClxES95556388 = -12370224;    long UzsZTClxES80366179 = -532479044;    long UzsZTClxES51064962 = -793290009;    long UzsZTClxES7481681 = -871240631;    long UzsZTClxES5320548 = -273778783;    long UzsZTClxES18472750 = -205284752;    long UzsZTClxES80371980 = 47545703;    long UzsZTClxES17598737 = -904180822;    long UzsZTClxES16888018 = -209883633;    long UzsZTClxES56283859 = -403332850;    long UzsZTClxES406043 = -404618974;    long UzsZTClxES90494659 = -979907269;    long UzsZTClxES39513141 = -888271842;    long UzsZTClxES27709117 = -30436814;    long UzsZTClxES49072524 = -615282390;    long UzsZTClxES31775320 = -923911985;     UzsZTClxES53776334 = UzsZTClxES78303810;     UzsZTClxES78303810 = UzsZTClxES7462257;     UzsZTClxES7462257 = UzsZTClxES26423619;     UzsZTClxES26423619 = UzsZTClxES54242709;     UzsZTClxES54242709 = UzsZTClxES90080767;     UzsZTClxES90080767 = UzsZTClxES57503030;     UzsZTClxES57503030 = UzsZTClxES75927647;     UzsZTClxES75927647 = UzsZTClxES33009413;     UzsZTClxES33009413 = UzsZTClxES29396824;     UzsZTClxES29396824 = UzsZTClxES96693014;     UzsZTClxES96693014 = UzsZTClxES71575525;     UzsZTClxES71575525 = UzsZTClxES19000482;     UzsZTClxES19000482 = UzsZTClxES51257234;     UzsZTClxES51257234 = UzsZTClxES44701668;     UzsZTClxES44701668 = UzsZTClxES83512218;     UzsZTClxES83512218 = UzsZTClxES76073470;     UzsZTClxES76073470 = UzsZTClxES19691319;     UzsZTClxES19691319 = UzsZTClxES95020399;     UzsZTClxES95020399 = UzsZTClxES45459157;     UzsZTClxES45459157 = UzsZTClxES76911402;     UzsZTClxES76911402 = UzsZTClxES97475555;     UzsZTClxES97475555 = UzsZTClxES39289148;     UzsZTClxES39289148 = UzsZTClxES12411033;     UzsZTClxES12411033 = UzsZTClxES479799;     UzsZTClxES479799 = UzsZTClxES5704312;     UzsZTClxES5704312 = UzsZTClxES37343965;     UzsZTClxES37343965 = UzsZTClxES88158146;     UzsZTClxES88158146 = UzsZTClxES44177896;     UzsZTClxES44177896 = UzsZTClxES7690249;     UzsZTClxES7690249 = UzsZTClxES63797625;     UzsZTClxES63797625 = UzsZTClxES34132200;     UzsZTClxES34132200 = UzsZTClxES333559;     UzsZTClxES333559 = UzsZTClxES29209852;     UzsZTClxES29209852 = UzsZTClxES74773528;     UzsZTClxES74773528 = UzsZTClxES19386643;     UzsZTClxES19386643 = UzsZTClxES12649960;     UzsZTClxES12649960 = UzsZTClxES42831838;     UzsZTClxES42831838 = UzsZTClxES4822257;     UzsZTClxES4822257 = UzsZTClxES53142846;     UzsZTClxES53142846 = UzsZTClxES59839543;     UzsZTClxES59839543 = UzsZTClxES71262892;     UzsZTClxES71262892 = UzsZTClxES53028281;     UzsZTClxES53028281 = UzsZTClxES14671723;     UzsZTClxES14671723 = UzsZTClxES94336135;     UzsZTClxES94336135 = UzsZTClxES78159059;     UzsZTClxES78159059 = UzsZTClxES24841409;     UzsZTClxES24841409 = UzsZTClxES79870499;     UzsZTClxES79870499 = UzsZTClxES3967494;     UzsZTClxES3967494 = UzsZTClxES28307822;     UzsZTClxES28307822 = UzsZTClxES12133861;     UzsZTClxES12133861 = UzsZTClxES83431446;     UzsZTClxES83431446 = UzsZTClxES83067238;     UzsZTClxES83067238 = UzsZTClxES92851877;     UzsZTClxES92851877 = UzsZTClxES23889304;     UzsZTClxES23889304 = UzsZTClxES56300779;     UzsZTClxES56300779 = UzsZTClxES39014663;     UzsZTClxES39014663 = UzsZTClxES95051223;     UzsZTClxES95051223 = UzsZTClxES25943820;     UzsZTClxES25943820 = UzsZTClxES48538397;     UzsZTClxES48538397 = UzsZTClxES52736803;     UzsZTClxES52736803 = UzsZTClxES69344884;     UzsZTClxES69344884 = UzsZTClxES31749752;     UzsZTClxES31749752 = UzsZTClxES25319165;     UzsZTClxES25319165 = UzsZTClxES65599198;     UzsZTClxES65599198 = UzsZTClxES62560815;     UzsZTClxES62560815 = UzsZTClxES71241967;     UzsZTClxES71241967 = UzsZTClxES89790630;     UzsZTClxES89790630 = UzsZTClxES76483705;     UzsZTClxES76483705 = UzsZTClxES25315025;     UzsZTClxES25315025 = UzsZTClxES70862258;     UzsZTClxES70862258 = UzsZTClxES33241633;     UzsZTClxES33241633 = UzsZTClxES14869062;     UzsZTClxES14869062 = UzsZTClxES41877554;     UzsZTClxES41877554 = UzsZTClxES85619613;     UzsZTClxES85619613 = UzsZTClxES5648511;     UzsZTClxES5648511 = UzsZTClxES44447274;     UzsZTClxES44447274 = UzsZTClxES24617426;     UzsZTClxES24617426 = UzsZTClxES18074898;     UzsZTClxES18074898 = UzsZTClxES22320740;     UzsZTClxES22320740 = UzsZTClxES80862903;     UzsZTClxES80862903 = UzsZTClxES57473465;     UzsZTClxES57473465 = UzsZTClxES84190653;     UzsZTClxES84190653 = UzsZTClxES15870075;     UzsZTClxES15870075 = UzsZTClxES95556388;     UzsZTClxES95556388 = UzsZTClxES80366179;     UzsZTClxES80366179 = UzsZTClxES51064962;     UzsZTClxES51064962 = UzsZTClxES7481681;     UzsZTClxES7481681 = UzsZTClxES5320548;     UzsZTClxES5320548 = UzsZTClxES18472750;     UzsZTClxES18472750 = UzsZTClxES80371980;     UzsZTClxES80371980 = UzsZTClxES17598737;     UzsZTClxES17598737 = UzsZTClxES16888018;     UzsZTClxES16888018 = UzsZTClxES56283859;     UzsZTClxES56283859 = UzsZTClxES406043;     UzsZTClxES406043 = UzsZTClxES90494659;     UzsZTClxES90494659 = UzsZTClxES39513141;     UzsZTClxES39513141 = UzsZTClxES27709117;     UzsZTClxES27709117 = UzsZTClxES49072524;     UzsZTClxES49072524 = UzsZTClxES31775320;     UzsZTClxES31775320 = UzsZTClxES53776334;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void xmSdjzxVhK24247926() {     float UymzuZMUPg93618576 = -42704905;    float UymzuZMUPg84632106 = -117044282;    float UymzuZMUPg36762254 = -167603729;    float UymzuZMUPg54376387 = -100318199;    float UymzuZMUPg489509 = -619608030;    float UymzuZMUPg84136129 = -575144198;    float UymzuZMUPg12735726 = -755158767;    float UymzuZMUPg1724109 = -978197646;    float UymzuZMUPg77186395 = -82548945;    float UymzuZMUPg17572194 = -617166041;    float UymzuZMUPg94612189 = -47466275;    float UymzuZMUPg90037419 = -731306276;    float UymzuZMUPg98300223 = -705569128;    float UymzuZMUPg40313000 = -105779285;    float UymzuZMUPg83330326 = -881050823;    float UymzuZMUPg3190504 = -591031566;    float UymzuZMUPg55811694 = -333824796;    float UymzuZMUPg50071608 = -277429864;    float UymzuZMUPg17719655 = -162532231;    float UymzuZMUPg32098526 = -432626508;    float UymzuZMUPg12886750 = -925882998;    float UymzuZMUPg40424584 = -267223887;    float UymzuZMUPg34836206 = -7001853;    float UymzuZMUPg36633575 = -703186993;    float UymzuZMUPg98670869 = -575479843;    float UymzuZMUPg54275226 = -208672132;    float UymzuZMUPg64840286 = 10552066;    float UymzuZMUPg35013591 = -605691467;    float UymzuZMUPg29058682 = -303874400;    float UymzuZMUPg17831745 = -524844904;    float UymzuZMUPg29051428 = -858156591;    float UymzuZMUPg60355146 = -426568863;    float UymzuZMUPg52806102 = -951347491;    float UymzuZMUPg59694420 = -512172627;    float UymzuZMUPg33261996 = -38755113;    float UymzuZMUPg47266743 = -393547787;    float UymzuZMUPg15690143 = -929110432;    float UymzuZMUPg59824421 = -610913526;    float UymzuZMUPg80219830 = -203642409;    float UymzuZMUPg86865676 = -509422415;    float UymzuZMUPg33312371 = -838486311;    float UymzuZMUPg36328661 = -719091871;    float UymzuZMUPg73824565 = -40682684;    float UymzuZMUPg9467008 = -851168276;    float UymzuZMUPg63271338 = 28214308;    float UymzuZMUPg24258144 = -196514462;    float UymzuZMUPg18874505 = -23254774;    float UymzuZMUPg82723392 = -748912780;    float UymzuZMUPg17852839 = -744888157;    float UymzuZMUPg22081449 = -665700272;    float UymzuZMUPg34610528 = 45317397;    float UymzuZMUPg92110071 = 77725433;    float UymzuZMUPg32836011 = -578298708;    float UymzuZMUPg82190796 = -236964823;    float UymzuZMUPg11361177 = -754959773;    float UymzuZMUPg53193993 = -775481019;    float UymzuZMUPg49795900 = -10042429;    float UymzuZMUPg128680 = -464416737;    float UymzuZMUPg55705518 = -524838357;    float UymzuZMUPg46214283 = -310935898;    float UymzuZMUPg19295843 = -485696264;    float UymzuZMUPg77722134 = -49467300;    float UymzuZMUPg72665427 = -574323247;    float UymzuZMUPg59354651 = -557704041;    float UymzuZMUPg88520765 = -759009451;    float UymzuZMUPg34257044 = -620897412;    float UymzuZMUPg37231317 = -779958786;    float UymzuZMUPg38605803 = -93396501;    float UymzuZMUPg7051004 = 32975828;    float UymzuZMUPg36063584 = -387503036;    float UymzuZMUPg87500360 = -661921135;    float UymzuZMUPg95987272 = -722911271;    float UymzuZMUPg69851777 = 26212545;    float UymzuZMUPg30853979 = -653109816;    float UymzuZMUPg98786154 = -594140197;    float UymzuZMUPg76558089 = -106791127;    float UymzuZMUPg66600018 = -126541204;    float UymzuZMUPg25369198 = -155833578;    float UymzuZMUPg73362236 = -631401302;    float UymzuZMUPg74412725 = -278965381;    float UymzuZMUPg35400721 = -85417359;    float UymzuZMUPg82116894 = -240535155;    float UymzuZMUPg17160753 = -860803310;    float UymzuZMUPg6977233 = -638174128;    float UymzuZMUPg83221217 = -470162302;    float UymzuZMUPg36941357 = -835882024;    float UymzuZMUPg27519135 = -848270156;    float UymzuZMUPg70615306 = -614382668;    float UymzuZMUPg48333244 = -757212855;    float UymzuZMUPg80068003 = -263274095;    float UymzuZMUPg97470842 = -283505358;    float UymzuZMUPg15561464 = -364693696;    float UymzuZMUPg4118904 = 13924831;    float UymzuZMUPg34005547 = -892706511;    float UymzuZMUPg67569833 = 76273848;    float UymzuZMUPg55590237 = -689019012;    float UymzuZMUPg63663234 = -44768625;    float UymzuZMUPg14469915 = -482978643;    float UymzuZMUPg20946243 = 7841175;    float UymzuZMUPg29014294 = -42704905;     UymzuZMUPg93618576 = UymzuZMUPg84632106;     UymzuZMUPg84632106 = UymzuZMUPg36762254;     UymzuZMUPg36762254 = UymzuZMUPg54376387;     UymzuZMUPg54376387 = UymzuZMUPg489509;     UymzuZMUPg489509 = UymzuZMUPg84136129;     UymzuZMUPg84136129 = UymzuZMUPg12735726;     UymzuZMUPg12735726 = UymzuZMUPg1724109;     UymzuZMUPg1724109 = UymzuZMUPg77186395;     UymzuZMUPg77186395 = UymzuZMUPg17572194;     UymzuZMUPg17572194 = UymzuZMUPg94612189;     UymzuZMUPg94612189 = UymzuZMUPg90037419;     UymzuZMUPg90037419 = UymzuZMUPg98300223;     UymzuZMUPg98300223 = UymzuZMUPg40313000;     UymzuZMUPg40313000 = UymzuZMUPg83330326;     UymzuZMUPg83330326 = UymzuZMUPg3190504;     UymzuZMUPg3190504 = UymzuZMUPg55811694;     UymzuZMUPg55811694 = UymzuZMUPg50071608;     UymzuZMUPg50071608 = UymzuZMUPg17719655;     UymzuZMUPg17719655 = UymzuZMUPg32098526;     UymzuZMUPg32098526 = UymzuZMUPg12886750;     UymzuZMUPg12886750 = UymzuZMUPg40424584;     UymzuZMUPg40424584 = UymzuZMUPg34836206;     UymzuZMUPg34836206 = UymzuZMUPg36633575;     UymzuZMUPg36633575 = UymzuZMUPg98670869;     UymzuZMUPg98670869 = UymzuZMUPg54275226;     UymzuZMUPg54275226 = UymzuZMUPg64840286;     UymzuZMUPg64840286 = UymzuZMUPg35013591;     UymzuZMUPg35013591 = UymzuZMUPg29058682;     UymzuZMUPg29058682 = UymzuZMUPg17831745;     UymzuZMUPg17831745 = UymzuZMUPg29051428;     UymzuZMUPg29051428 = UymzuZMUPg60355146;     UymzuZMUPg60355146 = UymzuZMUPg52806102;     UymzuZMUPg52806102 = UymzuZMUPg59694420;     UymzuZMUPg59694420 = UymzuZMUPg33261996;     UymzuZMUPg33261996 = UymzuZMUPg47266743;     UymzuZMUPg47266743 = UymzuZMUPg15690143;     UymzuZMUPg15690143 = UymzuZMUPg59824421;     UymzuZMUPg59824421 = UymzuZMUPg80219830;     UymzuZMUPg80219830 = UymzuZMUPg86865676;     UymzuZMUPg86865676 = UymzuZMUPg33312371;     UymzuZMUPg33312371 = UymzuZMUPg36328661;     UymzuZMUPg36328661 = UymzuZMUPg73824565;     UymzuZMUPg73824565 = UymzuZMUPg9467008;     UymzuZMUPg9467008 = UymzuZMUPg63271338;     UymzuZMUPg63271338 = UymzuZMUPg24258144;     UymzuZMUPg24258144 = UymzuZMUPg18874505;     UymzuZMUPg18874505 = UymzuZMUPg82723392;     UymzuZMUPg82723392 = UymzuZMUPg17852839;     UymzuZMUPg17852839 = UymzuZMUPg22081449;     UymzuZMUPg22081449 = UymzuZMUPg34610528;     UymzuZMUPg34610528 = UymzuZMUPg92110071;     UymzuZMUPg92110071 = UymzuZMUPg32836011;     UymzuZMUPg32836011 = UymzuZMUPg82190796;     UymzuZMUPg82190796 = UymzuZMUPg11361177;     UymzuZMUPg11361177 = UymzuZMUPg53193993;     UymzuZMUPg53193993 = UymzuZMUPg49795900;     UymzuZMUPg49795900 = UymzuZMUPg128680;     UymzuZMUPg128680 = UymzuZMUPg55705518;     UymzuZMUPg55705518 = UymzuZMUPg46214283;     UymzuZMUPg46214283 = UymzuZMUPg19295843;     UymzuZMUPg19295843 = UymzuZMUPg77722134;     UymzuZMUPg77722134 = UymzuZMUPg72665427;     UymzuZMUPg72665427 = UymzuZMUPg59354651;     UymzuZMUPg59354651 = UymzuZMUPg88520765;     UymzuZMUPg88520765 = UymzuZMUPg34257044;     UymzuZMUPg34257044 = UymzuZMUPg37231317;     UymzuZMUPg37231317 = UymzuZMUPg38605803;     UymzuZMUPg38605803 = UymzuZMUPg7051004;     UymzuZMUPg7051004 = UymzuZMUPg36063584;     UymzuZMUPg36063584 = UymzuZMUPg87500360;     UymzuZMUPg87500360 = UymzuZMUPg95987272;     UymzuZMUPg95987272 = UymzuZMUPg69851777;     UymzuZMUPg69851777 = UymzuZMUPg30853979;     UymzuZMUPg30853979 = UymzuZMUPg98786154;     UymzuZMUPg98786154 = UymzuZMUPg76558089;     UymzuZMUPg76558089 = UymzuZMUPg66600018;     UymzuZMUPg66600018 = UymzuZMUPg25369198;     UymzuZMUPg25369198 = UymzuZMUPg73362236;     UymzuZMUPg73362236 = UymzuZMUPg74412725;     UymzuZMUPg74412725 = UymzuZMUPg35400721;     UymzuZMUPg35400721 = UymzuZMUPg82116894;     UymzuZMUPg82116894 = UymzuZMUPg17160753;     UymzuZMUPg17160753 = UymzuZMUPg6977233;     UymzuZMUPg6977233 = UymzuZMUPg83221217;     UymzuZMUPg83221217 = UymzuZMUPg36941357;     UymzuZMUPg36941357 = UymzuZMUPg27519135;     UymzuZMUPg27519135 = UymzuZMUPg70615306;     UymzuZMUPg70615306 = UymzuZMUPg48333244;     UymzuZMUPg48333244 = UymzuZMUPg80068003;     UymzuZMUPg80068003 = UymzuZMUPg97470842;     UymzuZMUPg97470842 = UymzuZMUPg15561464;     UymzuZMUPg15561464 = UymzuZMUPg4118904;     UymzuZMUPg4118904 = UymzuZMUPg34005547;     UymzuZMUPg34005547 = UymzuZMUPg67569833;     UymzuZMUPg67569833 = UymzuZMUPg55590237;     UymzuZMUPg55590237 = UymzuZMUPg63663234;     UymzuZMUPg63663234 = UymzuZMUPg14469915;     UymzuZMUPg14469915 = UymzuZMUPg20946243;     UymzuZMUPg20946243 = UymzuZMUPg29014294;     UymzuZMUPg29014294 = UymzuZMUPg93618576;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void IoBJRDFzKk82488807() {     float IwVfhuCJPI32275705 = -299610943;    float IwVfhuCJPI9953828 = -304530610;    float IwVfhuCJPI78258628 = -496078496;    float IwVfhuCJPI57314983 = 77615368;    float IwVfhuCJPI27942528 = -181072162;    float IwVfhuCJPI22485162 = -31864718;    float IwVfhuCJPI36558237 = -260168402;    float IwVfhuCJPI3231936 = -532517021;    float IwVfhuCJPI6870163 = -82908358;    float IwVfhuCJPI59869703 = -873673230;    float IwVfhuCJPI9585619 = -163277490;    float IwVfhuCJPI70020275 = -788390661;    float IwVfhuCJPI46107466 = -403112679;    float IwVfhuCJPI42398828 = -628958231;    float IwVfhuCJPI61058454 = -545544083;    float IwVfhuCJPI50196935 = -281367108;    float IwVfhuCJPI61622395 = -271839323;    float IwVfhuCJPI64971287 = -415392603;    float IwVfhuCJPI38453075 = -26967384;    float IwVfhuCJPI8580928 = -580992496;    float IwVfhuCJPI26099771 = 46629841;    float IwVfhuCJPI81533996 = -268826797;    float IwVfhuCJPI5832061 = -612645550;    float IwVfhuCJPI5640776 = -508867720;    float IwVfhuCJPI26051713 = -545402059;    float IwVfhuCJPI6159540 = -117805257;    float IwVfhuCJPI60559349 = -703958717;    float IwVfhuCJPI33729366 = -116671421;    float IwVfhuCJPI76711548 = -770005934;    float IwVfhuCJPI67530467 = -547965770;    float IwVfhuCJPI25390489 = -7467957;    float IwVfhuCJPI77826905 = -921264757;    float IwVfhuCJPI5172495 = 82578890;    float IwVfhuCJPI83641230 = -308884562;    float IwVfhuCJPI24246074 = -627534853;    float IwVfhuCJPI61926568 = -810312432;    float IwVfhuCJPI21307633 = -441370465;    float IwVfhuCJPI32986411 = -574658460;    float IwVfhuCJPI3225839 = 88189024;    float IwVfhuCJPI39735168 = -308431251;    float IwVfhuCJPI85157889 = -679567749;    float IwVfhuCJPI81194986 = 35233025;    float IwVfhuCJPI6857972 = -834939267;    float IwVfhuCJPI20947506 = -826552635;    float IwVfhuCJPI87285406 = 71825507;    float IwVfhuCJPI28519513 = -575756536;    float IwVfhuCJPI25690725 = 38700258;    float IwVfhuCJPI63963800 = -252087229;    float IwVfhuCJPI97096919 = -558584566;    float IwVfhuCJPI3337288 = -862729982;    float IwVfhuCJPI16648283 = -822541485;    float IwVfhuCJPI29002867 = -983186811;    float IwVfhuCJPI41216360 = -130331581;    float IwVfhuCJPI6795006 = -467856295;    float IwVfhuCJPI56389037 = -335836221;    float IwVfhuCJPI50741708 = 69215854;    float IwVfhuCJPI4121768 = -691885061;    float IwVfhuCJPI72617853 = -987210777;    float IwVfhuCJPI31263271 = -376982574;    float IwVfhuCJPI21782989 = 36733095;    float IwVfhuCJPI61925812 = -327906002;    float IwVfhuCJPI2828872 = -43496982;    float IwVfhuCJPI26520388 = -762511088;    float IwVfhuCJPI39339695 = -534942588;    float IwVfhuCJPI34479214 = -766205274;    float IwVfhuCJPI31758713 = -242012734;    float IwVfhuCJPI64847780 = -770969551;    float IwVfhuCJPI62466235 = 5771883;    float IwVfhuCJPI18152755 = 98576622;    float IwVfhuCJPI99131885 = -735231651;    float IwVfhuCJPI28889302 = -839996643;    float IwVfhuCJPI28635984 = -697180863;    float IwVfhuCJPI61745448 = -403581628;    float IwVfhuCJPI98717907 = -718536134;    float IwVfhuCJPI23423039 = -901424747;    float IwVfhuCJPI44904785 = -988603185;    float IwVfhuCJPI74676025 = -433887530;    float IwVfhuCJPI84884554 = -786092915;    float IwVfhuCJPI18355369 = -480693227;    float IwVfhuCJPI97532200 = -969645523;    float IwVfhuCJPI80468814 = -56505515;    float IwVfhuCJPI96595549 = -351871488;    float IwVfhuCJPI36632446 = -558086855;    float IwVfhuCJPI73374260 = -907275952;    float IwVfhuCJPI50882185 = -725424285;    float IwVfhuCJPI96387622 = -24281146;    float IwVfhuCJPI36610546 = -690933177;    float IwVfhuCJPI98377488 = -449564815;    float IwVfhuCJPI27252194 = -973048342;    float IwVfhuCJPI73504365 = -596750708;    float IwVfhuCJPI57804800 = -18427372;    float IwVfhuCJPI48689780 = -454159688;    float IwVfhuCJPI1723141 = -97675887;    float IwVfhuCJPI81442850 = -948544071;    float IwVfhuCJPI77809355 = -980525249;    float IwVfhuCJPI82329017 = -536070768;    float IwVfhuCJPI54674599 = -202255887;    float IwVfhuCJPI67518276 = -199996680;    float IwVfhuCJPI86468291 = 39652638;    float IwVfhuCJPI55526693 = -299610943;     IwVfhuCJPI32275705 = IwVfhuCJPI9953828;     IwVfhuCJPI9953828 = IwVfhuCJPI78258628;     IwVfhuCJPI78258628 = IwVfhuCJPI57314983;     IwVfhuCJPI57314983 = IwVfhuCJPI27942528;     IwVfhuCJPI27942528 = IwVfhuCJPI22485162;     IwVfhuCJPI22485162 = IwVfhuCJPI36558237;     IwVfhuCJPI36558237 = IwVfhuCJPI3231936;     IwVfhuCJPI3231936 = IwVfhuCJPI6870163;     IwVfhuCJPI6870163 = IwVfhuCJPI59869703;     IwVfhuCJPI59869703 = IwVfhuCJPI9585619;     IwVfhuCJPI9585619 = IwVfhuCJPI70020275;     IwVfhuCJPI70020275 = IwVfhuCJPI46107466;     IwVfhuCJPI46107466 = IwVfhuCJPI42398828;     IwVfhuCJPI42398828 = IwVfhuCJPI61058454;     IwVfhuCJPI61058454 = IwVfhuCJPI50196935;     IwVfhuCJPI50196935 = IwVfhuCJPI61622395;     IwVfhuCJPI61622395 = IwVfhuCJPI64971287;     IwVfhuCJPI64971287 = IwVfhuCJPI38453075;     IwVfhuCJPI38453075 = IwVfhuCJPI8580928;     IwVfhuCJPI8580928 = IwVfhuCJPI26099771;     IwVfhuCJPI26099771 = IwVfhuCJPI81533996;     IwVfhuCJPI81533996 = IwVfhuCJPI5832061;     IwVfhuCJPI5832061 = IwVfhuCJPI5640776;     IwVfhuCJPI5640776 = IwVfhuCJPI26051713;     IwVfhuCJPI26051713 = IwVfhuCJPI6159540;     IwVfhuCJPI6159540 = IwVfhuCJPI60559349;     IwVfhuCJPI60559349 = IwVfhuCJPI33729366;     IwVfhuCJPI33729366 = IwVfhuCJPI76711548;     IwVfhuCJPI76711548 = IwVfhuCJPI67530467;     IwVfhuCJPI67530467 = IwVfhuCJPI25390489;     IwVfhuCJPI25390489 = IwVfhuCJPI77826905;     IwVfhuCJPI77826905 = IwVfhuCJPI5172495;     IwVfhuCJPI5172495 = IwVfhuCJPI83641230;     IwVfhuCJPI83641230 = IwVfhuCJPI24246074;     IwVfhuCJPI24246074 = IwVfhuCJPI61926568;     IwVfhuCJPI61926568 = IwVfhuCJPI21307633;     IwVfhuCJPI21307633 = IwVfhuCJPI32986411;     IwVfhuCJPI32986411 = IwVfhuCJPI3225839;     IwVfhuCJPI3225839 = IwVfhuCJPI39735168;     IwVfhuCJPI39735168 = IwVfhuCJPI85157889;     IwVfhuCJPI85157889 = IwVfhuCJPI81194986;     IwVfhuCJPI81194986 = IwVfhuCJPI6857972;     IwVfhuCJPI6857972 = IwVfhuCJPI20947506;     IwVfhuCJPI20947506 = IwVfhuCJPI87285406;     IwVfhuCJPI87285406 = IwVfhuCJPI28519513;     IwVfhuCJPI28519513 = IwVfhuCJPI25690725;     IwVfhuCJPI25690725 = IwVfhuCJPI63963800;     IwVfhuCJPI63963800 = IwVfhuCJPI97096919;     IwVfhuCJPI97096919 = IwVfhuCJPI3337288;     IwVfhuCJPI3337288 = IwVfhuCJPI16648283;     IwVfhuCJPI16648283 = IwVfhuCJPI29002867;     IwVfhuCJPI29002867 = IwVfhuCJPI41216360;     IwVfhuCJPI41216360 = IwVfhuCJPI6795006;     IwVfhuCJPI6795006 = IwVfhuCJPI56389037;     IwVfhuCJPI56389037 = IwVfhuCJPI50741708;     IwVfhuCJPI50741708 = IwVfhuCJPI4121768;     IwVfhuCJPI4121768 = IwVfhuCJPI72617853;     IwVfhuCJPI72617853 = IwVfhuCJPI31263271;     IwVfhuCJPI31263271 = IwVfhuCJPI21782989;     IwVfhuCJPI21782989 = IwVfhuCJPI61925812;     IwVfhuCJPI61925812 = IwVfhuCJPI2828872;     IwVfhuCJPI2828872 = IwVfhuCJPI26520388;     IwVfhuCJPI26520388 = IwVfhuCJPI39339695;     IwVfhuCJPI39339695 = IwVfhuCJPI34479214;     IwVfhuCJPI34479214 = IwVfhuCJPI31758713;     IwVfhuCJPI31758713 = IwVfhuCJPI64847780;     IwVfhuCJPI64847780 = IwVfhuCJPI62466235;     IwVfhuCJPI62466235 = IwVfhuCJPI18152755;     IwVfhuCJPI18152755 = IwVfhuCJPI99131885;     IwVfhuCJPI99131885 = IwVfhuCJPI28889302;     IwVfhuCJPI28889302 = IwVfhuCJPI28635984;     IwVfhuCJPI28635984 = IwVfhuCJPI61745448;     IwVfhuCJPI61745448 = IwVfhuCJPI98717907;     IwVfhuCJPI98717907 = IwVfhuCJPI23423039;     IwVfhuCJPI23423039 = IwVfhuCJPI44904785;     IwVfhuCJPI44904785 = IwVfhuCJPI74676025;     IwVfhuCJPI74676025 = IwVfhuCJPI84884554;     IwVfhuCJPI84884554 = IwVfhuCJPI18355369;     IwVfhuCJPI18355369 = IwVfhuCJPI97532200;     IwVfhuCJPI97532200 = IwVfhuCJPI80468814;     IwVfhuCJPI80468814 = IwVfhuCJPI96595549;     IwVfhuCJPI96595549 = IwVfhuCJPI36632446;     IwVfhuCJPI36632446 = IwVfhuCJPI73374260;     IwVfhuCJPI73374260 = IwVfhuCJPI50882185;     IwVfhuCJPI50882185 = IwVfhuCJPI96387622;     IwVfhuCJPI96387622 = IwVfhuCJPI36610546;     IwVfhuCJPI36610546 = IwVfhuCJPI98377488;     IwVfhuCJPI98377488 = IwVfhuCJPI27252194;     IwVfhuCJPI27252194 = IwVfhuCJPI73504365;     IwVfhuCJPI73504365 = IwVfhuCJPI57804800;     IwVfhuCJPI57804800 = IwVfhuCJPI48689780;     IwVfhuCJPI48689780 = IwVfhuCJPI1723141;     IwVfhuCJPI1723141 = IwVfhuCJPI81442850;     IwVfhuCJPI81442850 = IwVfhuCJPI77809355;     IwVfhuCJPI77809355 = IwVfhuCJPI82329017;     IwVfhuCJPI82329017 = IwVfhuCJPI54674599;     IwVfhuCJPI54674599 = IwVfhuCJPI67518276;     IwVfhuCJPI67518276 = IwVfhuCJPI86468291;     IwVfhuCJPI86468291 = IwVfhuCJPI55526693;     IwVfhuCJPI55526693 = IwVfhuCJPI32275705;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void qPTJCQRsMJ88487157() {     float HWQUWxNsYw41590971 = -202141969;    float HWQUWxNsYw65376750 = -321065113;    float HWQUWxNsYw98410708 = -209719109;    float HWQUWxNsYw15105006 = -114048624;    float HWQUWxNsYw68005767 = -157587319;    float HWQUWxNsYw16028524 = -590733579;    float HWQUWxNsYw10212309 = -59417280;    float HWQUWxNsYw92368091 = -729476169;    float HWQUWxNsYw99678819 = -462969029;    float HWQUWxNsYw28494161 = -694468898;    float HWQUWxNsYw46487603 = -354518563;    float HWQUWxNsYw81258024 = -325760476;    float HWQUWxNsYw41889182 = 11465187;    float HWQUWxNsYw74487469 = -608012335;    float HWQUWxNsYw76334491 = -397074494;    float HWQUWxNsYw55167459 = -308890586;    float HWQUWxNsYw5433163 = -299424410;    float HWQUWxNsYw77163928 = -145449915;    float HWQUWxNsYw20466007 = 19391787;    float HWQUWxNsYw71776275 = -659700337;    float HWQUWxNsYw14779123 = -279070087;    float HWQUWxNsYw5742909 = -91723130;    float HWQUWxNsYw41893327 = -227174550;    float HWQUWxNsYw64847404 = -26028830;    float HWQUWxNsYw89114255 = -864535110;    float HWQUWxNsYw72067357 = -217016898;    float HWQUWxNsYw94317616 = -412847562;    float HWQUWxNsYw4823842 = -623808153;    float HWQUWxNsYw43828455 = -884425369;    float HWQUWxNsYw80311415 = -354050333;    float HWQUWxNsYw95388867 = -718119773;    float HWQUWxNsYw55086269 = -252436052;    float HWQUWxNsYw55031825 = -828512122;    float HWQUWxNsYw72670179 = -892444449;    float HWQUWxNsYw10896349 = -803947447;    float HWQUWxNsYw93751462 = -126537879;    float HWQUWxNsYw58775241 = -42570328;    float HWQUWxNsYw89023209 = -327253823;    float HWQUWxNsYw69451540 = 36973237;    float HWQUWxNsYw15835065 = -15616763;    float HWQUWxNsYw9221024 = -816724167;    float HWQUWxNsYw68846642 = -986039066;    float HWQUWxNsYw28574977 = 43180351;    float HWQUWxNsYw79704406 = -216947523;    float HWQUWxNsYw23235481 = -819950287;    float HWQUWxNsYw98758747 = -901291095;    float HWQUWxNsYw30940356 = -634133888;    float HWQUWxNsYw35434838 = -698630617;    float HWQUWxNsYw63124063 = -794281082;    float HWQUWxNsYw72975189 = -655743685;    float HWQUWxNsYw53615992 = -558417482;    float HWQUWxNsYw93219908 = -531173028;    float HWQUWxNsYw29224018 = -818108487;    float HWQUWxNsYw11376250 = -827709413;    float HWQUWxNsYw73708035 = -270754305;    float HWQUWxNsYw35848063 = -10418840;    float HWQUWxNsYw23483423 = 6109436;    float HWQUWxNsYw33563304 = -83690280;    float HWQUWxNsYw25990750 = -249513515;    float HWQUWxNsYw95938410 = -940570421;    float HWQUWxNsYw21710907 = -77886017;    float HWQUWxNsYw5388468 = -435609127;    float HWQUWxNsYw48539637 = -845050800;    float HWQUWxNsYw19367405 = -8918697;    float HWQUWxNsYw33105293 = -976349125;    float HWQUWxNsYw91401334 = -2082511;    float HWQUWxNsYw26226200 = -497248354;    float HWQUWxNsYw69219003 = -96090365;    float HWQUWxNsYw63591120 = -804064888;    float HWQUWxNsYw82583029 = -170536615;    float HWQUWxNsYw96392218 = -166320258;    float HWQUWxNsYw16409954 = -972170588;    float HWQUWxNsYw7712389 = -82423153;    float HWQUWxNsYw4630942 = -964991450;    float HWQUWxNsYw62555252 = -842976170;    float HWQUWxNsYw45932480 = -293031022;    float HWQUWxNsYw77167931 = -34903481;    float HWQUWxNsYw62188921 = 89772973;    float HWQUWxNsYw41611924 = -206078544;    float HWQUWxNsYw90355507 = -963244015;    float HWQUWxNsYw41127001 = -582883011;    float HWQUWxNsYw58882778 = -714216945;    float HWQUWxNsYw41699778 = -829527071;    float HWQUWxNsYw70853265 = -128681685;    float HWQUWxNsYw26695424 = -795632851;    float HWQUWxNsYw2168960 = -86946746;    float HWQUWxNsYw25862252 = -434327565;    float HWQUWxNsYw43655575 = 99197290;    float HWQUWxNsYw98962143 = -521690144;    float HWQUWxNsYw75048286 = -693528608;    float HWQUWxNsYw70268039 = -32647316;    float HWQUWxNsYw25211937 = -958880048;    float HWQUWxNsYw63032459 = 22259692;    float HWQUWxNsYw73513129 = -22456342;    float HWQUWxNsYw94124157 = -937730746;    float HWQUWxNsYw3832556 = -281115041;    float HWQUWxNsYw20307006 = -40988266;    float HWQUWxNsYw9207573 = -947900953;    float HWQUWxNsYw46599114 = -240598399;    float HWQUWxNsYw31834146 = -202141969;     HWQUWxNsYw41590971 = HWQUWxNsYw65376750;     HWQUWxNsYw65376750 = HWQUWxNsYw98410708;     HWQUWxNsYw98410708 = HWQUWxNsYw15105006;     HWQUWxNsYw15105006 = HWQUWxNsYw68005767;     HWQUWxNsYw68005767 = HWQUWxNsYw16028524;     HWQUWxNsYw16028524 = HWQUWxNsYw10212309;     HWQUWxNsYw10212309 = HWQUWxNsYw92368091;     HWQUWxNsYw92368091 = HWQUWxNsYw99678819;     HWQUWxNsYw99678819 = HWQUWxNsYw28494161;     HWQUWxNsYw28494161 = HWQUWxNsYw46487603;     HWQUWxNsYw46487603 = HWQUWxNsYw81258024;     HWQUWxNsYw81258024 = HWQUWxNsYw41889182;     HWQUWxNsYw41889182 = HWQUWxNsYw74487469;     HWQUWxNsYw74487469 = HWQUWxNsYw76334491;     HWQUWxNsYw76334491 = HWQUWxNsYw55167459;     HWQUWxNsYw55167459 = HWQUWxNsYw5433163;     HWQUWxNsYw5433163 = HWQUWxNsYw77163928;     HWQUWxNsYw77163928 = HWQUWxNsYw20466007;     HWQUWxNsYw20466007 = HWQUWxNsYw71776275;     HWQUWxNsYw71776275 = HWQUWxNsYw14779123;     HWQUWxNsYw14779123 = HWQUWxNsYw5742909;     HWQUWxNsYw5742909 = HWQUWxNsYw41893327;     HWQUWxNsYw41893327 = HWQUWxNsYw64847404;     HWQUWxNsYw64847404 = HWQUWxNsYw89114255;     HWQUWxNsYw89114255 = HWQUWxNsYw72067357;     HWQUWxNsYw72067357 = HWQUWxNsYw94317616;     HWQUWxNsYw94317616 = HWQUWxNsYw4823842;     HWQUWxNsYw4823842 = HWQUWxNsYw43828455;     HWQUWxNsYw43828455 = HWQUWxNsYw80311415;     HWQUWxNsYw80311415 = HWQUWxNsYw95388867;     HWQUWxNsYw95388867 = HWQUWxNsYw55086269;     HWQUWxNsYw55086269 = HWQUWxNsYw55031825;     HWQUWxNsYw55031825 = HWQUWxNsYw72670179;     HWQUWxNsYw72670179 = HWQUWxNsYw10896349;     HWQUWxNsYw10896349 = HWQUWxNsYw93751462;     HWQUWxNsYw93751462 = HWQUWxNsYw58775241;     HWQUWxNsYw58775241 = HWQUWxNsYw89023209;     HWQUWxNsYw89023209 = HWQUWxNsYw69451540;     HWQUWxNsYw69451540 = HWQUWxNsYw15835065;     HWQUWxNsYw15835065 = HWQUWxNsYw9221024;     HWQUWxNsYw9221024 = HWQUWxNsYw68846642;     HWQUWxNsYw68846642 = HWQUWxNsYw28574977;     HWQUWxNsYw28574977 = HWQUWxNsYw79704406;     HWQUWxNsYw79704406 = HWQUWxNsYw23235481;     HWQUWxNsYw23235481 = HWQUWxNsYw98758747;     HWQUWxNsYw98758747 = HWQUWxNsYw30940356;     HWQUWxNsYw30940356 = HWQUWxNsYw35434838;     HWQUWxNsYw35434838 = HWQUWxNsYw63124063;     HWQUWxNsYw63124063 = HWQUWxNsYw72975189;     HWQUWxNsYw72975189 = HWQUWxNsYw53615992;     HWQUWxNsYw53615992 = HWQUWxNsYw93219908;     HWQUWxNsYw93219908 = HWQUWxNsYw29224018;     HWQUWxNsYw29224018 = HWQUWxNsYw11376250;     HWQUWxNsYw11376250 = HWQUWxNsYw73708035;     HWQUWxNsYw73708035 = HWQUWxNsYw35848063;     HWQUWxNsYw35848063 = HWQUWxNsYw23483423;     HWQUWxNsYw23483423 = HWQUWxNsYw33563304;     HWQUWxNsYw33563304 = HWQUWxNsYw25990750;     HWQUWxNsYw25990750 = HWQUWxNsYw95938410;     HWQUWxNsYw95938410 = HWQUWxNsYw21710907;     HWQUWxNsYw21710907 = HWQUWxNsYw5388468;     HWQUWxNsYw5388468 = HWQUWxNsYw48539637;     HWQUWxNsYw48539637 = HWQUWxNsYw19367405;     HWQUWxNsYw19367405 = HWQUWxNsYw33105293;     HWQUWxNsYw33105293 = HWQUWxNsYw91401334;     HWQUWxNsYw91401334 = HWQUWxNsYw26226200;     HWQUWxNsYw26226200 = HWQUWxNsYw69219003;     HWQUWxNsYw69219003 = HWQUWxNsYw63591120;     HWQUWxNsYw63591120 = HWQUWxNsYw82583029;     HWQUWxNsYw82583029 = HWQUWxNsYw96392218;     HWQUWxNsYw96392218 = HWQUWxNsYw16409954;     HWQUWxNsYw16409954 = HWQUWxNsYw7712389;     HWQUWxNsYw7712389 = HWQUWxNsYw4630942;     HWQUWxNsYw4630942 = HWQUWxNsYw62555252;     HWQUWxNsYw62555252 = HWQUWxNsYw45932480;     HWQUWxNsYw45932480 = HWQUWxNsYw77167931;     HWQUWxNsYw77167931 = HWQUWxNsYw62188921;     HWQUWxNsYw62188921 = HWQUWxNsYw41611924;     HWQUWxNsYw41611924 = HWQUWxNsYw90355507;     HWQUWxNsYw90355507 = HWQUWxNsYw41127001;     HWQUWxNsYw41127001 = HWQUWxNsYw58882778;     HWQUWxNsYw58882778 = HWQUWxNsYw41699778;     HWQUWxNsYw41699778 = HWQUWxNsYw70853265;     HWQUWxNsYw70853265 = HWQUWxNsYw26695424;     HWQUWxNsYw26695424 = HWQUWxNsYw2168960;     HWQUWxNsYw2168960 = HWQUWxNsYw25862252;     HWQUWxNsYw25862252 = HWQUWxNsYw43655575;     HWQUWxNsYw43655575 = HWQUWxNsYw98962143;     HWQUWxNsYw98962143 = HWQUWxNsYw75048286;     HWQUWxNsYw75048286 = HWQUWxNsYw70268039;     HWQUWxNsYw70268039 = HWQUWxNsYw25211937;     HWQUWxNsYw25211937 = HWQUWxNsYw63032459;     HWQUWxNsYw63032459 = HWQUWxNsYw73513129;     HWQUWxNsYw73513129 = HWQUWxNsYw94124157;     HWQUWxNsYw94124157 = HWQUWxNsYw3832556;     HWQUWxNsYw3832556 = HWQUWxNsYw20307006;     HWQUWxNsYw20307006 = HWQUWxNsYw9207573;     HWQUWxNsYw9207573 = HWQUWxNsYw46599114;     HWQUWxNsYw46599114 = HWQUWxNsYw31834146;     HWQUWxNsYw31834146 = HWQUWxNsYw41590971;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void EMmJgfVQUr63854539() {     double OZGjJTywUW93037502 = -107826627;    double OZGjJTywUW8183202 = -657587893;    double OZGjJTywUW7003277 = -417988951;    double OZGjJTywUW33444497 = -400046919;    double OZGjJTywUW84549840 = 23309746;    double OZGjJTywUW80284909 = 25338993;    double OZGjJTywUW70968911 = -807830752;    double OZGjJTywUW85988005 = -876225143;    double OZGjJTywUW83397314 = -18263499;    double OZGjJTywUW78690618 = -386660283;    double OZGjJTywUW78788112 = -605279757;    double OZGjJTywUW86045546 = 77561505;    double OZGjJTywUW43913270 = -129031784;    double OZGjJTywUW49275266 = -191029954;    double OZGjJTywUW54783117 = 12802842;    double OZGjJTywUW43316685 = -933719691;    double OZGjJTywUW39069301 = 8593881;    double OZGjJTywUW14121827 = -190087145;    double OZGjJTywUW82145922 = -545521429;    double OZGjJTywUW14876293 = -1298238;    double OZGjJTywUW68331488 = 57359674;    double OZGjJTywUW86752008 = -558188446;    double OZGjJTywUW33210279 = 15656779;    double OZGjJTywUW56536680 = -251594308;    double OZGjJTywUW58168013 = -281552324;    double OZGjJTywUW46983278 = -962478257;    double OZGjJTywUW16341425 = -510664768;    double OZGjJTywUW53190779 = -4102717;    double OZGjJTywUW1759151 = -691738986;    double OZGjJTywUW94716317 = -169341666;    double OZGjJTywUW19457586 = 49698728;    double OZGjJTywUW83514924 = -529940743;    double OZGjJTywUW10717955 = -119468418;    double OZGjJTywUW73551943 = -105569736;    double OZGjJTywUW43761939 = -773102105;    double OZGjJTywUW82221307 = -841982756;    double OZGjJTywUW45186107 = -944913022;    double OZGjJTywUW84930381 = -212987509;    double OZGjJTywUW80576136 = -806705198;    double OZGjJTywUW9032840 = -404326602;    double OZGjJTywUW28570015 = -439307649;    double OZGjJTywUW28566593 = -33129463;    double OZGjJTywUW16350173 = -494944550;    double OZGjJTywUW56197493 = -755021904;    double OZGjJTywUW85249013 = -982479347;    double OZGjJTywUW56434262 = -897829273;    double OZGjJTywUW1489701 = -829053597;    double OZGjJTywUW58423422 = -602777168;    double OZGjJTywUW27102999 = -439697535;    double OZGjJTywUW91158737 = -570297414;    double OZGjJTywUW47351555 = -789883170;    double OZGjJTywUW51015622 = -222197736;    double OZGjJTywUW84365342 = -50117638;    double OZGjJTywUW75555050 = -932092702;    double OZGjJTywUW95523051 = 32374399;    double OZGjJTywUW6285494 = -549638182;    double OZGjJTywUW74972922 = -573244672;    double OZGjJTywUW50466596 = -66394644;    double OZGjJTywUW75276483 = -18494596;    double OZGjJTywUW37566563 = -14211998;    double OZGjJTywUW63943485 = -463996239;    double OZGjJTywUW17778133 = -703728035;    double OZGjJTywUW84228855 = -84486157;    double OZGjJTywUW88680996 = -848921833;    double OZGjJTywUW59233033 = -336359012;    double OZGjJTywUW95273188 = 24660986;    double OZGjJTywUW75327591 = -802970078;    double OZGjJTywUW70361326 = 76537952;    double OZGjJTywUW5513327 = -417927849;    double OZGjJTywUW72561810 = -145214403;    double OZGjJTywUW98130578 = -988806669;    double OZGjJTywUW54138919 = -778418610;    double OZGjJTywUW33545690 = -383381948;    double OZGjJTywUW73113083 = -41194828;    double OZGjJTywUW86306277 = -561990589;    double OZGjJTywUW39764895 = -909510864;    double OZGjJTywUW70401835 = 36756104;    double OZGjJTywUW77012785 = -229321317;    double OZGjJTywUW71287667 = -269114961;    double OZGjJTywUW1733752 = -383723051;    double OZGjJTywUW45493578 = -33424661;    double OZGjJTywUW57918002 = -907887600;    double OZGjJTywUW26087780 = -564405183;    double OZGjJTywUW10600414 = -21441572;    double OZGjJTywUW47364763 = -379458497;    double OZGjJTywUW68441963 = -728103537;    double OZGjJTywUW99149581 = -379823106;    double OZGjJTywUW35162905 = -187375717;    double OZGjJTywUW78028892 = -37944136;    double OZGjJTywUW37476445 = -123463924;    double OZGjJTywUW7248385 = -168738084;    double OZGjJTywUW94719510 = -778518379;    double OZGjJTywUW9653899 = -94492914;    double OZGjJTywUW43009573 = -692493201;    double OZGjJTywUW45089354 = -940330363;    double OZGjJTywUW10791883 = -735579615;    double OZGjJTywUW44337738 = -948643306;    double OZGjJTywUW27669176 = -646022718;    double OZGjJTywUW96964460 = -318662893;    double OZGjJTywUW89975825 = -107826627;     OZGjJTywUW93037502 = OZGjJTywUW8183202;     OZGjJTywUW8183202 = OZGjJTywUW7003277;     OZGjJTywUW7003277 = OZGjJTywUW33444497;     OZGjJTywUW33444497 = OZGjJTywUW84549840;     OZGjJTywUW84549840 = OZGjJTywUW80284909;     OZGjJTywUW80284909 = OZGjJTywUW70968911;     OZGjJTywUW70968911 = OZGjJTywUW85988005;     OZGjJTywUW85988005 = OZGjJTywUW83397314;     OZGjJTywUW83397314 = OZGjJTywUW78690618;     OZGjJTywUW78690618 = OZGjJTywUW78788112;     OZGjJTywUW78788112 = OZGjJTywUW86045546;     OZGjJTywUW86045546 = OZGjJTywUW43913270;     OZGjJTywUW43913270 = OZGjJTywUW49275266;     OZGjJTywUW49275266 = OZGjJTywUW54783117;     OZGjJTywUW54783117 = OZGjJTywUW43316685;     OZGjJTywUW43316685 = OZGjJTywUW39069301;     OZGjJTywUW39069301 = OZGjJTywUW14121827;     OZGjJTywUW14121827 = OZGjJTywUW82145922;     OZGjJTywUW82145922 = OZGjJTywUW14876293;     OZGjJTywUW14876293 = OZGjJTywUW68331488;     OZGjJTywUW68331488 = OZGjJTywUW86752008;     OZGjJTywUW86752008 = OZGjJTywUW33210279;     OZGjJTywUW33210279 = OZGjJTywUW56536680;     OZGjJTywUW56536680 = OZGjJTywUW58168013;     OZGjJTywUW58168013 = OZGjJTywUW46983278;     OZGjJTywUW46983278 = OZGjJTywUW16341425;     OZGjJTywUW16341425 = OZGjJTywUW53190779;     OZGjJTywUW53190779 = OZGjJTywUW1759151;     OZGjJTywUW1759151 = OZGjJTywUW94716317;     OZGjJTywUW94716317 = OZGjJTywUW19457586;     OZGjJTywUW19457586 = OZGjJTywUW83514924;     OZGjJTywUW83514924 = OZGjJTywUW10717955;     OZGjJTywUW10717955 = OZGjJTywUW73551943;     OZGjJTywUW73551943 = OZGjJTywUW43761939;     OZGjJTywUW43761939 = OZGjJTywUW82221307;     OZGjJTywUW82221307 = OZGjJTywUW45186107;     OZGjJTywUW45186107 = OZGjJTywUW84930381;     OZGjJTywUW84930381 = OZGjJTywUW80576136;     OZGjJTywUW80576136 = OZGjJTywUW9032840;     OZGjJTywUW9032840 = OZGjJTywUW28570015;     OZGjJTywUW28570015 = OZGjJTywUW28566593;     OZGjJTywUW28566593 = OZGjJTywUW16350173;     OZGjJTywUW16350173 = OZGjJTywUW56197493;     OZGjJTywUW56197493 = OZGjJTywUW85249013;     OZGjJTywUW85249013 = OZGjJTywUW56434262;     OZGjJTywUW56434262 = OZGjJTywUW1489701;     OZGjJTywUW1489701 = OZGjJTywUW58423422;     OZGjJTywUW58423422 = OZGjJTywUW27102999;     OZGjJTywUW27102999 = OZGjJTywUW91158737;     OZGjJTywUW91158737 = OZGjJTywUW47351555;     OZGjJTywUW47351555 = OZGjJTywUW51015622;     OZGjJTywUW51015622 = OZGjJTywUW84365342;     OZGjJTywUW84365342 = OZGjJTywUW75555050;     OZGjJTywUW75555050 = OZGjJTywUW95523051;     OZGjJTywUW95523051 = OZGjJTywUW6285494;     OZGjJTywUW6285494 = OZGjJTywUW74972922;     OZGjJTywUW74972922 = OZGjJTywUW50466596;     OZGjJTywUW50466596 = OZGjJTywUW75276483;     OZGjJTywUW75276483 = OZGjJTywUW37566563;     OZGjJTywUW37566563 = OZGjJTywUW63943485;     OZGjJTywUW63943485 = OZGjJTywUW17778133;     OZGjJTywUW17778133 = OZGjJTywUW84228855;     OZGjJTywUW84228855 = OZGjJTywUW88680996;     OZGjJTywUW88680996 = OZGjJTywUW59233033;     OZGjJTywUW59233033 = OZGjJTywUW95273188;     OZGjJTywUW95273188 = OZGjJTywUW75327591;     OZGjJTywUW75327591 = OZGjJTywUW70361326;     OZGjJTywUW70361326 = OZGjJTywUW5513327;     OZGjJTywUW5513327 = OZGjJTywUW72561810;     OZGjJTywUW72561810 = OZGjJTywUW98130578;     OZGjJTywUW98130578 = OZGjJTywUW54138919;     OZGjJTywUW54138919 = OZGjJTywUW33545690;     OZGjJTywUW33545690 = OZGjJTywUW73113083;     OZGjJTywUW73113083 = OZGjJTywUW86306277;     OZGjJTywUW86306277 = OZGjJTywUW39764895;     OZGjJTywUW39764895 = OZGjJTywUW70401835;     OZGjJTywUW70401835 = OZGjJTywUW77012785;     OZGjJTywUW77012785 = OZGjJTywUW71287667;     OZGjJTywUW71287667 = OZGjJTywUW1733752;     OZGjJTywUW1733752 = OZGjJTywUW45493578;     OZGjJTywUW45493578 = OZGjJTywUW57918002;     OZGjJTywUW57918002 = OZGjJTywUW26087780;     OZGjJTywUW26087780 = OZGjJTywUW10600414;     OZGjJTywUW10600414 = OZGjJTywUW47364763;     OZGjJTywUW47364763 = OZGjJTywUW68441963;     OZGjJTywUW68441963 = OZGjJTywUW99149581;     OZGjJTywUW99149581 = OZGjJTywUW35162905;     OZGjJTywUW35162905 = OZGjJTywUW78028892;     OZGjJTywUW78028892 = OZGjJTywUW37476445;     OZGjJTywUW37476445 = OZGjJTywUW7248385;     OZGjJTywUW7248385 = OZGjJTywUW94719510;     OZGjJTywUW94719510 = OZGjJTywUW9653899;     OZGjJTywUW9653899 = OZGjJTywUW43009573;     OZGjJTywUW43009573 = OZGjJTywUW45089354;     OZGjJTywUW45089354 = OZGjJTywUW10791883;     OZGjJTywUW10791883 = OZGjJTywUW44337738;     OZGjJTywUW44337738 = OZGjJTywUW27669176;     OZGjJTywUW27669176 = OZGjJTywUW96964460;     OZGjJTywUW96964460 = OZGjJTywUW89975825;     OZGjJTywUW89975825 = OZGjJTywUW93037502;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void ztHlmjnUme69852889() {     double BVrkjpkOVM2352769 = -10357654;    double BVrkjpkOVM63606123 = -674122396;    double BVrkjpkOVM27155357 = -131629564;    double BVrkjpkOVM91234518 = -591710911;    double BVrkjpkOVM24613080 = 46794588;    double BVrkjpkOVM73828271 = -533529868;    double BVrkjpkOVM44622982 = -607079630;    double BVrkjpkOVM75124162 = 26815709;    double BVrkjpkOVM76205971 = -398324170;    double BVrkjpkOVM47315075 = -207455951;    double BVrkjpkOVM15690097 = -796520830;    double BVrkjpkOVM97283295 = -559808311;    double BVrkjpkOVM39694986 = -814453918;    double BVrkjpkOVM81363906 = -170084058;    double BVrkjpkOVM70059155 = -938727570;    double BVrkjpkOVM48287210 = -961243169;    double BVrkjpkOVM82880068 = -18991206;    double BVrkjpkOVM26314468 = 79855542;    double BVrkjpkOVM64158854 = -499162258;    double BVrkjpkOVM78071640 = -80006080;    double BVrkjpkOVM57010840 = -268340254;    double BVrkjpkOVM10960921 = -381084779;    double BVrkjpkOVM69271545 = -698872221;    double BVrkjpkOVM15743310 = -868755418;    double BVrkjpkOVM21230556 = -600685374;    double BVrkjpkOVM12891095 = 38310102;    double BVrkjpkOVM50099691 = -219553613;    double BVrkjpkOVM24285254 = -511239450;    double BVrkjpkOVM68876058 = -806158422;    double BVrkjpkOVM7497266 = 24573771;    double BVrkjpkOVM89455964 = -660953089;    double BVrkjpkOVM60774287 = -961112038;    double BVrkjpkOVM60577285 = 69440569;    double BVrkjpkOVM62580891 = -689129623;    double BVrkjpkOVM30412215 = -949514699;    double BVrkjpkOVM14046202 = -158208203;    double BVrkjpkOVM82653714 = -546112885;    double BVrkjpkOVM40967180 = 34417128;    double BVrkjpkOVM46801838 = -857920985;    double BVrkjpkOVM85132736 = -111512114;    double BVrkjpkOVM52633149 = -576464067;    double BVrkjpkOVM16218249 = 45598446;    double BVrkjpkOVM38067178 = -716824932;    double BVrkjpkOVM14954394 = -145416792;    double BVrkjpkOVM21199088 = -774255141;    double BVrkjpkOVM26673497 = -123363832;    double BVrkjpkOVM6739332 = -401887742;    double BVrkjpkOVM29894459 = 50679444;    double BVrkjpkOVM93130143 = -675394051;    double BVrkjpkOVM60796639 = -363311116;    double BVrkjpkOVM84319264 = -525759166;    double BVrkjpkOVM15232664 = -870183954;    double BVrkjpkOVM72373000 = -737894544;    double BVrkjpkOVM80136293 = -191945819;    double BVrkjpkOVM12842050 = 97456315;    double BVrkjpkOVM91391848 = -629272876;    double BVrkjpkOVM94334578 = -975250175;    double BVrkjpkOVM11412048 = -262874147;    double BVrkjpkOVM70003963 = -991025537;    double BVrkjpkOVM11721985 = -991515514;    double BVrkjpkOVM23728581 = -213976255;    double BVrkjpkOVM20337729 = 4159819;    double BVrkjpkOVM6248105 = -167025870;    double BVrkjpkOVM68708705 = -322897942;    double BVrkjpkOVM57859111 = -546502863;    double BVrkjpkOVM54915809 = -835408792;    double BVrkjpkOVM36706011 = -529248880;    double BVrkjpkOVM77114094 = -25324296;    double BVrkjpkOVM50951692 = -220569359;    double BVrkjpkOVM56012953 = -680519367;    double BVrkjpkOVM65633495 = -315130284;    double BVrkjpkOVM41912889 = 46591665;    double BVrkjpkOVM79512630 = -62223473;    double BVrkjpkOVM79026117 = -287650144;    double BVrkjpkOVM25438491 = -503542013;    double BVrkjpkOVM40792591 = -213938701;    double BVrkjpkOVM72893742 = -664259847;    double BVrkjpkOVM54317152 = -453455429;    double BVrkjpkOVM94544221 = 5499723;    double BVrkjpkOVM94557058 = -377321543;    double BVrkjpkOVM6151764 = -559802157;    double BVrkjpkOVM20205232 = -170233057;    double BVrkjpkOVM31155111 = -835845399;    double BVrkjpkOVM8079419 = -342847306;    double BVrkjpkOVM23178002 = -449667063;    double BVrkjpkOVM74223300 = -790769136;    double BVrkjpkOVM88401287 = -123217494;    double BVrkjpkOVM80440991 = -738613612;    double BVrkjpkOVM49738842 = -686585938;    double BVrkjpkOVM39020366 = -220241824;    double BVrkjpkOVM19711624 = -182958028;    double BVrkjpkOVM71241667 = -183238739;    double BVrkjpkOVM70963217 = 25442665;    double BVrkjpkOVM35079853 = -866405472;    double BVrkjpkOVM61404156 = -897535860;    double BVrkjpkOVM32295421 = -480623887;    double BVrkjpkOVM9970145 = -787375685;    double BVrkjpkOVM69358472 = -293926991;    double BVrkjpkOVM57095282 = -598913930;    double BVrkjpkOVM66283278 = -10357654;     BVrkjpkOVM2352769 = BVrkjpkOVM63606123;     BVrkjpkOVM63606123 = BVrkjpkOVM27155357;     BVrkjpkOVM27155357 = BVrkjpkOVM91234518;     BVrkjpkOVM91234518 = BVrkjpkOVM24613080;     BVrkjpkOVM24613080 = BVrkjpkOVM73828271;     BVrkjpkOVM73828271 = BVrkjpkOVM44622982;     BVrkjpkOVM44622982 = BVrkjpkOVM75124162;     BVrkjpkOVM75124162 = BVrkjpkOVM76205971;     BVrkjpkOVM76205971 = BVrkjpkOVM47315075;     BVrkjpkOVM47315075 = BVrkjpkOVM15690097;     BVrkjpkOVM15690097 = BVrkjpkOVM97283295;     BVrkjpkOVM97283295 = BVrkjpkOVM39694986;     BVrkjpkOVM39694986 = BVrkjpkOVM81363906;     BVrkjpkOVM81363906 = BVrkjpkOVM70059155;     BVrkjpkOVM70059155 = BVrkjpkOVM48287210;     BVrkjpkOVM48287210 = BVrkjpkOVM82880068;     BVrkjpkOVM82880068 = BVrkjpkOVM26314468;     BVrkjpkOVM26314468 = BVrkjpkOVM64158854;     BVrkjpkOVM64158854 = BVrkjpkOVM78071640;     BVrkjpkOVM78071640 = BVrkjpkOVM57010840;     BVrkjpkOVM57010840 = BVrkjpkOVM10960921;     BVrkjpkOVM10960921 = BVrkjpkOVM69271545;     BVrkjpkOVM69271545 = BVrkjpkOVM15743310;     BVrkjpkOVM15743310 = BVrkjpkOVM21230556;     BVrkjpkOVM21230556 = BVrkjpkOVM12891095;     BVrkjpkOVM12891095 = BVrkjpkOVM50099691;     BVrkjpkOVM50099691 = BVrkjpkOVM24285254;     BVrkjpkOVM24285254 = BVrkjpkOVM68876058;     BVrkjpkOVM68876058 = BVrkjpkOVM7497266;     BVrkjpkOVM7497266 = BVrkjpkOVM89455964;     BVrkjpkOVM89455964 = BVrkjpkOVM60774287;     BVrkjpkOVM60774287 = BVrkjpkOVM60577285;     BVrkjpkOVM60577285 = BVrkjpkOVM62580891;     BVrkjpkOVM62580891 = BVrkjpkOVM30412215;     BVrkjpkOVM30412215 = BVrkjpkOVM14046202;     BVrkjpkOVM14046202 = BVrkjpkOVM82653714;     BVrkjpkOVM82653714 = BVrkjpkOVM40967180;     BVrkjpkOVM40967180 = BVrkjpkOVM46801838;     BVrkjpkOVM46801838 = BVrkjpkOVM85132736;     BVrkjpkOVM85132736 = BVrkjpkOVM52633149;     BVrkjpkOVM52633149 = BVrkjpkOVM16218249;     BVrkjpkOVM16218249 = BVrkjpkOVM38067178;     BVrkjpkOVM38067178 = BVrkjpkOVM14954394;     BVrkjpkOVM14954394 = BVrkjpkOVM21199088;     BVrkjpkOVM21199088 = BVrkjpkOVM26673497;     BVrkjpkOVM26673497 = BVrkjpkOVM6739332;     BVrkjpkOVM6739332 = BVrkjpkOVM29894459;     BVrkjpkOVM29894459 = BVrkjpkOVM93130143;     BVrkjpkOVM93130143 = BVrkjpkOVM60796639;     BVrkjpkOVM60796639 = BVrkjpkOVM84319264;     BVrkjpkOVM84319264 = BVrkjpkOVM15232664;     BVrkjpkOVM15232664 = BVrkjpkOVM72373000;     BVrkjpkOVM72373000 = BVrkjpkOVM80136293;     BVrkjpkOVM80136293 = BVrkjpkOVM12842050;     BVrkjpkOVM12842050 = BVrkjpkOVM91391848;     BVrkjpkOVM91391848 = BVrkjpkOVM94334578;     BVrkjpkOVM94334578 = BVrkjpkOVM11412048;     BVrkjpkOVM11412048 = BVrkjpkOVM70003963;     BVrkjpkOVM70003963 = BVrkjpkOVM11721985;     BVrkjpkOVM11721985 = BVrkjpkOVM23728581;     BVrkjpkOVM23728581 = BVrkjpkOVM20337729;     BVrkjpkOVM20337729 = BVrkjpkOVM6248105;     BVrkjpkOVM6248105 = BVrkjpkOVM68708705;     BVrkjpkOVM68708705 = BVrkjpkOVM57859111;     BVrkjpkOVM57859111 = BVrkjpkOVM54915809;     BVrkjpkOVM54915809 = BVrkjpkOVM36706011;     BVrkjpkOVM36706011 = BVrkjpkOVM77114094;     BVrkjpkOVM77114094 = BVrkjpkOVM50951692;     BVrkjpkOVM50951692 = BVrkjpkOVM56012953;     BVrkjpkOVM56012953 = BVrkjpkOVM65633495;     BVrkjpkOVM65633495 = BVrkjpkOVM41912889;     BVrkjpkOVM41912889 = BVrkjpkOVM79512630;     BVrkjpkOVM79512630 = BVrkjpkOVM79026117;     BVrkjpkOVM79026117 = BVrkjpkOVM25438491;     BVrkjpkOVM25438491 = BVrkjpkOVM40792591;     BVrkjpkOVM40792591 = BVrkjpkOVM72893742;     BVrkjpkOVM72893742 = BVrkjpkOVM54317152;     BVrkjpkOVM54317152 = BVrkjpkOVM94544221;     BVrkjpkOVM94544221 = BVrkjpkOVM94557058;     BVrkjpkOVM94557058 = BVrkjpkOVM6151764;     BVrkjpkOVM6151764 = BVrkjpkOVM20205232;     BVrkjpkOVM20205232 = BVrkjpkOVM31155111;     BVrkjpkOVM31155111 = BVrkjpkOVM8079419;     BVrkjpkOVM8079419 = BVrkjpkOVM23178002;     BVrkjpkOVM23178002 = BVrkjpkOVM74223300;     BVrkjpkOVM74223300 = BVrkjpkOVM88401287;     BVrkjpkOVM88401287 = BVrkjpkOVM80440991;     BVrkjpkOVM80440991 = BVrkjpkOVM49738842;     BVrkjpkOVM49738842 = BVrkjpkOVM39020366;     BVrkjpkOVM39020366 = BVrkjpkOVM19711624;     BVrkjpkOVM19711624 = BVrkjpkOVM71241667;     BVrkjpkOVM71241667 = BVrkjpkOVM70963217;     BVrkjpkOVM70963217 = BVrkjpkOVM35079853;     BVrkjpkOVM35079853 = BVrkjpkOVM61404156;     BVrkjpkOVM61404156 = BVrkjpkOVM32295421;     BVrkjpkOVM32295421 = BVrkjpkOVM9970145;     BVrkjpkOVM9970145 = BVrkjpkOVM69358472;     BVrkjpkOVM69358472 = BVrkjpkOVM57095282;     BVrkjpkOVM57095282 = BVrkjpkOVM66283278;     BVrkjpkOVM66283278 = BVrkjpkOVM2352769;}
// Junk Finished

// Junk Code By Troll Face & Thaisen's Gen
void vJKFrwWzbT28093771() {     double UyEoOrYIyP41009897 = -267263691;    double UyEoOrYIyP88927845 = -861608724;    double UyEoOrYIyP68651730 = -460104331;    double UyEoOrYIyP94173114 = -413777344;    double UyEoOrYIyP52066100 = -614669543;    double UyEoOrYIyP12177303 = 9749612;    double UyEoOrYIyP68445494 = -112089265;    double UyEoOrYIyP76631988 = -627503666;    double UyEoOrYIyP5889739 = -398683582;    double UyEoOrYIyP89612585 = -463963140;    double UyEoOrYIyP30663526 = -912332045;    double UyEoOrYIyP77266151 = -616892695;    double UyEoOrYIyP87502228 = -511997469;    double UyEoOrYIyP83449734 = -693263004;    double UyEoOrYIyP47787282 = -603220829;    double UyEoOrYIyP95293640 = -651578711;    double UyEoOrYIyP88690768 = 42994267;    double UyEoOrYIyP41214147 = -58107197;    double UyEoOrYIyP84892274 = -363597412;    double UyEoOrYIyP54554042 = -228372067;    double UyEoOrYIyP70223861 = -395827416;    double UyEoOrYIyP52070333 = -382687689;    double UyEoOrYIyP40267400 = -204515918;    double UyEoOrYIyP84750509 = -674436145;    double UyEoOrYIyP48611400 = -570607590;    double UyEoOrYIyP64775409 = -970823023;    double UyEoOrYIyP45818754 = -934064396;    double UyEoOrYIyP23001029 = -22219403;    double UyEoOrYIyP16528924 = -172289955;    double UyEoOrYIyP57195988 = 1452905;    double UyEoOrYIyP85795025 = -910264455;    double UyEoOrYIyP78246047 = -355807932;    double UyEoOrYIyP12943677 = 3366950;    double UyEoOrYIyP86527702 = -485841558;    double UyEoOrYIyP21396292 = -438294439;    double UyEoOrYIyP28706027 = -574972848;    double UyEoOrYIyP88271204 = -58372918;    double UyEoOrYIyP14129169 = 70672194;    double UyEoOrYIyP69807846 = -566089552;    double UyEoOrYIyP38002228 = 89479050;    double UyEoOrYIyP4478668 = -417545505;    double UyEoOrYIyP61084574 = -300076658;    double UyEoOrYIyP71100584 = -411081515;    double UyEoOrYIyP26434892 = -120801152;    double UyEoOrYIyP45213156 = -730643942;    double UyEoOrYIyP30934866 = -502605906;    double UyEoOrYIyP13555552 = -339932710;    double UyEoOrYIyP11134868 = -552495006;    double UyEoOrYIyP72374224 = -489090460;    double UyEoOrYIyP42052478 = -560340826;    double UyEoOrYIyP66357019 = -293618049;    double UyEoOrYIyP52125459 = -831096198;    double UyEoOrYIyP80753349 = -289927417;    double UyEoOrYIyP4740504 = -422837292;    double UyEoOrYIyP57869910 = -583420134;    double UyEoOrYIyP88939563 = -884576003;    double UyEoOrYIyP48660445 = -557092807;    double UyEoOrYIyP83901220 = -785668187;    double UyEoOrYIyP45561715 = -843169754;    double UyEoOrYIyP87290691 = -643846521;    double UyEoOrYIyP66358549 = -56185993;    double UyEoOrYIyP45444465 = 10130138;    double UyEoOrYIyP60103064 = -355213711;    double UyEoOrYIyP48693750 = -300136488;    double UyEoOrYIyP3817561 = -553698685;    double UyEoOrYIyP52417478 = -456524113;    double UyEoOrYIyP64322474 = -520259646;    double UyEoOrYIyP974527 = 73844088;    double UyEoOrYIyP62053443 = -154968566;    double UyEoOrYIyP19081256 = 71752018;    double UyEoOrYIyP7022437 = -493205793;    double UyEoOrYIyP74561599 = 72322073;    double UyEoOrYIyP71406301 = -492017645;    double UyEoOrYIyP46890046 = -353076462;    double UyEoOrYIyP50075375 = -810826563;    double UyEoOrYIyP9139287 = 4249242;    double UyEoOrYIyP80969749 = -971606174;    double UyEoOrYIyP13832509 = 16285233;    double UyEoOrYIyP39537354 = -943792203;    double UyEoOrYIyP17676534 = 31998316;    double UyEoOrYIyP51219857 = -530890313;    double UyEoOrYIyP34683887 = -281569390;    double UyEoOrYIyP50626805 = -533128944;    double UyEoOrYIyP74476446 = -611949130;    double UyEoOrYIyP90838969 = -704929046;    double UyEoOrYIyP33669567 = 20831742;    double UyEoOrYIyP97492697 = 34119485;    double UyEoOrYIyP8203173 = -573795759;    double UyEoOrYIyP28657792 = -902421425;    double UyEoOrYIyP32456729 = -553718437;    double UyEoOrYIyP80045581 = 82119958;    double UyEoOrYIyP4369984 = -272704732;    double UyEoOrYIyP68567454 = -86158053;    double UyEoOrYIyP82517155 = -922243032;    double UyEoOrYIyP71643678 = -854334958;    double UyEoOrYIyP59034202 = -327675644;    double UyEoOrYIyP981510 = -944862948;    double UyEoOrYIyP22406834 = -10945027;    double UyEoOrYIyP22617331 = -567102467;    double UyEoOrYIyP92795677 = -267263691;     UyEoOrYIyP41009897 = UyEoOrYIyP88927845;     UyEoOrYIyP88927845 = UyEoOrYIyP68651730;     UyEoOrYIyP68651730 = UyEoOrYIyP94173114;     UyEoOrYIyP94173114 = UyEoOrYIyP52066100;     UyEoOrYIyP52066100 = UyEoOrYIyP12177303;     UyEoOrYIyP12177303 = UyEoOrYIyP68445494;     UyEoOrYIyP68445494 = UyEoOrYIyP76631988;     UyEoOrYIyP76631988 = UyEoOrYIyP5889739;     UyEoOrYIyP5889739 = UyEoOrYIyP89612585;     UyEoOrYIyP89612585 = UyEoOrYIyP30663526;     UyEoOrYIyP30663526 = UyEoOrYIyP77266151;     UyEoOrYIyP77266151 = UyEoOrYIyP87502228;     UyEoOrYIyP87502228 = UyEoOrYIyP83449734;     UyEoOrYIyP83449734 = UyEoOrYIyP47787282;     UyEoOrYIyP47787282 = UyEoOrYIyP95293640;     UyEoOrYIyP95293640 = UyEoOrYIyP88690768;     UyEoOrYIyP88690768 = UyEoOrYIyP41214147;     UyEoOrYIyP41214147 = UyEoOrYIyP84892274;     UyEoOrYIyP84892274 = UyEoOrYIyP54554042;     UyEoOrYIyP54554042 = UyEoOrYIyP70223861;     UyEoOrYIyP70223861 = UyEoOrYIyP52070333;     UyEoOrYIyP52070333 = UyEoOrYIyP40267400;     UyEoOrYIyP40267400 = UyEoOrYIyP84750509;     UyEoOrYIyP84750509 = UyEoOrYIyP48611400;     UyEoOrYIyP48611400 = UyEoOrYIyP64775409;     UyEoOrYIyP64775409 = UyEoOrYIyP45818754;     UyEoOrYIyP45818754 = UyEoOrYIyP23001029;     UyEoOrYIyP23001029 = UyEoOrYIyP16528924;     UyEoOrYIyP16528924 = UyEoOrYIyP57195988;     UyEoOrYIyP57195988 = UyEoOrYIyP85795025;     UyEoOrYIyP85795025 = UyEoOrYIyP78246047;     UyEoOrYIyP78246047 = UyEoOrYIyP12943677;     UyEoOrYIyP12943677 = UyEoOrYIyP86527702;     UyEoOrYIyP86527702 = UyEoOrYIyP21396292;     UyEoOrYIyP21396292 = UyEoOrYIyP28706027;     UyEoOrYIyP28706027 = UyEoOrYIyP88271204;     UyEoOrYIyP88271204 = UyEoOrYIyP14129169;     UyEoOrYIyP14129169 = UyEoOrYIyP69807846;     UyEoOrYIyP69807846 = UyEoOrYIyP38002228;     UyEoOrYIyP38002228 = UyEoOrYIyP4478668;     UyEoOrYIyP4478668 = UyEoOrYIyP61084574;     UyEoOrYIyP61084574 = UyEoOrYIyP71100584;     UyEoOrYIyP71100584 = UyEoOrYIyP26434892;     UyEoOrYIyP26434892 = UyEoOrYIyP45213156;     UyEoOrYIyP45213156 = UyEoOrYIyP30934866;     UyEoOrYIyP30934866 = UyEoOrYIyP13555552;     UyEoOrYIyP13555552 = UyEoOrYIyP11134868;     UyEoOrYIyP11134868 = UyEoOrYIyP72374224;     UyEoOrYIyP72374224 = UyEoOrYIyP42052478;     UyEoOrYIyP42052478 = UyEoOrYIyP66357019;     UyEoOrYIyP66357019 = UyEoOrYIyP52125459;     UyEoOrYIyP52125459 = UyEoOrYIyP80753349;     UyEoOrYIyP80753349 = UyEoOrYIyP4740504;     UyEoOrYIyP4740504 = UyEoOrYIyP57869910;     UyEoOrYIyP57869910 = UyEoOrYIyP88939563;     UyEoOrYIyP88939563 = UyEoOrYIyP48660445;     UyEoOrYIyP48660445 = UyEoOrYIyP83901220;     UyEoOrYIyP83901220 = UyEoOrYIyP45561715;     UyEoOrYIyP45561715 = UyEoOrYIyP87290691;     UyEoOrYIyP87290691 = UyEoOrYIyP66358549;     UyEoOrYIyP66358549 = UyEoOrYIyP45444465;     UyEoOrYIyP45444465 = UyEoOrYIyP60103064;     UyEoOrYIyP60103064 = UyEoOrYIyP48693750;     UyEoOrYIyP48693750 = UyEoOrYIyP3817561;     UyEoOrYIyP3817561 = UyEoOrYIyP52417478;     UyEoOrYIyP52417478 = UyEoOrYIyP64322474;     UyEoOrYIyP64322474 = UyEoOrYIyP974527;     UyEoOrYIyP974527 = UyEoOrYIyP62053443;     UyEoOrYIyP62053443 = UyEoOrYIyP19081256;     UyEoOrYIyP19081256 = UyEoOrYIyP7022437;     UyEoOrYIyP7022437 = UyEoOrYIyP74561599;     UyEoOrYIyP74561599 = UyEoOrYIyP71406301;     UyEoOrYIyP71406301 = UyEoOrYIyP46890046;     UyEoOrYIyP46890046 = UyEoOrYIyP50075375;     UyEoOrYIyP50075375 = UyEoOrYIyP9139287;     UyEoOrYIyP9139287 = UyEoOrYIyP80969749;     UyEoOrYIyP80969749 = UyEoOrYIyP13832509;     UyEoOrYIyP13832509 = UyEoOrYIyP39537354;     UyEoOrYIyP39537354 = UyEoOrYIyP17676534;     UyEoOrYIyP17676534 = UyEoOrYIyP51219857;     UyEoOrYIyP51219857 = UyEoOrYIyP34683887;     UyEoOrYIyP34683887 = UyEoOrYIyP50626805;     UyEoOrYIyP50626805 = UyEoOrYIyP74476446;     UyEoOrYIyP74476446 = UyEoOrYIyP90838969;     UyEoOrYIyP90838969 = UyEoOrYIyP33669567;     UyEoOrYIyP33669567 = UyEoOrYIyP97492697;     UyEoOrYIyP97492697 = UyEoOrYIyP8203173;     UyEoOrYIyP8203173 = UyEoOrYIyP28657792;     UyEoOrYIyP28657792 = UyEoOrYIyP32456729;     UyEoOrYIyP32456729 = UyEoOrYIyP80045581;     UyEoOrYIyP80045581 = UyEoOrYIyP4369984;     UyEoOrYIyP4369984 = UyEoOrYIyP68567454;     UyEoOrYIyP68567454 = UyEoOrYIyP82517155;     UyEoOrYIyP82517155 = UyEoOrYIyP71643678;     UyEoOrYIyP71643678 = UyEoOrYIyP59034202;     UyEoOrYIyP59034202 = UyEoOrYIyP981510;     UyEoOrYIyP981510 = UyEoOrYIyP22406834;     UyEoOrYIyP22406834 = UyEoOrYIyP22617331;     UyEoOrYIyP22617331 = UyEoOrYIyP92795677;     UyEoOrYIyP92795677 = UyEoOrYIyP41009897;}
// Junk Finished
